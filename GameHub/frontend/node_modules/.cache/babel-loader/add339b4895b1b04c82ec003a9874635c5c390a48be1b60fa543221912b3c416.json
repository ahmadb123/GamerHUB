{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/utility/CheckAccountType.js\";\nimport { FaDesktop, FaXbox, FaPlaystation, FaGamepad } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const checkAccountType = platform => {\n  if (!Array.isArray(platform)) {\n    throw new Error(\"Expected an array of platforms\");\n  }\n  let platfromCount = {\n    pc: 0,\n    xbox: 0,\n    playstation: 0,\n    other: 0\n  };\n  platform.forEach(platform => {\n    switch (platform.toLowerCase()) {\n      case \"pc\":\n        platfromCount.pc++;\n        break;\n      case \"xbox one\":\n      case \"xbox series s/x\":\n      case \"xbox\":\n        platfromCount.xbox++;\n        break;\n      case \"playstation 5\":\n      case \"ps4\":\n      case \"ps5\":\n      case \"playstation\":\n        platfromCount.playstation++;\n        break;\n      default:\n        platfromCount.other++;\n        break;\n    }\n  });\n  if (platfromCount > 2) {\n    return /*#__PURE__*/_jsxDEV(FaGamepad, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n};","map":{"version":3,"names":["FaDesktop","FaXbox","FaPlaystation","FaGamepad","jsxDEV","_jsxDEV","checkAccountType","platform","Array","isArray","Error","platfromCount","pc","xbox","playstation","other","forEach","toLowerCase","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/utility/CheckAccountType.js"],"sourcesContent":["import { FaDesktop, FaXbox, FaPlaystation, FaGamepad } from \"react-icons/fa\";\n\nexport const checkAccountType = (platform) =>{\n    if (!Array.isArray(platform)) {\n        throw new Error(\"Expected an array of platforms\");\n    }\n    let platfromCount = {\n        pc :0,\n        xbox:0,\n        playstation:0,\n        other:0\n    };\n    platform.forEach(platform => {\n        switch (platform.toLowerCase()) {\n        case \"pc\":\n            platfromCount.pc++;\n            break;\n        case \"xbox one\":\n        case \"xbox series s/x\":\n        case \"xbox\":\n            platfromCount.xbox++;\n            break;\n        case \"playstation 5\":\n        case \"ps4\":\n        case \"ps5\":\n        case \"playstation\":\n            platfromCount.playstation++;\n            break;\n        default:\n            platfromCount.other++;\n            break;\n        }\n    });\n    if(platfromCount > 2) {\n        return <FaGamepad />;\n    }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,aAAa,EAAEC,SAAS,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7E,OAAO,MAAMC,gBAAgB,GAAIC,QAAQ,IAAI;EACzC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;IAC1B,MAAM,IAAIG,KAAK,CAAC,gCAAgC,CAAC;EACrD;EACA,IAAIC,aAAa,GAAG;IAChBC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAC,CAAC;IACNC,WAAW,EAAC,CAAC;IACbC,KAAK,EAAC;EACV,CAAC;EACDR,QAAQ,CAACS,OAAO,CAACT,QAAQ,IAAI;IACzB,QAAQA,QAAQ,CAACU,WAAW,CAAC,CAAC;MAC9B,KAAK,IAAI;QACLN,aAAa,CAACC,EAAE,EAAE;QAClB;MACJ,KAAK,UAAU;MACf,KAAK,iBAAiB;MACtB,KAAK,MAAM;QACPD,aAAa,CAACE,IAAI,EAAE;QACpB;MACJ,KAAK,eAAe;MACpB,KAAK,KAAK;MACV,KAAK,KAAK;MACV,KAAK,aAAa;QACdF,aAAa,CAACG,WAAW,EAAE;QAC3B;MACJ;QACIH,aAAa,CAACI,KAAK,EAAE;QACrB;IACJ;EACJ,CAAC,CAAC;EACF,IAAGJ,aAAa,GAAG,CAAC,EAAE;IAClB,oBAAON,OAAA,CAACF,SAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACxB;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}