{"ast":null,"code":"// src/utils/oauth.js\n\nconst CLIENT_ID = '0a23b968-9e79-4cba-b337-862adab7a8e2'; // Replace with your MSA Application (client) ID\nconst REDIRECT_URI = 'http://localhost:3000'; // Ensure this matches your registered redirect URI\nconst AUTHORIZATION_ENDPOINT = 'https://login.live.com/oauth20_authorize.srf';\nconst TOKEN_ENDPOINT = 'https://login.live.com/oauth20_token.srf';\nconst SCOPES = 'XboxLive.signin XboxLive.offline_access'; // Scopes required for Xbox Live\n\n// Generate a random string for state and code verifier\nexport const generateRandomString = length => {\n  const array = new Uint8Array(length);\n  window.crypto.getRandomValues(array);\n  return Array.from(array, dec => ('0' + dec.toString(16)).substr(-2)).join('');\n};\n\n// Generate Code Challenge from Code Verifier\nexport const generateCodeChallenge = async codeVerifier => {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(codeVerifier);\n  const digest = await window.crypto.subtle.digest('SHA-256', data);\n  const base64String = btoa(String.fromCharCode(...new Uint8Array(digest)));\n  return base64String.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n};","map":{"version":3,"names":["CLIENT_ID","REDIRECT_URI","AUTHORIZATION_ENDPOINT","TOKEN_ENDPOINT","SCOPES","generateRandomString","length","array","Uint8Array","window","crypto","getRandomValues","Array","from","dec","toString","substr","join","generateCodeChallenge","codeVerifier","encoder","TextEncoder","data","encode","digest","subtle","base64String","btoa","String","fromCharCode","replace"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/utils/oauth.js"],"sourcesContent":["// src/utils/oauth.js\n\nconst CLIENT_ID = '0a23b968-9e79-4cba-b337-862adab7a8e2'; // Replace with your MSA Application (client) ID\nconst REDIRECT_URI = 'http://localhost:3000'; // Ensure this matches your registered redirect URI\nconst AUTHORIZATION_ENDPOINT = 'https://login.live.com/oauth20_authorize.srf';\nconst TOKEN_ENDPOINT = 'https://login.live.com/oauth20_token.srf';\nconst SCOPES = 'XboxLive.signin XboxLive.offline_access'; // Scopes required for Xbox Live\n\n// Generate a random string for state and code verifier\nexport const generateRandomString = (length) => {\n  const array = new Uint8Array(length);\n  window.crypto.getRandomValues(array);\n  return Array.from(array, dec => ('0' + dec.toString(16)).substr(-2)).join('');\n};\n\n// Generate Code Challenge from Code Verifier\nexport const generateCodeChallenge = async (codeVerifier) => {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(codeVerifier);\n  const digest = await window.crypto.subtle.digest('SHA-256', data);\n  const base64String = btoa(String.fromCharCode(...new Uint8Array(digest)));\n  return base64String.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n};\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAG,sCAAsC,CAAC,CAAC;AAC1D,MAAMC,YAAY,GAAG,uBAAuB,CAAC,CAAC;AAC9C,MAAMC,sBAAsB,GAAG,8CAA8C;AAC7E,MAAMC,cAAc,GAAG,0CAA0C;AACjE,MAAMC,MAAM,GAAG,yCAAyC,CAAC,CAAC;;AAE1D;AACA,OAAO,MAAMC,oBAAoB,GAAIC,MAAM,IAAK;EAC9C,MAAMC,KAAK,GAAG,IAAIC,UAAU,CAACF,MAAM,CAAC;EACpCG,MAAM,CAACC,MAAM,CAACC,eAAe,CAACJ,KAAK,CAAC;EACpC,OAAOK,KAAK,CAACC,IAAI,CAACN,KAAK,EAAEO,GAAG,IAAI,CAAC,GAAG,GAAGA,GAAG,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAEC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;AAC/E,CAAC;;AAED;AACA,OAAO,MAAMC,qBAAqB,GAAG,MAAOC,YAAY,IAAK;EAC3D,MAAMC,OAAO,GAAG,IAAIC,WAAW,CAAC,CAAC;EACjC,MAAMC,IAAI,GAAGF,OAAO,CAACG,MAAM,CAACJ,YAAY,CAAC;EACzC,MAAMK,MAAM,GAAG,MAAMf,MAAM,CAACC,MAAM,CAACe,MAAM,CAACD,MAAM,CAAC,SAAS,EAAEF,IAAI,CAAC;EACjE,MAAMI,YAAY,GAAGC,IAAI,CAACC,MAAM,CAACC,YAAY,CAAC,GAAG,IAAIrB,UAAU,CAACgB,MAAM,CAAC,CAAC,CAAC;EACzE,OAAOE,YAAY,CAACI,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;AAChF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}