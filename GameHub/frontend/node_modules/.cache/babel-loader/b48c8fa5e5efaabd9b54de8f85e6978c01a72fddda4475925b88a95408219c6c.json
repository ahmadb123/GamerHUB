{"ast":null,"code":"// import React, { useEffect } from \"react\";\n// import { useNavigate } from 'react-router-dom';\n// import { toast } from \"react-toastify\";\n\n// const apiUrl = 'http://localhost:8080';\n\n// function LandingPage() {\n//     const navigate = useNavigate();\n\n//     const validateLocalSession = () => {\n//         const platform = localStorage.getItem(\"platform\");\n\n//         console.log(\"Validating session for platform:\", platform);\n\n//         if (platform) {\n//             // Check for platform-specific tokens\n//             if (platform === \"xbox\") {\n//                 const uhs = localStorage.getItem(\"uhs\");\n//                 const XSTS_token = localStorage.getItem(\"XSTS_token\");\n//                 console.log(\"Xbox tokens - UHS:\", uhs, \"XSTS_token:\", XSTS_token);\n//                 if (uhs && XSTS_token) {\n//                     return true; // Xbox tokens are valid\n//                 }\n//             } else {\n//                 const token = localStorage.getItem(`${platform}Token`);\n//                 console.log(`${platform} token:`, token);\n//                 if (token) {\n//                     return true; // Generic token for PSN/Steam is valid\n//                 }\n//             }\n//         }\n\n//         // If tokens are missing or invalid\n//         console.log(\"Invalid or missing tokens. Clearing platform.\");\n//         localStorage.removeItem(\"platform\");\n//         return false;\n//     };\n\n//     useEffect(() => {\n//         if (validateLocalSession()) {\n//             navigate(\"/main\"); // Navigate to the main page if session is valid\n//         }\n//     }, [navigate]);\n\n//     const handleLogin = async (platform) => {\n//         try {\n//             const response = await fetch(`${apiUrl}/api/auth/login/${platform}`, {\n//                 method: \"GET\",\n//                 credentials: \"include\",\n//             });\n\n//             if (!response.ok) {\n//                 throw new Error(`Failed to initiate login for ${platform}. Status: ${response.status}`);\n//             }\n\n//             const data = await response.json();\n//             if (data.redirectUrl) {\n//                 localStorage.setItem(\"platform\", platform);\n//                 window.location.href = data.redirectUrl; // Redirect to platform login page\n//             } else {\n//                 toast.error(\"Redirect URL not found.\");\n//             }\n//         } catch (error) {\n//             toast.error(`Login failed: ${error.message}`);\n//         }\n//     };\n\n//     return (\n//         <div className=\"landing-page\" style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n//             <h1>Welcome to GamerHub</h1>\n//             <p>Select a platform to log in:</p>\n//             <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\", marginTop: \"20px\" }}>\n//                 <button onClick={() => handleLogin(\"xbox\")} style={buttonStyle(\"green\")}>\n//                     Xbox Login\n//                 </button>\n//                 <button onClick={() => handleLogin(\"psn\")} style={buttonStyle(\"blue\")}>\n//                     PSN Login\n//                 </button>\n//                 <button onClick={() => handleLogin(\"steam\")} style={buttonStyle(\"gray\")}>\n//                     Steam Login\n//                 </button>\n//             </div>\n//         </div>\n//     );\n// }\n\n// const buttonStyle = (color) => ({\n//     padding: \"10px 20px\",\n//     fontSize: \"16px\",\n//     cursor: \"pointer\",\n//     backgroundColor: color,\n//     color: \"#ffffff\",\n//     border: \"none\",\n//     borderRadius: \"5px\",\n// });\n\n// export default LandingPage;","map":{"version":3,"names":[],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/LandingPage.js"],"sourcesContent":["// import React, { useEffect } from \"react\";\n// import { useNavigate } from 'react-router-dom';\n// import { toast } from \"react-toastify\";\n\n// const apiUrl = 'http://localhost:8080';\n\n// function LandingPage() {\n//     const navigate = useNavigate();\n\n//     const validateLocalSession = () => {\n//         const platform = localStorage.getItem(\"platform\");\n\n//         console.log(\"Validating session for platform:\", platform);\n\n//         if (platform) {\n//             // Check for platform-specific tokens\n//             if (platform === \"xbox\") {\n//                 const uhs = localStorage.getItem(\"uhs\");\n//                 const XSTS_token = localStorage.getItem(\"XSTS_token\");\n//                 console.log(\"Xbox tokens - UHS:\", uhs, \"XSTS_token:\", XSTS_token);\n//                 if (uhs && XSTS_token) {\n//                     return true; // Xbox tokens are valid\n//                 }\n//             } else {\n//                 const token = localStorage.getItem(`${platform}Token`);\n//                 console.log(`${platform} token:`, token);\n//                 if (token) {\n//                     return true; // Generic token for PSN/Steam is valid\n//                 }\n//             }\n//         }\n\n//         // If tokens are missing or invalid\n//         console.log(\"Invalid or missing tokens. Clearing platform.\");\n//         localStorage.removeItem(\"platform\");\n//         return false;\n//     };\n\n//     useEffect(() => {\n//         if (validateLocalSession()) {\n//             navigate(\"/main\"); // Navigate to the main page if session is valid\n//         }\n//     }, [navigate]);\n\n//     const handleLogin = async (platform) => {\n//         try {\n//             const response = await fetch(`${apiUrl}/api/auth/login/${platform}`, {\n//                 method: \"GET\",\n//                 credentials: \"include\",\n//             });\n\n//             if (!response.ok) {\n//                 throw new Error(`Failed to initiate login for ${platform}. Status: ${response.status}`);\n//             }\n\n//             const data = await response.json();\n//             if (data.redirectUrl) {\n//                 localStorage.setItem(\"platform\", platform);\n//                 window.location.href = data.redirectUrl; // Redirect to platform login page\n//             } else {\n//                 toast.error(\"Redirect URL not found.\");\n//             }\n//         } catch (error) {\n//             toast.error(`Login failed: ${error.message}`);\n//         }\n//     };\n\n//     return (\n//         <div className=\"landing-page\" style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n//             <h1>Welcome to GamerHub</h1>\n//             <p>Select a platform to log in:</p>\n//             <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\", marginTop: \"20px\" }}>\n//                 <button onClick={() => handleLogin(\"xbox\")} style={buttonStyle(\"green\")}>\n//                     Xbox Login\n//                 </button>\n//                 <button onClick={() => handleLogin(\"psn\")} style={buttonStyle(\"blue\")}>\n//                     PSN Login\n//                 </button>\n//                 <button onClick={() => handleLogin(\"steam\")} style={buttonStyle(\"gray\")}>\n//                     Steam Login\n//                 </button>\n//             </div>\n//         </div>\n//     );\n// }\n\n// const buttonStyle = (color) => ({\n//     padding: \"10px 20px\",\n//     fontSize: \"16px\",\n//     cursor: \"pointer\",\n//     backgroundColor: color,\n//     color: \"#ffffff\",\n//     border: \"none\",\n//     borderRadius: \"5px\",\n// });\n\n// export default LandingPage;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}