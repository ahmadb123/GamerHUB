{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // Fetch the Xbox login URL from the backend\n  const fetchLoginUrl = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/auth/login\", {\n        method: \"GET\",\n        credentials: \"include\" // Include cookies if needed\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const url = await response.text(); // The backend sends the Xbox login URL\n      console.log(\"Authorization URL:\", url); // Log the URL for debugging\n      window.location.href = url; // Redirect to the Xbox login URL\n    } catch (error) {\n      console.error(\"Error fetching login URL:\", error);\n      setError(\"Failed to initiate login. Please try again.\");\n    }\n  };\n\n  // Handle the callback from Xbox\n  const handleCallback = async () => {\n    const params = new URLSearchParams(window.location.search);\n    const code = params.get(\"code\"); // Get the 'code' parameter from the URL\n\n    if (code) {\n      try {\n        const response = await fetch(`http://localhost:8080/auth/callback?code=${code}`, {\n          method: \"GET\",\n          credentials: \"include\" // Include cookies if needed\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(\"Access Token:\", data.access_token); // Log the access token\n        setAccessToken(data.access_token); // Display the access token\n      } catch (error) {\n        console.error(\"Error exchanging code for access token:\", error);\n        setError(\"Failed to retrieve access token. Please try again.\");\n      }\n    }\n  };\n  React.useEffect(() => {\n    handleCallback();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"GamerHub Xbox Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), !accessToken ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchLoginUrl,\n      style: {\n        padding: \"10px 20px\",\n        fontSize: \"16px\"\n      },\n      children: \"Login with Xbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Access Token:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: accessToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Hwc5ZDK5l7wZh1bZKC8Mlmo5Jbs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","accessToken","setAccessToken","error","setError","fetchLoginUrl","response","fetch","method","credentials","ok","Error","status","url","text","console","log","window","location","href","handleCallback","params","URLSearchParams","search","code","get","data","json","access_token","useEffect","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","padding","fontSize","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // Fetch the Xbox login URL from the backend\n  const fetchLoginUrl = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/auth/login\", {\n        method: \"GET\",\n        credentials: \"include\", // Include cookies if needed\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const url = await response.text(); // The backend sends the Xbox login URL\n      console.log(\"Authorization URL:\", url); // Log the URL for debugging\n      window.location.href = url; // Redirect to the Xbox login URL\n    } catch (error) {\n      console.error(\"Error fetching login URL:\", error);\n      setError(\"Failed to initiate login. Please try again.\");\n    }\n  };\n\n  // Handle the callback from Xbox\n  const handleCallback = async () => {\n    const params = new URLSearchParams(window.location.search);\n    const code = params.get(\"code\"); // Get the 'code' parameter from the URL\n\n    if (code) {\n      try {\n        const response = await fetch(`http://localhost:8080/auth/callback?code=${code}`, {\n          method: \"GET\",\n          credentials: \"include\", // Include cookies if needed\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        console.log(\"Access Token:\", data.access_token); // Log the access token\n        setAccessToken(data.access_token); // Display the access token\n      } catch (error) {\n        console.error(\"Error exchanging code for access token:\", error);\n        setError(\"Failed to retrieve access token. Please try again.\");\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    handleCallback();\n  }, []);\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n      <h1>GamerHub Xbox Login</h1>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      {!accessToken ? (\n        <button onClick={fetchLoginUrl} style={{ padding: \"10px 20px\", fontSize: \"16px\" }}>\n          Login with Xbox\n        </button>\n      ) : (\n        <div>\n          <h2>Access Token:</h2>\n          <p>{accessToken}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}