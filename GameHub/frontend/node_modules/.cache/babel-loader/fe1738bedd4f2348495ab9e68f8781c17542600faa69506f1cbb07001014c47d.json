{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/ClipsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getGameClips } from \"../service/XboxGameClips\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClipsPage() {\n  _s();\n  const [fetchClips, setFetchClips] = useState([]); // State to store game clips\n  const [isFetchingClips, setIsFetchingClips] = useState(true); // State for loading    \n\n  const fetchGameClips = async () => {\n    try {\n      const gameClips = await XboxGameClips();\n      if (gameClips.length === 0) {\n        console.log(\"No game clips found.\");\n      } else {\n        setFetchClips(gameClips);\n      }\n    } catch (error) {\n      console.error(\"Error fetching game clips:\", error);\n    } finally {\n      setIsFetchingClips(false);\n    }\n  };\n  useEffect(() => {\n    fetchGameClips();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clips-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Xbox Game Clips\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), isFetchingClips ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading game clips...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clips-grid\",\n      children: fetchClips.map((clip, index) => {\n        var _clip$thumbnails, _clip$gameClipUris;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clip-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: clip.titleName || \"Untitled Clip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Recorded on: \", new Date(clip.dateRecorded).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), (_clip$thumbnails = clip.thumbnails) === null || _clip$thumbnails === void 0 ? void 0 : _clip$thumbnails.map((thumbnail, thumbnailIndex) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: thumbnail.uri,\n            alt: \"Game clip thumbnail\",\n            className: \"clip-thumbnail\"\n          }, thumbnailIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this)), (_clip$gameClipUris = clip.gameClipUris) === null || _clip$gameClipUris === void 0 ? void 0 : _clip$gameClipUris.map((uri, uriIndex) => /*#__PURE__*/_jsxDEV(\"video\", {\n            src: uri.uri,\n            controls: true,\n            className: \"clip-video\",\n            children: \"Your browser does not support the video tag.\"\n          }, uriIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(ClipsPage, \"x3rjmhneKArWn30rRhAC2hHnrJ0=\");\n_c = ClipsPage;\nexport default ClipsPage;\nvar _c;\n$RefreshReg$(_c, \"ClipsPage\");","map":{"version":3,"names":["React","useState","useEffect","getGameClips","jsxDEV","_jsxDEV","ClipsPage","_s","fetchClips","setFetchClips","isFetchingClips","setIsFetchingClips","fetchGameClips","gameClips","XboxGameClips","length","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","clip","index","_clip$thumbnails","_clip$gameClipUris","titleName","Date","dateRecorded","toLocaleDateString","thumbnails","thumbnail","thumbnailIndex","src","uri","alt","gameClipUris","uriIndex","controls","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/ClipsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getGameClips } from \"../service/XboxGameClips\";\n\nfunction ClipsPage() {\n    const [fetchClips, setFetchClips] = useState([]); // State to store game clips\n    const [isFetchingClips, setIsFetchingClips] = useState(true); // State for loading    \n\n    const fetchGameClips = async () => {\n        try {\n            const gameClips = await XboxGameClips();\n            if (gameClips.length === 0) {\n                console.log(\"No game clips found.\");\n            } else {\n                setFetchClips(gameClips);\n            }\n        } catch (error) {\n            console.error(\"Error fetching game clips:\", error);\n        } finally {\n            setIsFetchingClips(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchGameClips();\n    }, []);\n\n    return (\n        <div className=\"clips-container\">\n            <h2>Xbox Game Clips</h2>\n            {isFetchingClips ? (\n                <p>Loading game clips...</p>\n            ) : (\n                <div className=\"clips-grid\">\n                    {fetchClips.map((clip, index) => (\n                        <div key={index} className=\"clip-card\">\n                            <h1>{clip.titleName || \"Untitled Clip\"}</h1>\n                            <p>Recorded on: {new Date(clip.dateRecorded).toLocaleDateString()}</p>\n                            {/* Display thumbnails */}\n                            {clip.thumbnails?.map((thumbnail, thumbnailIndex) => (\n                                <img\n                                    src={thumbnail.uri}\n                                    alt=\"Game clip thumbnail\"\n                                    key={thumbnailIndex}\n                                    className=\"clip-thumbnail\"\n                                />\n                            ))}\n                            {/* Display video clips */}\n                            {clip.gameClipUris?.map((uri, uriIndex) => (\n                                <video\n                                    src={uri.uri}\n                                    controls\n                                    key={uriIndex}\n                                    className=\"clip-video\"\n                                >\n                                    Your browser does not support the video tag.\n                                </video>\n                            ))}\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ClipsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}