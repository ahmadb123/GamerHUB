{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/News.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { fetchAllNews, searchForGame, getGenres } from \"../service/NewsService\";\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\nimport \"../assests/News.css\";\nimport { checkAccountType } from \"../utility/CheckAccountType\";\nimport { fetchGameTrailers } from \"../service/GameTrailersFromYoutubeService\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction News() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const selectedGenre = searchParams.get('genre') || '';\n  const [newsData, setNewsData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const textRef = useRef(\"\");\n  const navigate = useNavigate();\n  const username = localStorage.getItem(\"username\");\n  const [genres, setGenres] = useState([]); // Added genres state\n  const [hoveredGameSlug, setHoveredGameSlug] = useState(null);\n  const [gameTrailers, setGameTrailers] = useState({});\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") handleSearch();\n  };\n  const fetchTrailersForGame = async game => {\n    try {\n      const data = await fetchGameTrailers({\n        gameName: game.name\n      });\n      setGameTrailers(data.items);\n      if (gameTrailers.length > 0) {\n        console.log(\"failed to fetch trailers\");\n      } else {\n        console.log(\"fetched trailers\");\n      }\n    } catch (error) {\n      console.error('Error fetching trailer:', error);\n    } finally {\n      setGameTrailers(false);\n    }\n  };\n  const handleImageClick = async game => {\n    await fetchTrailersForGame(game);\n    navigate(`/news/game/${game.id}`);\n  };\n  const handleSearch = async () => {\n    const inputValue = textRef.current.value.trim();\n    try {\n      if (!inputValue) {\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } else {\n        const results = await searchForGame(inputValue);\n        setNewsData(results || []);\n      }\n    } catch (err) {\n      setError(err);\n    }\n    textRef.current.value = \"\";\n  };\n  useEffect(() => {\n    async function getNews() {\n      try {\n        setLoading(true);\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getNews();\n  }, [selectedGenre]);\n  useEffect(() => {\n    async function fetchGenreOptions() {\n      try {\n        const data = await getGenres();\n        setGenres(data);\n      } catch (err) {\n        console.error(\"Error fetching genres:\", err);\n      }\n    }\n    fetchGenreOptions();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"News and Trending Games For \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"genre-select\",\n        style: {\n          marginRight: \"0.5rem\"\n        },\n        children: \"Filter by Genre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"genre-select\",\n        value: selectedGenre,\n        onChange: e => navigate(e.target.value ? `/news?genre=${e.target.value}` : '/news'),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Genres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre.slug,\n          children: genre.name\n        }, genre.slug, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: textRef,\n        type: \"text\",\n        placeholder: \"Search for Game\",\n        onKeyDown: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-grid\",\n      children: newsData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.background_image,\n          alt: item.name,\n          style: {\n            width: \"300px\",\n            height: \"auto\"\n          },\n          onClick: () => handleImageClick({\n            id: item.id\n          }),\n          onMouseEnter: () => setHoveredGameSlug(item.slug),\n          onMouseLeave: () => setHoveredGameSlug(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: checkAccountType(item.platforms.map(p => p.platform.name))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), hoveredGameSlug === item.slug && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-mini-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Release: \", item.released]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"genre-for-game\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Genres:\", item.genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: genre.slug,\n                children: genre.name\n              }, genre.slug, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-rating\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Rating: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this), item.rating > 0 ? item.rating : item.averageRating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, item.slug, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(News, \"fXt8o8FOxJdwgb2oCRj2v+XaE4U=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = News;\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","useRef","fetchAllNews","searchForGame","getGenres","useSearchParams","useNavigate","checkAccountType","fetchGameTrailers","jsxDEV","_jsxDEV","Fragment","_Fragment","News","_s","searchParams","selectedGenre","get","newsData","setNewsData","loading","setLoading","error","setError","textRef","navigate","username","localStorage","getItem","genres","setGenres","hoveredGameSlug","setHoveredGameSlug","gameTrailers","setGameTrailers","handleKeyPress","event","key","handleSearch","fetchTrailersForGame","game","data","gameName","name","items","length","console","log","handleImageClick","id","inputValue","current","value","trim","results","err","getNews","fetchGenreOptions","children","fileName","_jsxFileName","lineNumber","columnNumber","message","style","marginBottom","htmlFor","marginRight","onChange","e","target","map","genre","slug","className","ref","type","placeholder","onKeyDown","onClick","item","src","background_image","alt","width","height","onMouseEnter","onMouseLeave","platforms","p","platform","released","rating","averageRating","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/News.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { fetchAllNews, searchForGame, getGenres } from \"../service/NewsService\";\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\nimport \"../assests/News.css\";\nimport { checkAccountType } from \"../utility/CheckAccountType\";\nimport {fetchGameTrailers} from \"../service/GameTrailersFromYoutubeService\";\n\n\nfunction News() {\n  const [searchParams] = useSearchParams();\n  const selectedGenre = searchParams.get('genre') || '';\n  const [newsData, setNewsData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const textRef = useRef(\"\");\n  const navigate = useNavigate();\n  const username = localStorage.getItem(\"username\");\n  const [genres, setGenres] = useState([]); // Added genres state\n  const [hoveredGameSlug, setHoveredGameSlug] = useState(null);\n  const [gameTrailers , setGameTrailers] = useState({});\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") handleSearch();\n  };\n\n  const fetchTrailersForGame = async (game) => {\n    try {\n      const data = await fetchGameTrailers({ gameName: game.name });\n      setGameTrailers(data.items);\n      if (gameTrailers.length > 0) {\n        console.log(\"failed to fetch trailers\");\n      } else {\n        console.log(\"fetched trailers\");\n      }\n    } catch (error) {\n      console.error('Error fetching trailer:', error);\n    } finally {\n      setGameTrailers(false);\n    }\n  };\n\n  const handleImageClick = async (game) => {\n    await fetchTrailersForGame(game); \n    navigate(`/news/game/${game.id}`);\n  };\n\n  const handleSearch = async () => {\n    const inputValue = textRef.current.value.trim();\n    \n    try {\n      if (!inputValue) {\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } else {\n        const results = await searchForGame(inputValue);\n        setNewsData(results || []);\n      }\n    } catch (err) {\n      setError(err);\n    }\n    textRef.current.value = \"\";\n  };\n\n  useEffect(() => {\n    async function getNews() {\n      try {\n        setLoading(true);\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getNews();\n  }, [selectedGenre]);\n\n  useEffect(() => {\n    async function fetchGenreOptions() {\n      try {\n        const data = await getGenres();\n        setGenres(data);\n      } catch (err) {\n        console.error(\"Error fetching genres:\", err);\n      }\n    }\n    fetchGenreOptions();\n  }, []);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <>\n      <h1>News and Trending Games For {username}</h1>\n      <div style={{ marginBottom: \"1rem\" }}>\n        <label htmlFor=\"genre-select\" style={{ marginRight: \"0.5rem\" }}>\n          Filter by Genre:\n        </label>\n        <select\n          id=\"genre-select\"\n          value={selectedGenre}\n          onChange={(e) => navigate(e.target.value ? `/news?genre=${e.target.value}` : '/news')}\n        >\n          <option value=\"\">All Genres</option>\n          {genres.map((genre) => (\n            <option key={genre.slug} value={genre.slug}>\n              {genre.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"search-bar\">\n        <input\n          ref={textRef}\n          type=\"text\"\n          placeholder=\"Search for Game\"\n          onKeyDown={handleKeyPress}\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n      \n      <div className=\"news-grid\">\n        {newsData.map((item) => (\n          <div className=\"game-item\" key={item.slug}>\n            <img\n              src={item.background_image}\n              alt={item.name}\n              style={{ width: \"300px\", height: \"auto\" }}\n              onClick={() => handleImageClick({ id: item.id })}\n              onMouseEnter={() => setHoveredGameSlug(item.slug)}\n              onMouseLeave={() => setHoveredGameSlug(null)}\n            />\n            <div>\n              {checkAccountType(item.platforms.map((p) => p.platform.name))}\n            </div>\n            <h2>{item.name}</h2>\n            {hoveredGameSlug === item.slug && (\n              <div className=\"game-mini-details\">\n                <p>Release: {item.released}</p>\n                <div className=\"genre-for-game\">\n                  <p>Genres: \n                    {item.genres.map((genre) => (\n                      <option key={genre.slug} value={genre.slug}>\n                        {genre.name}\n                      </option>\n                    ))}\n                  </p>\n                </div>\n                <div className=\"game-rating\">\n                  <p>Rating: </p>\n                  {item.rating > 0 ? item.rating : item.averageRating}\n                </div>\n              </div>\n            )}\n            <div className=\"btn-container\">\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default News;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}