{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/utility/CheckAccountType.js\";\nimport { FaDesktop, FaXbox, FaPlaystation, FaGamepad } from \"react-icons/fa\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst platformMap = {\n  pc: \"pc\",\n  \"xbox one\": \"xbox\",\n  \"xbox series s/x\": \"xbox\",\n  xbox: \"xbox\",\n  \"playstation 5\": \"playstation\",\n  ps4: \"playstation\",\n  ps5: \"playstation\",\n  playstation: \"playstation\"\n  // Add more mappings as needed\n};\nexport const checkAccountType = platforms => {\n  if (!Array.isArray(platforms)) {\n    throw new Error(\"Expected an array of platforms\");\n  }\n  const platformCount = {\n    pc: 0,\n    xbox: 0,\n    playstation: 0,\n    other: 0\n  };\n  platforms.forEach(plat => {\n    const platformLower = plat.toLowerCase();\n    const category = platformMap[platformLower] || \"other\";\n    platformCount[category]++;\n  });\n  const icons = [];\n  if (platformCount.pc > 0) {\n    icons.push(/*#__PURE__*/_jsxDEV(FaDesktop, {\n      style: {\n        marginRight: \"5px\"\n      }\n    }, \"pc\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this));\n  }\n  if (platformCount.xbox > 0) {\n    icons.push(/*#__PURE__*/_jsxDEV(FaXbox, {\n      style: {\n        marginRight: \"5px\"\n      }\n    }, \"xbox\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this));\n  }\n  if (platformCount.playstation > 0) {\n    icons.push(/*#__PURE__*/_jsxDEV(FaPlaystation, {\n      style: {\n        marginRight: \"5px\"\n      }\n    }, \"playstation\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this));\n  }\n  if (platformCount.other > 0) {\n    icons.push(/*#__PURE__*/_jsxDEV(FaGamepad, {\n      style: {\n        marginRight: \"5px\"\n      }\n    }, \"other\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this));\n  }\n  return icons;\n};","map":{"version":3,"names":["FaDesktop","FaXbox","FaPlaystation","FaGamepad","React","jsxDEV","_jsxDEV","platformMap","pc","xbox","ps4","ps5","playstation","checkAccountType","platforms","Array","isArray","Error","platformCount","other","forEach","plat","platformLower","toLowerCase","category","icons","push","style","marginRight","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/utility/CheckAccountType.js"],"sourcesContent":["import { FaDesktop, FaXbox, FaPlaystation, FaGamepad } from \"react-icons/fa\";\nimport React from \"react\";\n\nconst platformMap = {\n    pc: \"pc\",\n    \"xbox one\": \"xbox\",\n    \"xbox series s/x\": \"xbox\",\n    xbox: \"xbox\",\n    \"playstation 5\": \"playstation\",\n    ps4: \"playstation\",\n    ps5: \"playstation\",\n    playstation: \"playstation\",\n    // Add more mappings as needed\n};\n\nexport const checkAccountType = (platforms) => {\n    if (!Array.isArray(platforms)) {\n        throw new Error(\"Expected an array of platforms\");\n    }\n\n    const platformCount = {\n        pc: 0,\n        xbox: 0,\n        playstation: 0,\n        other: 0,\n    };\n\n    platforms.forEach((plat) => {\n        const platformLower = plat.toLowerCase();\n        const category = platformMap[platformLower] || \"other\";\n        platformCount[category]++;\n    });\n\n    const icons = [];\n\n    if (platformCount.pc > 0) {\n        icons.push(\n            <FaDesktop key=\"pc\" style={{ marginRight: \"5px\" }} />\n        );\n    }\n    if (platformCount.xbox > 0) {\n        icons.push(\n            <FaXbox key=\"xbox\" style={{ marginRight: \"5px\" }} />\n        );\n    }\n    if (platformCount.playstation > 0) {\n        icons.push(\n            <FaPlaystation key=\"playstation\" style={{ marginRight: \"5px\" }} />\n        );\n    }\n    if (platformCount.other > 0) {\n        icons.push(\n            <FaGamepad key=\"other\" style={{ marginRight: \"5px\" }} />\n        );\n    }\n\n    return icons;\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,aAAa,EAAEC,SAAS,QAAQ,gBAAgB;AAC5E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAG;EAChBC,EAAE,EAAE,IAAI;EACR,UAAU,EAAE,MAAM;EAClB,iBAAiB,EAAE,MAAM;EACzBC,IAAI,EAAE,MAAM;EACZ,eAAe,EAAE,aAAa;EAC9BC,GAAG,EAAE,aAAa;EAClBC,GAAG,EAAE,aAAa;EAClBC,WAAW,EAAE;EACb;AACJ,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAIC,SAAS,IAAK;EAC3C,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,SAAS,CAAC,EAAE;IAC3B,MAAM,IAAIG,KAAK,CAAC,gCAAgC,CAAC;EACrD;EAEA,MAAMC,aAAa,GAAG;IAClBV,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,CAAC;IACPG,WAAW,EAAE,CAAC;IACdO,KAAK,EAAE;EACX,CAAC;EAEDL,SAAS,CAACM,OAAO,CAAEC,IAAI,IAAK;IACxB,MAAMC,aAAa,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC;IACxC,MAAMC,QAAQ,GAAGjB,WAAW,CAACe,aAAa,CAAC,IAAI,OAAO;IACtDJ,aAAa,CAACM,QAAQ,CAAC,EAAE;EAC7B,CAAC,CAAC;EAEF,MAAMC,KAAK,GAAG,EAAE;EAEhB,IAAIP,aAAa,CAACV,EAAE,GAAG,CAAC,EAAE;IACtBiB,KAAK,CAACC,IAAI,cACNpB,OAAA,CAACN,SAAS;MAAU2B,KAAK,EAAE;QAAEC,WAAW,EAAE;MAAM;IAAE,GAAnC,IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiC,CACxD,CAAC;EACL;EACA,IAAId,aAAa,CAACT,IAAI,GAAG,CAAC,EAAE;IACxBgB,KAAK,CAACC,IAAI,cACNpB,OAAA,CAACL,MAAM;MAAY0B,KAAK,EAAE;QAAEC,WAAW,EAAE;MAAM;IAAE,GAArC,MAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiC,CACvD,CAAC;EACL;EACA,IAAId,aAAa,CAACN,WAAW,GAAG,CAAC,EAAE;IAC/Ba,KAAK,CAACC,IAAI,cACNpB,OAAA,CAACJ,aAAa;MAAmByB,KAAK,EAAE;QAAEC,WAAW,EAAE;MAAM;IAAE,GAA5C,aAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiC,CACrE,CAAC;EACL;EACA,IAAId,aAAa,CAACC,KAAK,GAAG,CAAC,EAAE;IACzBM,KAAK,CAACC,IAAI,cACNpB,OAAA,CAACH,SAAS;MAAawB,KAAK,EAAE;QAAEC,WAAW,EAAE;MAAM;IAAE,GAAtC,OAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiC,CAC3D,CAAC;EACL;EAEA,OAAOP,KAAK;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}