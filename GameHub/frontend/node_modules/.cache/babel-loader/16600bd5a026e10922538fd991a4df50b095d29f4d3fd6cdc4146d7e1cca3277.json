{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { toast, ToastContainer } from \"react-toastify\";\nconst apiUrl = 'http://localhost:8080';\nexport const handleSteamLogin = async () => {\n  try {\n    const response = await fetch(`${apiUrl}/steam/login`, {\n      method: \"GET\",\n      credentials: \"include\"\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to retrieve tokens. Status: ${response.status}`);\n    }\n    const data = await response.json();\n    // save steam Id for user - \n    console.log(\"Steam login response:\", data);\n    if (data.redirectURL) {\n      localStorage.setItem(\"platform\", \"steam\");\n      window.location.href = data.redirectURL;\n      nav(\"/main\");\n    } else {\n      toast.error(\"Error during Steam login\");\n    }\n  } catch (error) {\n    toast.error(`Error during Steam login: ${error.message}`);\n  }\n};\nexport const handleSteamRedirect = async () => {\n  try {\n    const response = await fetch(`${apiUrl}/steam/return`, {\n      ethod: \"GET\",\n      credentials: \"include\"\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to retrieve Steam profile. Status: ${response.status}`);\n    }\n    const data = await response.json();\n    console.log(\"Steam return response:\", data);\n    if (data.steamID) {\n      localStorage.setItem(\"steamId\", data.steamID);\n      localStorage.setItem(\"platform\", \"steam\");\n      nav(\"/main\");\n    } else {\n      toast.error(\"Steam ID not found in response\");\n    }\n  } catch (error) {\n    toast.error(`Error during Steam return: ${error.message}`);\n  }\n};","map":{"version":3,"names":["React","useEffect","toast","ToastContainer","apiUrl","handleSteamLogin","response","fetch","method","credentials","ok","Error","status","data","json","console","log","redirectURL","localStorage","setItem","window","location","href","nav","error","message","handleSteamRedirect","ethod","steamID"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/service/SteamAuthService.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { toast, ToastContainer } from \"react-toastify\";\n\nconst apiUrl = 'http://localhost:8080';\n\nexport const handleSteamLogin = async () => {\n    try {\n        const response = await fetch(`${apiUrl}/steam/login`, {\n            method: \"GET\",\n            credentials: \"include\",\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to retrieve tokens. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        // save steam Id for user - \n        console.log(\"Steam login response:\", data);\n        if (data.redirectURL) {\n            localStorage.setItem(\"platform\", \"steam\");\n            window.location.href = data.redirectURL;\n            nav(\"/main\");\n        } else {\n            toast.error(\"Error during Steam login\");\n        }\n    } catch (error) {\n        toast.error(`Error during Steam login: ${error.message}`);\n    }\n};\n\nexport const handleSteamRedirect = async () => {\n    try{\n    const response = await fetch(`${apiUrl}/steam/return`, {\n        ethod: \"GET\",\n        credentials: \"include\",\n        });\n        if (!response.ok) {\n        throw new Error(`Failed to retrieve Steam profile. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(\"Steam return response:\", data);\n        if (data.steamID) {\n        localStorage.setItem(\"steamId\", data.steamID);\n        localStorage.setItem(\"platform\", \"steam\");\n        nav(\"/main\");\n        } else {\n        toast.error(\"Steam ID not found in response\");\n        }\n    } catch (error) {\n        toast.error(`Error during Steam return: ${error.message}`);\n    }\n};"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,KAAK,EAAEC,cAAc,QAAQ,gBAAgB;AAEtD,MAAMC,MAAM,GAAG,uBAAuB;AAEtC,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,MAAM,cAAc,EAAE;MAClDI,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE;IACjB,CAAC,CAAC;IACF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,sCAAsCL,QAAQ,CAACM,MAAM,EAAE,CAAC;IAC5E;IACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC;IACAC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,IAAI,CAAC;IAC1C,IAAIA,IAAI,CAACI,WAAW,EAAE;MAClBC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC;MACzCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGT,IAAI,CAACI,WAAW;MACvCM,GAAG,CAAC,OAAO,CAAC;IAChB,CAAC,MAAM;MACHrB,KAAK,CAACsB,KAAK,CAAC,0BAA0B,CAAC;IAC3C;EACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;IACZtB,KAAK,CAACsB,KAAK,CAAC,6BAA6BA,KAAK,CAACC,OAAO,EAAE,CAAC;EAC7D;AACJ,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAG;IACH,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,MAAM,eAAe,EAAE;MACnDuB,KAAK,EAAE,KAAK;MACZlB,WAAW,EAAE;IACb,CAAC,CAAC;IACF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;MAClB,MAAM,IAAIC,KAAK,CAAC,6CAA6CL,QAAQ,CAACM,MAAM,EAAE,CAAC;IAC/E;IACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEH,IAAI,CAAC;IAC3C,IAAIA,IAAI,CAACe,OAAO,EAAE;MAClBV,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEN,IAAI,CAACe,OAAO,CAAC;MAC7CV,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC;MACzCI,GAAG,CAAC,OAAO,CAAC;IACZ,CAAC,MAAM;MACPrB,KAAK,CAACsB,KAAK,CAAC,gCAAgC,CAAC;IAC7C;EACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;IACZtB,KAAK,CAACsB,KAAK,CAAC,8BAA8BA,KAAK,CAACC,OAAO,EAAE,CAAC;EAC9D;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}