{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import { getAllNews } from \"../service/PostNewsService\";\n// import \"../assests/CommunityPage.css\"; // Add a CSS file for styling\n\n// function CommunityPage() {\n//   const [news, setNews] = useState([]);\n//   const [isFetching, setFetching] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchNews = async () => {\n//       const result = await getAllNews();\n//       if (result) {\n//         setNews(result);\n//         setFetching(false);\n//       } else {\n//         setError(\"Failed to load news\");\n//         setFetching(false);\n//       }\n//     };\n//     fetchNews();\n//   }, []);\n\n//   const handleLike = (index) => {\n//     const updatedNews = [...news];\n//     if (!updatedNews[index].likes) {\n//       updatedNews[index].likes = 0;\n//     }\n//     updatedNews[index].likes += 1;\n//     setNews(updatedNews);\n//   };\n\n//   const handleAddComment = (index, comment) => {\n//     const updatedNews = [...news];\n//     if (!updatedNews[index].comments) {\n//       updatedNews[index].comments = [];\n//     }\n//     updatedNews[index].comments.push(comment);\n//     setNews(updatedNews);\n//   };\n\n//   return (\n//     <div className=\"community-page\">\n//       <h1>Community Page</h1>\n//       {isFetching ? (\n//         <p>Loading...</p>\n//       ) : error ? (\n//         <p>{error}</p>\n//       ) : (\n//         <div className=\"news-container\">\n//           {news.map((newsItem, index) => (\n//             <div key={index} className=\"news-card\">\n//               <h3>{newsItem.contentText}</h3>\n//               <p>Shared by: <b>{newsItem.username}</b></p>\n//               <img\n//                 src={newsItem.backgroundImage}\n//                 alt={newsItem.name}\n//                 className=\"news-image\"\n//               />\n//               <p>Released: {newsItem.released}</p>\n//               <p>Time Shared: {new Date(newsItem.timeShared).toLocaleString()}</p>\n//               <div className=\"interaction-bar\">\n//                 <button onClick={() => handleLike(index)}>\n//                   üëç Like ({newsItem.likes || 0})\n//                 </button>\n//                 <button\n//                   onClick={() => {\n//                     const comment = prompt(\"Enter your comment:\");\n//                     if (comment) {\n//                       handleAddComment(index, comment);\n//                     }\n//                   }}\n//                 >\n//                   üí¨ Comment ({newsItem.comments?.length || 0})\n//                 </button>\n//               </div>\n//               {newsItem.comments && newsItem.comments.length > 0 && (\n//                 <div className=\"comments-section\">\n//                   <h4>Comments:</h4>\n//                   <ul>\n//                     {newsItem.comments.map((comment, i) => (\n//                       <li key={i}>{comment}</li>\n//                     ))}\n//                   </ul>\n//                 </div>\n//               )}\n//             </div>\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default CommunityPage;","map":{"version":3,"names":[],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/CommunityPage.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import { getAllNews } from \"../service/PostNewsService\";\n// import \"../assests/CommunityPage.css\"; // Add a CSS file for styling\n\n// function CommunityPage() {\n//   const [news, setNews] = useState([]);\n//   const [isFetching, setFetching] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchNews = async () => {\n//       const result = await getAllNews();\n//       if (result) {\n//         setNews(result);\n//         setFetching(false);\n//       } else {\n//         setError(\"Failed to load news\");\n//         setFetching(false);\n//       }\n//     };\n//     fetchNews();\n//   }, []);\n\n//   const handleLike = (index) => {\n//     const updatedNews = [...news];\n//     if (!updatedNews[index].likes) {\n//       updatedNews[index].likes = 0;\n//     }\n//     updatedNews[index].likes += 1;\n//     setNews(updatedNews);\n//   };\n\n//   const handleAddComment = (index, comment) => {\n//     const updatedNews = [...news];\n//     if (!updatedNews[index].comments) {\n//       updatedNews[index].comments = [];\n//     }\n//     updatedNews[index].comments.push(comment);\n//     setNews(updatedNews);\n//   };\n\n//   return (\n//     <div className=\"community-page\">\n//       <h1>Community Page</h1>\n//       {isFetching ? (\n//         <p>Loading...</p>\n//       ) : error ? (\n//         <p>{error}</p>\n//       ) : (\n//         <div className=\"news-container\">\n//           {news.map((newsItem, index) => (\n//             <div key={index} className=\"news-card\">\n//               <h3>{newsItem.contentText}</h3>\n//               <p>Shared by: <b>{newsItem.username}</b></p>\n//               <img\n//                 src={newsItem.backgroundImage}\n//                 alt={newsItem.name}\n//                 className=\"news-image\"\n//               />\n//               <p>Released: {newsItem.released}</p>\n//               <p>Time Shared: {new Date(newsItem.timeShared).toLocaleString()}</p>\n//               <div className=\"interaction-bar\">\n//                 <button onClick={() => handleLike(index)}>\n//                   üëç Like ({newsItem.likes || 0})\n//                 </button>\n//                 <button\n//                   onClick={() => {\n//                     const comment = prompt(\"Enter your comment:\");\n//                     if (comment) {\n//                       handleAddComment(index, comment);\n//                     }\n//                   }}\n//                 >\n//                   üí¨ Comment ({newsItem.comments?.length || 0})\n//                 </button>\n//               </div>\n//               {newsItem.comments && newsItem.comments.length > 0 && (\n//                 <div className=\"comments-section\">\n//                   <h4>Comments:</h4>\n//                   <ul>\n//                     {newsItem.comments.map((comment, i) => (\n//                       <li key={i}>{comment}</li>\n//                     ))}\n//                   </ul>\n//                 </div>\n//               )}\n//             </div>\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default CommunityPage;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}