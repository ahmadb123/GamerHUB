{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/News.js\",\n  _s = $RefreshSig$();\n// news page - fetch news based on the genre, platform, game, and date\n// filter by genre, platform, game, and date\nimport React, { useEffect, useState } from 'react';\nimport { fetchAllNews } from \"../service/NewsService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction News() {\n  _s();\n  const [news, setNews] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  // fetch all news -\n  useEffect(() => {\n    const fetchAllNews = async () => {\n      try {\n        const data = await fetchAllNews();\n        setNews(data);\n        setLoading(false);\n      } catch (error) {\n        console.error(error);\n        setLoading(false);\n      }\n    };\n    fetchAllNews();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"News Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Page is loading \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 27\n    }, this) : news.map((newsItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: newsItem.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: newsItem.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: newsItem.genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 29\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(News, \"F6yDZrO2rMZs5jzX1Q2MMfiqj9g=\");\n_c = News;\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","fetchAllNews","jsxDEV","_jsxDEV","News","_s","news","setNews","loading","setLoading","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","newsItem","index","title","description","genre","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/News.js"],"sourcesContent":["// news page - fetch news based on the genre, platform, game, and date\n// filter by genre, platform, game, and date\nimport React, { useEffect, useState } from 'react';\nimport { fetchAllNews } from \"../service/NewsService\";\n\nfunction News(){\n    const [news, setNews] = React.useState([]);\n    const [loading, setLoading] = React.useState(true);\n    // fetch all news -\n        useEffect(() => {\n            const fetchAllNews = async () => { \n            try{\n                const data = await fetchAllNews();\n                setNews(data);\n                setLoading(false);\n            }catch(error){\n                console.error(error);\n                setLoading(false);\n            }\n        };\n    fetchAllNews();\n    }, []);\n\n    return(\n        <div className=\"news\">\n            <h1>News Page</h1>\n            {\n                loading ? <p>Page is loading </p> : \n                    news.map((newsItem, index) => (\n                        <div key={index}>\n                            <h2>{newsItem.title}</h2>\n                            <p>{newsItem.description}</p>\n                            <p>{newsItem.genre}</p>\n                        </div>\n                    ))\n            }\n        </div>\n    );\n}\n\nexport default News;"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EACX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,KAAK,CAACE,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGX,KAAK,CAACE,QAAQ,CAAC,IAAI,CAAC;EAClD;EACID,SAAS,CAAC,MAAM;IACZ,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAG;QACC,MAAMS,IAAI,GAAG,MAAMT,YAAY,CAAC,CAAC;QACjCM,OAAO,CAACG,IAAI,CAAC;QACbD,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,QAAME,KAAK,EAAC;QACTC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBF,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IACLR,YAAY,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIE,OAAA;IAAKU,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBX,OAAA;MAAAW,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEdV,OAAO,gBAAGL,OAAA;MAAAW,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAC7BZ,IAAI,CAACa,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBACrBlB,OAAA;MAAAW,QAAA,gBACIX,OAAA;QAAAW,QAAA,EAAKM,QAAQ,CAACE;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzBf,OAAA;QAAAW,QAAA,EAAIM,QAAQ,CAACG;MAAW;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7Bf,OAAA;QAAAW,QAAA,EAAIM,QAAQ,CAACI;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAHjBG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAET,CAAC;AAEd;AAACb,EAAA,CAjCQD,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AAmCb,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}