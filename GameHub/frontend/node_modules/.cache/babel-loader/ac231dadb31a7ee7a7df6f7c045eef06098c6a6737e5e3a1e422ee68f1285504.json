{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/News.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { fetchAllNews, searchForGame, getGenres } from \"../service/NewsService\";\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\nimport \"../assests/News.css\";\nimport { checkAccountType } from \"../utility/CheckAccountType\";\nimport { fetchGameTrailers } from \"../service/GameTrailersFromYoutubeService\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction News() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const selectedGenre = searchParams.get(\"genre\") || \"\";\n  const [newsData, setNewsData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const textRef = useRef(\"\");\n  const navigate = useNavigate();\n  const username = localStorage.getItem(\"username\");\n  const [genres, setGenres] = useState([]);\n  const [hoveredGameSlug, setHoveredGameSlug] = useState(null);\n  const [hoveredGameName, setHoveredGameName] = useState(null);\n  const gameTrailersRef = useRef({}); // Use ref to store cached trailers\n\n  // --- EVENT HANDLERS ---\n\n  // When the user presses Enter, perform a search.\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  // On clicking the image, optionally fetch trailer (if needed) then navigate.\n  const handleImageClick = async game => {\n    await fetchTrailersForGame({\n      gameName: game.name\n    });\n    navigate(`/news/game/${game.id}`);\n  };\n\n  // On mouse enter, just set the hovered game slug and name.\n  const handleMouseEnter = game => {\n    setHoveredGameSlug(game.slug);\n    setHoveredGameName(game.name);\n  };\n\n  // On mouse leave, clear hovered state.\n  const handleMouseLeave = () => {\n    setHoveredGameSlug(null);\n    setHoveredGameName(null);\n  };\n\n  // Search handler for games.\n  const handleSearch = async () => {\n    const inputValue = textRef.current.value.trim();\n    try {\n      if (!inputValue) {\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } else {\n        const results = await searchForGame(inputValue);\n        setNewsData(results || []);\n      }\n    } catch (err) {\n      setError(err);\n    }\n    textRef.current.value = \"\";\n  };\n\n  // --- useEffect FOR HOVERED GAME NAME ---\n  // This runs whenever hoveredGameName changes to a non-null value.\n  useEffect(() => {\n    if (!hoveredGameName) return;\n    const fetchTrailers = async () => {\n      if (gameTrailersRef.current[hoveredGameName]) {\n        setGameTrailers(gameTrailersRef.current[hoveredGameName]);\n        return;\n      }\n      try {\n        const data = await fetchGameTrailers({\n          gameName: hoveredGameName\n        });\n        if (data !== null && data !== void 0 && data.items && data.items.length > 0) {\n          gameTrailersRef.current[hoveredGameName] = data.items;\n          setGameTrailers(data.items);\n          console.log(\"Fetched trailers\");\n        } else {\n          setGameTrailers([]);\n          console.log(\"No trailers found\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching trailer:\", error);\n        setGameTrailers([]);\n      }\n    };\n    fetchTrailers();\n  }, [hoveredGameName]);\n\n  // --- useEffect FOR NEWS & GENRES ---\n\n  useEffect(() => {\n    async function getNews() {\n      try {\n        setLoading(true);\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getNews();\n  }, [selectedGenre]);\n  useEffect(() => {\n    async function fetchGenreOptions() {\n      try {\n        const data = await getGenres();\n        setGenres(data);\n      } catch (err) {\n        console.error(\"Error fetching genres:\", err);\n      }\n    }\n    fetchGenreOptions();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"News and Trending Games For \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"genre-select\",\n        style: {\n          marginRight: \"0.5rem\"\n        },\n        children: \"Filter by Genre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"genre-select\",\n        value: selectedGenre,\n        onChange: e => navigate(e.target.value ? `/news?genre=${e.target.value}` : \"/news\"),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Genres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre.slug,\n          children: genre.name\n        }, genre.slug, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: textRef,\n        type: \"text\",\n        placeholder: \"Search for Game\",\n        onKeyDown: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-grid\",\n      children: newsData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-media\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.background_image,\n            alt: item.name,\n            style: {\n              width: \"300px\",\n              height: \"auto\"\n            },\n            onClick: () => handleImageClick(item),\n            onMouseEnter: () => handleMouseEnter(item),\n            onMouseLeave: handleMouseLeave\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), hoveredGameSlug === item.slug && gameTrailers.length > 0 && /*#__PURE__*/_jsxDEV(\"iframe\", {\n            className: \"card-video\",\n            src: `https://www.youtube.com/embed/${gameTrailers[0].id.videoId}?start=10&autoplay=1&mute=1`,\n            allow: \"autoplay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: checkAccountType(item.platforms.map(p => p.platform.name))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), hoveredGameSlug === item.slug && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-mini-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Release: \", item.released]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"genre-for-game\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Genres:\", \" \", item.genres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginRight: \"0.5rem\"\n                },\n                children: genre.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-rating\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Rating: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this), item.rating > 0 ? item.rating : item.averageRating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this)]\n      }, item.slug || item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(News, \"z+1Zb8STHl/DRpbIHlPBVxjYpuE=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = News;\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","useRef","fetchAllNews","searchForGame","getGenres","useSearchParams","useNavigate","checkAccountType","fetchGameTrailers","jsxDEV","_jsxDEV","Fragment","_Fragment","News","_s","searchParams","selectedGenre","get","newsData","setNewsData","loading","setLoading","error","setError","textRef","navigate","username","localStorage","getItem","genres","setGenres","hoveredGameSlug","setHoveredGameSlug","hoveredGameName","setHoveredGameName","gameTrailersRef","handleKeyPress","event","key","handleSearch","handleImageClick","game","fetchTrailersForGame","gameName","name","id","handleMouseEnter","slug","handleMouseLeave","inputValue","current","value","trim","data","results","err","fetchTrailers","setGameTrailers","items","length","console","log","getNews","fetchGenreOptions","children","fileName","_jsxFileName","lineNumber","columnNumber","message","style","marginBottom","htmlFor","marginRight","onChange","e","target","map","genre","className","ref","type","placeholder","onKeyDown","onClick","item","src","background_image","alt","width","height","onMouseEnter","onMouseLeave","gameTrailers","videoId","allow","platforms","p","platform","released","index","rating","averageRating","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/News.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { fetchAllNews, searchForGame, getGenres } from \"../service/NewsService\";\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\nimport \"../assests/News.css\";\nimport { checkAccountType } from \"../utility/CheckAccountType\";\nimport { fetchGameTrailers } from \"../service/GameTrailersFromYoutubeService\";\n\nfunction News() {\n  const [searchParams] = useSearchParams();\n  const selectedGenre = searchParams.get(\"genre\") || \"\";\n  const [newsData, setNewsData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const textRef = useRef(\"\");\n  const navigate = useNavigate();\n  const username = localStorage.getItem(\"username\");\n\n  const [genres, setGenres] = useState([]);\n  const [hoveredGameSlug, setHoveredGameSlug] = useState(null);\n  const [hoveredGameName, setHoveredGameName] = useState(null);\n  const gameTrailersRef = useRef({}); // Use ref to store cached trailers\n\n  // --- EVENT HANDLERS ---\n\n  // When the user presses Enter, perform a search.\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  // On clicking the image, optionally fetch trailer (if needed) then navigate.\n  const handleImageClick = async (game) => {\n    await fetchTrailersForGame({ gameName: game.name });\n    navigate(`/news/game/${game.id}`);\n  };\n\n  // On mouse enter, just set the hovered game slug and name.\n  const handleMouseEnter = (game) => {\n    setHoveredGameSlug(game.slug);\n    setHoveredGameName(game.name);\n  };\n\n  // On mouse leave, clear hovered state.\n  const handleMouseLeave = () => {\n    setHoveredGameSlug(null);\n    setHoveredGameName(null);\n  };\n\n  // Search handler for games.\n  const handleSearch = async () => {\n    const inputValue = textRef.current.value.trim();\n    try {\n      if (!inputValue) {\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } else {\n        const results = await searchForGame(inputValue);\n        setNewsData(results || []);\n      }\n    } catch (err) {\n      setError(err);\n    }\n    textRef.current.value = \"\";\n  };\n\n  // --- useEffect FOR HOVERED GAME NAME ---\n  // This runs whenever hoveredGameName changes to a non-null value.\n  useEffect(() => {\n    if (!hoveredGameName) return;\n\n    const fetchTrailers = async () => {\n      if (gameTrailersRef.current[hoveredGameName]) {\n        setGameTrailers(gameTrailersRef.current[hoveredGameName]);\n        return;\n      }\n\n      try {\n        const data = await fetchGameTrailers({ gameName: hoveredGameName });\n        if (data?.items && data.items.length > 0) {\n          gameTrailersRef.current[hoveredGameName] = data.items;\n          setGameTrailers(data.items);\n          console.log(\"Fetched trailers\");\n        } else {\n          setGameTrailers([]);\n          console.log(\"No trailers found\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching trailer:\", error);\n        setGameTrailers([]);\n      }\n    };\n\n    fetchTrailers();\n  }, [hoveredGameName]);\n\n  // --- useEffect FOR NEWS & GENRES ---\n\n  useEffect(() => {\n    async function getNews() {\n      try {\n        setLoading(true);\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getNews();\n  }, [selectedGenre]);\n\n  useEffect(() => {\n    async function fetchGenreOptions() {\n      try {\n        const data = await getGenres();\n        setGenres(data);\n      } catch (err) {\n        console.error(\"Error fetching genres:\", err);\n      }\n    }\n    fetchGenreOptions();\n  }, []);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <>\n      <h1>News and Trending Games For {username}</h1>\n      <div style={{ marginBottom: \"1rem\" }}>\n        <label htmlFor=\"genre-select\" style={{ marginRight: \"0.5rem\" }}>\n          Filter by Genre:\n        </label>\n        <select\n          id=\"genre-select\"\n          value={selectedGenre}\n          onChange={(e) =>\n            navigate(e.target.value ? `/news?genre=${e.target.value}` : \"/news\")\n          }\n        >\n          <option value=\"\">All Genres</option>\n          {genres.map((genre) => (\n            <option key={genre.slug} value={genre.slug}>\n              {genre.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"search-bar\">\n        <input\n          ref={textRef}\n          type=\"text\"\n          placeholder=\"Search for Game\"\n          onKeyDown={handleKeyPress}\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n\n      <div className=\"news-grid\">\n        {newsData.map((item) => (\n          <div className=\"game-item\" key={item.slug || item.id}>\n            <div className=\"card-media\">\n              <img\n                src={item.background_image}\n                alt={item.name}\n                style={{ width: \"300px\", height: \"auto\" }}\n                onClick={() => handleImageClick(item)}\n                onMouseEnter={() => handleMouseEnter(item)}\n                onMouseLeave={handleMouseLeave}\n              />\n              {hoveredGameSlug === item.slug && gameTrailers.length > 0 && (\n                <iframe\n                  className=\"card-video\"\n                  src={`https://www.youtube.com/embed/${gameTrailers[0].id.videoId}?start=10&autoplay=1&mute=1`}\n                  allow=\"autoplay\"\n                ></iframe>\n              )}\n            </div>\n            <div>\n              {checkAccountType(\n                item.platforms.map((p) => p.platform.name)\n              )}\n            </div>\n            <h2>{item.name}</h2>\n            {hoveredGameSlug === item.slug && (\n              <div className=\"game-mini-details\">\n                <p>Release: {item.released}</p>\n                <div className=\"genre-for-game\">\n                  <p>\n                    Genres:{\" \"}\n                    {item.genres.map((genre, index) => (\n                      <span key={index} style={{ marginRight: \"0.5rem\" }}>\n                        {genre.name}\n                      </span>\n                    ))}\n                  </p>\n                </div>\n                <div className=\"game-rating\">\n                  <p>Rating: </p>\n                  {item.rating > 0 ? item.rating : item.averageRating}\n                </div>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default News;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}