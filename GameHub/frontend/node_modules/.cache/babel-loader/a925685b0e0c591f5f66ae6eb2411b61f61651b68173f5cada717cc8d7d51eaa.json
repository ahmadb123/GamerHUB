{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/service/XboxAuthService.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = 'http://localhost:8080';\nexport const exchangeCodeForTokens = async () => {\n  // get code from URL\n  const urlParams = new URLSearchParams(window.location.search);\n  const code = urlParams.get(\"code\");\n  if (code) {\n    try {\n      const response = await fetch(`${apiUrl}/api/auth/callback?code=${code}`, {\n        method: \"GET\",\n        credentials: \"include\"\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to retrieve tokens. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      localStorage.setItem(\"uhs\", data.uhs);\n      localStorage.setItem(\"XSTS_token\", data.XSTS_token);\n      toast.success(\"Xbox login successful!\");\n    } catch (error) {\n      toast.error(`Error during Xbox login: ${error.message}`);\n    }\n  }\n};\nexport const handleLogin = async () => {\n  try {\n    const response = await fetch(`${apiUrl}/api/auth/login`, {\n      method: \"GET\",\n      credentials: \"include\"\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to retrieve tokens. Status: ${response.status}`);\n    }\n    const data = await response.json();\n    if (data.redirectUrl) {\n      window.location.href = data.redirectUrl;\n    } else {\n      toast.error(\"Error during Xbox login\");\n    }\n  } catch (error) {\n    toast.error(`Error during Xbox login: ${error.message}`);\n  }\n};\nfunction XboxLogin() {\n  _s();\n  useEffect(() => {\n    exchangeCodeForTokens();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tes\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login with Xbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 8\n  }, this);\n}\n_s(XboxLogin, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = XboxLogin;\nexport default XboxLogin;\nvar _c;\n$RefreshReg$(_c, \"XboxLogin\");","map":{"version":3,"names":["React","useEffect","toast","ToastContainer","jsxDEV","_jsxDEV","apiUrl","exchangeCodeForTokens","urlParams","URLSearchParams","window","location","search","code","get","response","fetch","method","credentials","ok","Error","status","data","json","localStorage","setItem","uhs","XSTS_token","success","error","message","handleLogin","redirectUrl","href","XboxLogin","_s","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/service/XboxAuthService.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { toast, ToastContainer } from \"react-toastify\";\n\nconst apiUrl = 'http://localhost:8080';\n\nexport const exchangeCodeForTokens = async () => {\n    // get code from URL\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get(\"code\");\n\n    if (code) {\n        try {\n            const response = await fetch(`${apiUrl}/api/auth/callback?code=${code}`, {\n                method: \"GET\",\n                credentials: \"include\",\n            });\n\n            if (!response.ok) {\n                throw new Error(`Failed to retrieve tokens. Status: ${response.status}`);\n            }\n\n            const data = await response.json();\n            localStorage.setItem(\"uhs\", data.uhs);\n            localStorage.setItem(\"XSTS_token\", data.XSTS_token);\n\n            toast.success(\"Xbox login successful!\");\n        } catch (error) {\n            toast.error(`Error during Xbox login: ${error.message}`);\n        }\n    }\n};\n\nexport const handleLogin = async () => {\n    try {\n        const response = await fetch(`${apiUrl}/api/auth/login`, {\n            method: \"GET\",\n            credentials: \"include\",\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to retrieve tokens. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        if (data.redirectUrl) {\n            window.location.href = data.redirectUrl;\n        } else {\n            toast.error(\"Error during Xbox login\");\n        }\n    } catch (error) {\n        toast.error(`Error during Xbox login: ${error.message}`);\n    }\n};\n\nfunction XboxLogin() {\n    useEffect(() => {\n        exchangeCodeForTokens();\n    }, []);\n\n    return (\n       <div className=\"tes\">\n              <button onClick={handleLogin}>Login with Xbox</button>\n              <ToastContainer />;\n       </div>\n       \n    );\n}\n\nexport default XboxLogin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}