{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/ClipsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getGameClips } from \"../service/XboxGameClips\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ClipsPage() {\n  _s();\n  const [gameClips, setGameClips] = useState([]);\n  const [isFetchingClips, setIsFetchingClips] = useState(true);\n  const [error, setError] = useState(null);\n  const [filter, setFilter] = useState(\"\"); // Filter by game title\n  const [currentPage, setCurrentPage] = useState(1); // Pagination\n  const clipsPerPage = 10;\n  const fetchGameClips = async () => {\n    try {\n      const clips = await getGameClips();\n      setGameClips(clips);\n    } catch (err) {\n      console.error(\"Error fetching game clips:\", err);\n      setError(\"Failed to load game clips. Please try again.\");\n    } finally {\n      setIsFetchingClips(false);\n    }\n  };\n  useEffect(() => {\n    fetchGameClips();\n  }, []);\n  const filteredClips = filter ? gameClips.filter(clip => {\n    var _clip$titleName;\n    return (_clip$titleName = clip.titleName) === null || _clip$titleName === void 0 ? void 0 : _clip$titleName.toLowerCase().includes(filter.toLowerCase());\n  }) : gameClips;\n  const totalPages = Math.ceil(filteredClips.length / clipsPerPage);\n  const paginatedClips = filteredClips.slice((currentPage - 1) * clipsPerPage, currentPage * clipsPerPage);\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clips-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Xbox Game Clips\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"filter\",\n        children: \"Filter by Game:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"filter\",\n        type: \"text\",\n        value: filter,\n        onChange: e => setFilter(e.target.value),\n        placeholder: \"Enter game title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), isFetchingClips ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading game clips...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this) : filteredClips.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No game clips found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clips-grid\",\n        children: paginatedClips.map(clip => {\n          var _clip$thumbnails, _clip$gameClipUris;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"clip-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: clip.titleName || \"Untitled Clip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Recorded on:\", \" \", new Date(clip.dateRecorded).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), (_clip$thumbnails = clip.thumbnails) === null || _clip$thumbnails === void 0 ? void 0 : _clip$thumbnails.map((thumbnail, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: thumbnail.uri,\n              alt: \"Game clip thumbnail\",\n              className: \"clip-thumbnail\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this)), (_clip$gameClipUris = clip.gameClipUris) === null || _clip$gameClipUris === void 0 ? void 0 : _clip$gameClipUris.map((uri, index) => /*#__PURE__*/_jsxDEV(\"video\", {\n              src: uri.uri,\n              controls: true,\n              className: \"clip-video\",\n              children: \"Your browser does not support the video tag.\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this))]\n          }, clip.gameClipId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: Array.from({\n          length: totalPages\n        }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `pagination-button ${currentPage === index + 1 ? \"active\" : \"\"}`,\n          onClick: () => handlePageChange(index + 1),\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(ClipsPage, \"N5G1sfIXLQJyj5vYyT7UTlQpVg4=\");\n_c = ClipsPage;\nexport default ClipsPage;\nvar _c;\n$RefreshReg$(_c, \"ClipsPage\");","map":{"version":3,"names":["React","useState","useEffect","getGameClips","jsxDEV","_jsxDEV","Fragment","_Fragment","ClipsPage","_s","gameClips","setGameClips","isFetchingClips","setIsFetchingClips","error","setError","filter","setFilter","currentPage","setCurrentPage","clipsPerPage","fetchGameClips","clips","err","console","filteredClips","clip","_clip$titleName","titleName","toLowerCase","includes","totalPages","Math","ceil","length","paginatedClips","slice","handlePageChange","pageNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","target","placeholder","map","_clip$thumbnails","_clip$gameClipUris","Date","dateRecorded","toLocaleDateString","thumbnails","thumbnail","index","src","uri","alt","gameClipUris","controls","gameClipId","Array","from","_","onClick","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/ClipsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getGameClips } from \"../service/XboxGameClips\";\n\nfunction ClipsPage() {\n    const [gameClips, setGameClips] = useState([]);\n    const [isFetchingClips, setIsFetchingClips] = useState(true);\n    const [error, setError] = useState(null);\n    const [filter, setFilter] = useState(\"\"); // Filter by game title\n    const [currentPage, setCurrentPage] = useState(1); // Pagination\n    const clipsPerPage = 10;\n\n    const fetchGameClips = async () => {\n        try {\n            const clips = await getGameClips();\n            setGameClips(clips);\n        } catch (err) {\n            console.error(\"Error fetching game clips:\", err);\n            setError(\"Failed to load game clips. Please try again.\");\n        } finally {\n            setIsFetchingClips(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchGameClips();\n    }, []);\n\n    const filteredClips = filter\n        ? gameClips.filter((clip) =>\n              clip.titleName?.toLowerCase().includes(filter.toLowerCase())\n          )\n        : gameClips;\n\n    const totalPages = Math.ceil(filteredClips.length / clipsPerPage);\n    const paginatedClips = filteredClips.slice(\n        (currentPage - 1) * clipsPerPage,\n        currentPage * clipsPerPage\n    );\n\n    const handlePageChange = (pageNumber) => {\n        setCurrentPage(pageNumber);\n    };\n\n    return (\n        <div className=\"clips-container\">\n            <h2>Xbox Game Clips</h2>\n            <div className=\"filter-bar\">\n                <label htmlFor=\"filter\">Filter by Game:</label>\n                <input\n                    id=\"filter\"\n                    type=\"text\"\n                    value={filter}\n                    onChange={(e) => setFilter(e.target.value)}\n                    placeholder=\"Enter game title\"\n                />\n            </div>\n            {isFetchingClips ? (\n                <p>Loading game clips...</p>\n            ) : error ? (\n                <p>{error}</p>\n            ) : filteredClips.length === 0 ? (\n                <p>No game clips found.</p>\n            ) : (\n                <>\n                    <div className=\"clips-grid\">\n                        {paginatedClips.map((clip) => (\n                            <div key={clip.gameClipId} className=\"clip-card\">\n                                <h1>{clip.titleName || \"Untitled Clip\"}</h1>\n                                <p>\n                                    Recorded on:{\" \"}\n                                    {new Date(\n                                        clip.dateRecorded\n                                    ).toLocaleDateString()}\n                                </p>\n                                {clip.thumbnails?.map((thumbnail, index) => (\n                                    <img\n                                        src={thumbnail.uri}\n                                        alt=\"Game clip thumbnail\"\n                                        key={index}\n                                        className=\"clip-thumbnail\"\n                                    />\n                                ))}\n                                {clip.gameClipUris?.map((uri, index) => (\n                                    <video\n                                        src={uri.uri}\n                                        controls\n                                        key={index}\n                                        className=\"clip-video\"\n                                    >\n                                        Your browser does not support the video\n                                        tag.\n                                    </video>\n                                ))}\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"pagination\">\n                        {Array.from({ length: totalPages }, (_, index) => (\n                            <button\n                                key={index}\n                                className={`pagination-button ${\n                                    currentPage === index + 1 ? \"active\" : \"\"\n                                }`}\n                                onClick={() => handlePageChange(index + 1)}\n                            >\n                                {index + 1}\n                            </button>\n                        ))}\n                    </div>\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default ClipsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}