{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\n// src/pages/LoginPage.js\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router';\nimport { useNavigate } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../assets/styles/LoginPage.css'; // Make sure to import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = 'http://localhost:8080';\nfunction togglePassword() {\n  let password = document.getElementById(\"passwordInput\");\n  if (password.type === \"password\") {\n    password.type = \"text\";\n  } else {\n    password.type = \"password\";\n  }\n}\nfunction LoginPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation(); // get current location\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${apiUrl}/api/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        var _location$state;\n        const data = await response.json();\n        const token = data.token;\n        const role = data.role;\n        const userId = data.userId;\n        localStorage.setItem('jwtToken', token);\n        localStorage.setItem('userRole', role);\n        localStorage.setItem('username', userId);\n        const mergeResponse = await fetch(`${apiUrl}/api/cart/merge-guest-cart`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + token\n          },\n          // Body can be empty or just userId: 'guest' depending on your backend implementation\n          body: JSON.stringify({\n            userId: 'guest'\n          })\n        });\n        if (mergeResponse.ok) {\n          toast.success('Logged in and guest cart merged successfully!');\n        } else {\n          // If merging fails, you may still proceed, but notify user\n          toast.warning('Logged in, but failed to merge guest cart.');\n        }\n        const redirectPath = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.redirectTo) || '/homePage';\n        navigate(redirectPath);\n      } else if (response.status === 401) {\n        toast.error('Incorrect Password. Please try again.');\n      } else {\n        const textError = await response.text();\n        toast.error(`Login failed: ${textError}`);\n      }\n    } catch (e) {\n      console.error(\"Error\", e);\n      toast.error('Error occurred logging in');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Sign in \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email or Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Email/Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter your password\",\n          value: password,\n          id: \"passwordInput\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"show-password\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onClick: togglePassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Show Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"8iuj56DQbjOZaSpAREM6vDsJrS4=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","toast","ToastContainer","jsxDEV","_jsxDEV","apiUrl","togglePassword","password","document","getElementById","type","LoginPage","_s","username","setUsername","setPassword","navigate","location","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","_location$state","data","json","token","role","userId","localStorage","setItem","mergeResponse","success","warning","redirectPath","state","redirectTo","status","error","textError","text","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","id","onClick","position","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/LoginPage.js"],"sourcesContent":["// src/pages/LoginPage.js\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router'\n\nimport { useNavigate } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../assets/styles/LoginPage.css'; // Make sure to import the CSS file\n\n\nconst apiUrl = 'http://localhost:8080';\n\nfunction togglePassword(){\n    let password = document.getElementById(\"passwordInput\");\n    if(password.type === \"password\"){\n        password.type = \"text\";\n    }else{\n        password.type = \"password\";\n    }\n}\n\nfunction LoginPage() {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n    const location = useLocation(); // get current location\n\n\n    const handleLogin = async (e) => {        \n        e.preventDefault();\n        try {\n            const response = await fetch(`${apiUrl}/api/auth/login`, {\n                method: 'POST',\n                headers: { 'Content-type': 'application/json' },\n                body: JSON.stringify({ username, password }),\n            });\n            if(response.ok) {\n                const data = await response.json();\n                const token = data.token;\n                const role = data.role;\n                const userId = data.userId; \n                localStorage.setItem('jwtToken', token);\n                localStorage.setItem('userRole', role);\n                localStorage.setItem('username', userId);\n                const mergeResponse = await fetch(`${apiUrl}/api/cart/merge-guest-cart`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': 'Bearer ' + token\n                    },\n                    // Body can be empty or just userId: 'guest' depending on your backend implementation\n                    body: JSON.stringify({ userId: 'guest' }) \n                });\n\n                if (mergeResponse.ok) {\n                    toast.success('Logged in and guest cart merged successfully!');\n                } else {\n                    // If merging fails, you may still proceed, but notify user\n                    toast.warning('Logged in, but failed to merge guest cart.');\n                }\n                const redirectPath = location.state?.redirectTo || '/homePage';\n                navigate(redirectPath);\n            } else if(response.status === 401) {\n                toast.error('Incorrect Password. Please try again.');\n            } else {\n                const textError = await response.text();\n                toast.error(`Login failed: ${textError}`);\n            }\n        } catch (e) {\n            console.error(\"Error\", e);\n            toast.error('Error occurred logging in');\n        }\n    };\n\n    return (\n        <div className=\"login-container\">\n            <h2> Sign in </h2>\n            <form onSubmit={handleLogin}>\n                <div className=\"form-group\">\n                    <label>Email or Username</label>\n                    <input \n                        type=\"text\"\n                        placeholder=\"Email/Username\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input \n                        type=\"password\"\n                        placeholder=\"Enter your password\"\n                        value={password}\n                        id=\"passwordInput\"\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </div>\n                <div className=\"show-password\">\n                    <input type=\"checkbox\" onClick={togglePassword} />\n                    <label>Show Password</label>\n                </div>\n                <button type=\"submit\" className=\"submit-button\">Login</button>\n            </form>\n            <ToastContainer position=\"top-center\" />\n        </div>\n    );\n}\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}