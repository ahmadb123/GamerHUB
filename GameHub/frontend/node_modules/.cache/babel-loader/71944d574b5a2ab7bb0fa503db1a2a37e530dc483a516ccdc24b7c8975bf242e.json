{"ast":null,"code":"const apiUrl = 'http://localhost:8080';\nexport const getGameClips = async () => {\n  const uhs = localStorage.getItem(\"uhs\");\n  const XSTS_token = localStorage.getItem(\"XSTS_token\");\n  try {\n    const response = await fetch(`${apiUrl}/api/xbox/gameclips`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `XBL3.0 x=${uhs};${XSTS_token}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    const data = await response.json();\n    // Flatten the nested structure and ensure it returns an array\n    return data.flatMap(item => item.gameClips || []);\n  } catch (error) {\n    console.error(\"Failed to fetch Xbox game clips:\", error);\n    return []; // Always return an array even on failure\n  }\n};","map":{"version":3,"names":["apiUrl","getGameClips","uhs","localStorage","getItem","XSTS_token","response","fetch","method","headers","Authorization","ok","Error","status","data","json","flatMap","item","gameClips","error","console"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/service/XboxGameClips.js"],"sourcesContent":["\nconst apiUrl = 'http://localhost:8080';\n\nexport const getGameClips = async () => {\n    const uhs = localStorage.getItem(\"uhs\");\n    const XSTS_token = localStorage.getItem(\"XSTS_token\");\n    try {\n      const response = await fetch(`${apiUrl}/api/xbox/gameclips`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `XBL3.0 x=${uhs};${XSTS_token}`,\n        },\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      // Flatten the nested structure and ensure it returns an array\n      return data.flatMap((item) => item.gameClips || []);\n    } catch (error) {\n      console.error(\"Failed to fetch Xbox game clips:\", error);\n      return []; // Always return an array even on failure\n    }\n  };"],"mappings":"AACA,MAAMA,MAAM,GAAG,uBAAuB;AAEtC,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;EACvC,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EACrD,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,MAAM,qBAAqB,EAAE;MAC3DQ,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,YAAYR,GAAG,IAAIG,UAAU;MAC9C;IACF,CAAC,CAAC;IACF,IAAI,CAACC,QAAQ,CAACK,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBN,QAAQ,CAACO,MAAM,EAAE,CAAC;IAC3D;IACA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClC;IACA,OAAOD,IAAI,CAACE,OAAO,CAAEC,IAAI,IAAKA,IAAI,CAACC,SAAS,IAAI,EAAE,CAAC;EACrD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,OAAO,EAAE,CAAC,CAAC;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}