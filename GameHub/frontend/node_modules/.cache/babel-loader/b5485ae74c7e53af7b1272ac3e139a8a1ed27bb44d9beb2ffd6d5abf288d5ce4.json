{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/News.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { fetchAllNews, searchForGame, getGenres } from \"../service/NewsService\";\nimport { fetchGameTrailers } from \"../service/GameTrailersFromYoutubeService\";\nimport { AddNewsGamesToGameList, AddToWishList, SaveToCollection } from \"../NewsHelper/AddNewsGamesToGameList\";\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\nimport \"../assests/News.css\"; // Make sure your CSS is updated (see below)\nimport { checkAccountType } from \"../utility/CheckAccountType\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction News() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const selectedGenre = searchParams.get(\"genre\") || \"\";\n  const [newsData, setNewsData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const textRef = useRef(\"\");\n  const navigate = useNavigate();\n  const username = localStorage.getItem(\"username\");\n  const [genres, setGenres] = useState([]);\n  const [hoveredGameSlug, setHoveredGameSlug] = useState(null);\n\n  // Holds trailer data for each game, keyed by slug\n  const [trailers, setTrailers] = useState({});\n  const trailerRef = useRef({});\n  useEffect(() => {\n    trailerRef.current = trailers;\n  }, [trailers]);\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") handleSearch();\n  };\n  const handleSearch = async () => {\n    const inputValue = textRef.current.value.trim();\n    try {\n      if (!inputValue) {\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } else {\n        const results = await searchForGame(inputValue);\n        setNewsData(results || []);\n      }\n    } catch (err) {\n      setError(err);\n    }\n    textRef.current.value = \"\";\n  };\n\n  // Navigate to game detail page\n  const handleCardClick = game => {\n    navigate(`/news/game/${game.id}`);\n  };\n\n  // Fetch news on mount or when genre changes\n  useEffect(() => {\n    async function getNews() {\n      try {\n        setLoading(true);\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getNews();\n  }, [selectedGenre]);\n\n  // Fetch genres\n  useEffect(() => {\n    async function fetchGenreOptions() {\n      try {\n        const data = await getGenres();\n        setGenres(data);\n      } catch (err) {\n        console.error(\"Error fetching genres:\", err);\n      }\n    }\n    fetchGenreOptions();\n  }, []);\n  useEffect(() => {\n    if (newsData.length > 0) {\n      let isMounted = true;\n      const fetchTrailersWithThrottle = async () => {\n        const newTrailers = {};\n\n        // Process games sequentially with delay\n        for (const item of newsData) {\n          if (!isMounted) break;\n\n          // Skip if already fetched\n          if (trailerRef.current[item.slug] !== undefined) continue;\n          try {\n            var _data$items;\n            const data = await fetchGameTrailers({\n              gameName: item.name\n            });\n            newTrailers[item.slug] = ((_data$items = data.items) === null || _data$items === void 0 ? void 0 : _data$items[0]) || null;\n          } catch (error) {\n            console.error(\"Error fetching trailer for\", item.name, error);\n            newTrailers[item.slug] = null;\n          }\n\n          // Add delay between requests (1000ms = 1 second)\n          await new Promise(resolve => setTimeout(resolve, 1000));\n        }\n\n        // Update state once with all new trailers\n        if (isMounted) {\n          setTrailers(prev => ({\n            ...prev,\n            ...newTrailers\n          }));\n        }\n      };\n      fetchTrailersWithThrottle();\n\n      // Cleanup function\n      return () => {\n        isMounted = false;\n      };\n    }\n  }, [newsData]); // Only trigger when newsData changes\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"News and Trending Games For \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"genre-select\",\n          style: {\n            marginRight: \"0.5rem\"\n          },\n          children: \"Filter by Genre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"genre-select\",\n          value: selectedGenre,\n          onChange: e => navigate(e.target.value ? `/news?genre=${e.target.value}` : \"/news\"),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Genres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: genre.slug,\n            children: genre.name\n          }, genre.slug, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: textRef,\n          type: \"text\",\n          placeholder: \"Search for Game\",\n          onKeyDown: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSearch,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), newsData.map(item => {\n        const isHovered = hoveredGameSlug === item.slug;\n        const trailerData = trailers[item.slug];\n        const hasTrailer = trailerData !== undefined && trailerData !== null;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-card\",\n          onMouseEnter: () => setHoveredGameSlug(item.slug),\n          onMouseLeave: () => setHoveredGameSlug(null),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-media\",\n            children: [isHovered && hasTrailer ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n              width: \"100%\",\n              height: \"100%\",\n              src: `https://www.youtube.com/embed/${trailerData.id.videoId}?autoplay=1&mute=1&start=15`,\n              frameBorder: \"0\",\n              allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n              allowFullScreen: true,\n              title: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.background_image,\n              alt: item.name,\n              className: \"card-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this), isHovered && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"play-full-video-button\",\n              onClick: () => handleCardClick(item),\n              children: \"Play full video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"platform-icons\",\n              children: item.platforms.map(p => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"platform-icon\",\n                children: p.platform.name\n              }, p.platform.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"game-title\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"player-count\",\n                children: \"+304\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"emoji-target\",\n                children: \"\\uD83C\\uDFAF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"release-date\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Release date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this), \" \", item.released ? item.released : \"TBA\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"genres\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Genres:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this), \" \", item.genres.map(g => g.name).join(\", \")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"chart-position\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Chart:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this), \" #1 Top 2026\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"rating\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Rating:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this), \" \", item.rating > 0 ? item.rating : item.averageRating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"show-more-button\",\n              onClick: () => alert(\"Show more like this...\"),\n              children: \"Show more like this\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, item.slug, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(News, \"QSeVuIqHSPQdi3hjpGQwGSsC6dY=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = News;\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","useRef","fetchAllNews","searchForGame","getGenres","fetchGameTrailers","AddNewsGamesToGameList","AddToWishList","SaveToCollection","useSearchParams","useNavigate","checkAccountType","jsxDEV","_jsxDEV","News","_s","searchParams","selectedGenre","get","newsData","setNewsData","loading","setLoading","error","setError","textRef","navigate","username","localStorage","getItem","genres","setGenres","hoveredGameSlug","setHoveredGameSlug","trailers","setTrailers","trailerRef","current","handleKeyPress","event","key","handleSearch","inputValue","value","trim","data","results","err","handleCardClick","game","id","getNews","fetchGenreOptions","console","length","isMounted","fetchTrailersWithThrottle","newTrailers","item","slug","undefined","_data$items","gameName","name","items","Promise","resolve","setTimeout","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","style","marginBottom","htmlFor","marginRight","onChange","e","target","map","genre","ref","type","placeholder","onKeyDown","onClick","isHovered","trailerData","hasTrailer","onMouseEnter","onMouseLeave","width","height","src","videoId","frameBorder","allow","allowFullScreen","title","background_image","alt","platforms","p","platform","released","g","join","rating","averageRating","alert","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/News.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { fetchAllNews, searchForGame, getGenres } from \"../service/NewsService\";\nimport { fetchGameTrailers } from \"../service/GameTrailersFromYoutubeService\";\nimport { AddNewsGamesToGameList, AddToWishList, SaveToCollection } from \"../NewsHelper/AddNewsGamesToGameList\";\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\nimport \"../assests/News.css\"; // Make sure your CSS is updated (see below)\nimport { checkAccountType } from \"../utility/CheckAccountType\";\n\nfunction News() {\n  const [searchParams] = useSearchParams();\n  const selectedGenre = searchParams.get(\"genre\") || \"\";\n  const [newsData, setNewsData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const textRef = useRef(\"\");\n  const navigate = useNavigate();\n  const username = localStorage.getItem(\"username\");\n  const [genres, setGenres] = useState([]);\n  const [hoveredGameSlug, setHoveredGameSlug] = useState(null);\n  \n  // Holds trailer data for each game, keyed by slug\n  const [trailers, setTrailers] = useState({});\n  \n  const trailerRef = useRef({});\n  useEffect(() => {\n    trailerRef.current = trailers;\n  }, [trailers]);\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") handleSearch();\n  };\n\n  const handleSearch = async () => {\n    const inputValue = textRef.current.value.trim();\n    try {\n      if (!inputValue) {\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } else {\n        const results = await searchForGame(inputValue);\n        setNewsData(results || []);\n      }\n    } catch (err) {\n      setError(err);\n    }\n    textRef.current.value = \"\";\n  };\n\n  // Navigate to game detail page\n  const handleCardClick = (game) => {\n    navigate(`/news/game/${game.id}`);\n  };\n\n  // Fetch news on mount or when genre changes\n  useEffect(() => {\n    async function getNews() {\n      try {\n        setLoading(true);\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getNews();\n  }, [selectedGenre]);\n\n  // Fetch genres\n  useEffect(() => {\n    async function fetchGenreOptions() {\n      try {\n        const data = await getGenres();\n        setGenres(data);\n      } catch (err) {\n        console.error(\"Error fetching genres:\", err);\n      }\n    }\n    fetchGenreOptions();\n  }, []);\n\n  useEffect(() => {\n    if (newsData.length > 0) {\n      let isMounted = true;\n\n      const fetchTrailersWithThrottle = async () => {\n        const newTrailers = {};\n\n        // Process games sequentially with delay\n        for (const item of newsData) {\n          if (!isMounted) break;\n\n          // Skip if already fetched\n          if (trailerRef.current[item.slug] !== undefined) continue;\n\n          try {\n            const data = await fetchGameTrailers({ gameName: item.name });\n            newTrailers[item.slug] = data.items?.[0] || null;\n          } catch (error) {\n            console.error(\"Error fetching trailer for\", item.name, error);\n            newTrailers[item.slug] = null;\n          }\n\n          // Add delay between requests (1000ms = 1 second)\n          await new Promise(resolve => setTimeout(resolve, 1000));\n        }\n\n        // Update state once with all new trailers\n        if (isMounted) {\n          setTrailers(prev => ({ ...prev, ...newTrailers }));\n        }\n      };\n\n      fetchTrailersWithThrottle();\n\n      // Cleanup function\n      return () => {\n        isMounted = false;\n      };\n    }\n  }, [newsData]); // Only trigger when newsData changes\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <div className=\"news-page\">\n      {/* You could add a sidebar here if desired */}\n      <div className=\"news-content\">\n        <h1>News and Trending Games For {username}</h1>\n\n        {/* Genre Filter */}\n        <div style={{ marginBottom: \"1rem\" }}>\n          <label htmlFor=\"genre-select\" style={{ marginRight: \"0.5rem\" }}>\n            Filter by Genre:\n          </label>\n          <select\n            id=\"genre-select\"\n            value={selectedGenre}\n            onChange={(e) =>\n              navigate(\n                e.target.value ? `/news?genre=${e.target.value}` : \"/news\"\n              )\n            }\n          >\n            <option value=\"\">All Genres</option>\n            {genres.map((genre) => (\n              <option key={genre.slug} value={genre.slug}>\n                {genre.name}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* Search Bar */}\n        <div className=\"search-bar\">\n          <input\n            ref={textRef}\n            type=\"text\"\n            placeholder=\"Search for Game\"\n            onKeyDown={handleKeyPress}\n          />\n          <button onClick={handleSearch}>Search</button>\n        </div>\n\n        {/* Game Cards */}\n        {newsData.map((item) => {\n          const isHovered = hoveredGameSlug === item.slug;\n          const trailerData = trailers[item.slug];\n          const hasTrailer = trailerData !== undefined && trailerData !== null;\n\n          return (\n            <div\n              className=\"game-card\"\n              key={item.slug}\n              onMouseEnter={() => setHoveredGameSlug(item.slug)}\n              onMouseLeave={() => setHoveredGameSlug(null)}\n            >\n              {/* Card Header/Media */}\n              <div className=\"card-media\">\n                {isHovered && hasTrailer ? (\n                  <iframe\n                    width=\"100%\"\n                    height=\"100%\"\n                    src={`https://www.youtube.com/embed/${trailerData.id.videoId}?autoplay=1&mute=1&start=15`}\n                    frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen\n                    title={item.name}\n                  ></iframe>\n                ) : (\n                  <img\n                    src={item.background_image}\n                    alt={item.name}\n                    className=\"card-image\"\n                  />\n                )}\n\n                {/* Example \"Play Full Video\" button (just a placeholder) */}\n                {isHovered && (\n                  <button\n                    className=\"play-full-video-button\"\n                    onClick={() => handleCardClick(item)}\n                  >\n                    Play full video\n                  </button>\n                )}\n              </div>\n\n              {/* Card Body */}\n              <div className=\"card-body\">\n                {/* Platform icons or text */}\n                <div className=\"platform-icons\">\n                  {item.platforms.map((p) => (\n                    <span key={p.platform.id} className=\"platform-icon\">\n                      {p.platform.name}\n                    </span>\n                  ))}\n                </div>\n\n                <h2 className=\"game-title\">{item.name}</h2>\n\n                {/* Example “+304” or other stat */}\n                <div className=\"stats-row\">\n                  <span className=\"player-count\">+304</span>\n                  <span className=\"emoji-target\">🎯</span>\n                </div>\n\n                {/* Release date, genres, etc. */}\n                <p className=\"release-date\">\n                  <strong>Release date:</strong>{\" \"}\n                  {item.released ? item.released : \"TBA\"}\n                </p>\n                <p className=\"genres\">\n                  <strong>Genres:</strong>{\" \"}\n                  {item.genres.map((g) => g.name).join(\", \")}\n                </p>\n\n                {/* Example chart position */}\n                <p className=\"chart-position\">\n                  <strong>Chart:</strong> #1 Top 2026\n                </p>\n\n                <p className=\"rating\">\n                  <strong>Rating:</strong>{\" \"}\n                  {item.rating > 0 ? item.rating : item.averageRating}\n                </p>\n\n                <button\n                  className=\"show-more-button\"\n                  onClick={() => alert(\"Show more like this...\")}\n                >\n                  Show more like this\n                </button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default News;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}