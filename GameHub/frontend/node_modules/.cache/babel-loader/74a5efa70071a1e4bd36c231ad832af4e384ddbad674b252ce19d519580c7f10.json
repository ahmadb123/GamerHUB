{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/ClipsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { getGameClips } from \"../service/XboxGameClips\";\nimport '../assests/ClipsPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ClipsPage() {\n  _s();\n  const [gameClips, setGameClips] = useState([]);\n  const [isFetchingClips, setIsFetchingClips] = useState(true);\n  const [error, setError] = useState(null);\n  const [filter, setFilter] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const clipsPerPage = 10;\n  const fetchGameClips = async () => {\n    try {\n      const clips = await getGameClips();\n      setGameClips(clips || []); // Ensure array even if undefined\n    } catch (err) {\n      console.error(\"Error fetching game clips:\", err);\n      setError(\"Failed to load game clips. Please try again.\");\n    } finally {\n      setIsFetchingClips(false);\n    }\n  };\n  useEffect(() => {\n    fetchGameClips();\n  }, []);\n\n  // Memoize filtered clips to avoid recalculating on every render\n  const filteredClips = useMemo(() => {\n    return gameClips.filter(clip => {\n      var _clip$titleName;\n      return (_clip$titleName = clip.titleName) === null || _clip$titleName === void 0 ? void 0 : _clip$titleName.toLowerCase().includes(filter.toLowerCase());\n    });\n  }, [gameClips, filter]);\n\n  // Pagination logic\n  const totalPages = Math.ceil(filteredClips.length / clipsPerPage);\n  const paginatedClips = useMemo(() => {\n    const start = (currentPage - 1) * clipsPerPage;\n    const end = start + clipsPerPage;\n    return filteredClips.slice(start, end);\n  }, [filteredClips, currentPage]);\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clips-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Xbox Game Clips\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"filter\",\n        children: \"Filter by Game:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"filter\",\n        type: \"text\",\n        value: filter,\n        onChange: e => setFilter(e.target.value),\n        placeholder: \"Enter game title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), isFetchingClips ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading game clips...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : filteredClips.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No game clips found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clips-grid\",\n        children: paginatedClips.map(clip => {\n          var _clip$gameClipUris, _clip$gameClipUris$;\n          const videoUri = (_clip$gameClipUris = clip.gameClipUris) === null || _clip$gameClipUris === void 0 ? void 0 : (_clip$gameClipUris$ = _clip$gameClipUris[0]) === null || _clip$gameClipUris$ === void 0 ? void 0 : _clip$gameClipUris$.uri;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"clip-card\",\n            children: [videoUri ? /*#__PURE__*/_jsxDEV(\"video\", {\n              src: videoUri,\n              controls: true,\n              className: \"clip-video\",\n              children: \"Your browser does not support the video tag.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-video\",\n              children: \"Video unavailable\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"clip-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"clip-title\",\n                children: clip.titleName || \"Untitled Clip\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"clip-date\",\n                children: [\"Recorded on:\", \" \", new Date(clip.dateRecorded).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)]\n          }, clip.gameClipId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: Array.from({\n          length: totalPages\n        }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `pagination-button ${currentPage === index + 1 ? \"active\" : \"\"}`,\n          onClick: () => handlePageChange(index + 1),\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(ClipsPage, \"UkqZj0LI0xazl/eVav0T0ZCf/dE=\");\n_c = ClipsPage;\nexport default ClipsPage;\nvar _c;\n$RefreshReg$(_c, \"ClipsPage\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","getGameClips","jsxDEV","_jsxDEV","Fragment","_Fragment","ClipsPage","_s","gameClips","setGameClips","isFetchingClips","setIsFetchingClips","error","setError","filter","setFilter","currentPage","setCurrentPage","clipsPerPage","fetchGameClips","clips","err","console","filteredClips","clip","_clip$titleName","titleName","toLowerCase","includes","totalPages","Math","ceil","length","paginatedClips","start","end","slice","handlePageChange","pageNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","target","placeholder","map","_clip$gameClipUris","_clip$gameClipUris$","videoUri","gameClipUris","uri","src","controls","Date","dateRecorded","toLocaleDateString","gameClipId","Array","from","_","index","onClick","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/ClipsPage.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport { getGameClips } from \"../service/XboxGameClips\";\nimport '../assests/ClipsPage.css';\n\nfunction ClipsPage() {\n  const [gameClips, setGameClips] = useState([]);\n  const [isFetchingClips, setIsFetchingClips] = useState(true);\n  const [error, setError] = useState(null);\n  const [filter, setFilter] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const clipsPerPage = 10;\n\n  const fetchGameClips = async () => {\n    try {\n      const clips = await getGameClips();\n      setGameClips(clips || []); // Ensure array even if undefined\n    } catch (err) {\n      console.error(\"Error fetching game clips:\", err);\n      setError(\"Failed to load game clips. Please try again.\");\n    } finally {\n      setIsFetchingClips(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchGameClips();\n  }, []);\n\n  // Memoize filtered clips to avoid recalculating on every render\n  const filteredClips = useMemo(() => {\n    return gameClips.filter((clip) =>\n      clip.titleName?.toLowerCase().includes(filter.toLowerCase())\n    );\n  }, [gameClips, filter]);\n\n  // Pagination logic\n  const totalPages = Math.ceil(filteredClips.length / clipsPerPage);\n  const paginatedClips = useMemo(() => {\n    const start = (currentPage - 1) * clipsPerPage;\n    const end = start + clipsPerPage;\n    return filteredClips.slice(start, end);\n  }, [filteredClips, currentPage]);\n\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <div className=\"clips-container\">\n      <h2>Xbox Game Clips</h2>\n      <div className=\"filter-bar\">\n        <label htmlFor=\"filter\">Filter by Game:</label>\n        <input\n          id=\"filter\"\n          type=\"text\"\n          value={filter}\n          onChange={(e) => setFilter(e.target.value)}\n          placeholder=\"Enter game title\"\n        />\n      </div>\n\n      {isFetchingClips ? (\n        <p>Loading game clips...</p>\n      ) : error ? (\n        <p>{error}</p>\n      ) : filteredClips.length === 0 ? (\n        <p>No game clips found.</p>\n      ) : (\n        <>\n          <div className=\"clips-grid\">\n            {paginatedClips.map((clip) => {\n              const videoUri = clip.gameClipUris?.[0]?.uri;\n              return (\n                <div key={clip.gameClipId} className=\"clip-card\">\n                  {videoUri ? (\n                    <video src={videoUri} controls className=\"clip-video\">\n                      Your browser does not support the video tag.\n                    </video>\n                  ) : (\n                    <div className=\"no-video\">Video unavailable</div>\n                  )}\n                  <div className=\"clip-info\">\n                    <h3 className=\"clip-title\">\n                      {clip.titleName || \"Untitled Clip\"}\n                    </h3>\n                    <p className=\"clip-date\">\n                      Recorded on:{\" \"}\n                      {new Date(clip.dateRecorded).toLocaleDateString()}\n                    </p>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n\n          {totalPages > 1 && (\n            <div className=\"pagination\">\n              {Array.from({ length: totalPages }, (_, index) => (\n                <button\n                  key={index}\n                  className={`pagination-button ${\n                    currentPage === index + 1 ? \"active\" : \"\"\n                  }`}\n                  onClick={() => handlePageChange(index + 1)}\n                >\n                  {index + 1}\n                </button>\n              ))}\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default ClipsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}