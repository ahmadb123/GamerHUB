{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/LandingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport { handleLogin, exchangeCodeForTokens } from \"../service/XboxAuthService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faXbox, faPlaystation, faSteam } from \"@fortawesome/free-brands-svg-icons\";\nimport { handleSteamLogin, checkSteamAuth } from \"../service/SteamAuthService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LandingPage() {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const handleXboxLogin = async () => {\n      await exchangeCodeForTokens();\n      localStorage.setItem(\"platform\", \"xbox\");\n      navigate(\"/main\");\n    };\n    const urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.get(\"code\")) {\n      handleXboxLogin();\n    }\n  }, [navigate]);\n  const handlePlatformLogin = async platform => {\n    if (platform === \"xbox\") {\n      await handleLogin();\n    }\n    if (platform === \"steam\") {\n      try {\n        // Open Steam login in a popup\n        const popup = window.open('', 'steam-auth', 'width=500,height=600');\n\n        // Get Steam login URL from backend\n        const loginUrl = await handleSteamLogin();\n        popup.location.href = loginUrl;\n\n        // Check for popup closure\n        const checkAuth = setInterval(async () => {\n          if (popup.closed) {\n            clearInterval(checkAuth);\n\n            // Check authentication status with backend\n            const response = await checkSteamAuth();\n            if (response !== null && response !== void 0 && response.steamID) {\n              localStorage.setItem(\"steamId\", response.steamID);\n              localStorage.setItem(\"platform\", \"steam\");\n              navigate(\"/main\");\n            } else {\n              toast.error((response === null || response === void 0 ? void 0 : response.error) || \"Steam authentication failed\");\n            }\n          }\n        }, 500);\n      } catch (error) {\n        toast.error(\"Failed to initiate Steam login: \" + error.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"landing-page\",\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to GamerHub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select a platform to log in:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        gap: \"20px\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlatformLogin(\"xbox\"),\n        style: buttonStyle(\"green\"),\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faXbox,\n          style: {\n            marginRight: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), \"Xbox Login\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlatformLogin(\"psn\"),\n        style: buttonStyle(\"blue\"),\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPlaystation,\n          style: {\n            marginRight: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), \"PSN Login\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlatformLogin(\"steam\"),\n        style: buttonStyle(\"gray\"),\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSteam,\n          style: {\n            marginRight: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), \"Steam Login\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(LandingPage, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = LandingPage;\nconst buttonStyle = color => ({\n  padding: \"10px 20px\",\n  fontSize: \"16px\",\n  cursor: \"pointer\",\n  backgroundColor: color,\n  color: \"#ffffff\",\n  border: \"none\",\n  borderRadius: \"5px\"\n});\nexport default LandingPage;\nvar _c;\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"names":["React","useEffect","useNavigate","toast","handleLogin","exchangeCodeForTokens","FontAwesomeIcon","faXbox","faPlaystation","faSteam","handleSteamLogin","checkSteamAuth","jsxDEV","_jsxDEV","LandingPage","_s","navigate","handleXboxLogin","localStorage","setItem","urlParams","URLSearchParams","window","location","search","get","handlePlatformLogin","platform","popup","open","loginUrl","href","checkAuth","setInterval","closed","clearInterval","response","steamID","error","message","className","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","gap","onClick","buttonStyle","icon","marginRight","_c","color","padding","fontSize","cursor","backgroundColor","border","borderRadius","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/LandingPage.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport { handleLogin, exchangeCodeForTokens } from \"../service/XboxAuthService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faXbox, faPlaystation, faSteam } from \"@fortawesome/free-brands-svg-icons\";\nimport { handleSteamLogin, checkSteamAuth } from \"../service/SteamAuthService\";\n\nfunction LandingPage() {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const handleXboxLogin = async () => {\n            await exchangeCodeForTokens();\n            localStorage.setItem(\"platform\", \"xbox\");\n            navigate(\"/main\");\n        };\n\n        const urlParams = new URLSearchParams(window.location.search);\n        if (urlParams.get(\"code\")) {\n            handleXboxLogin();\n        }\n    }, [navigate]);\n\n    const handlePlatformLogin = async (platform) => {\n        if (platform === \"xbox\") {\n            await handleLogin();\n        }\n        if (platform === \"steam\") {\n            try {\n                // Open Steam login in a popup\n                const popup = window.open('', 'steam-auth', 'width=500,height=600');\n                \n                // Get Steam login URL from backend\n                const loginUrl = await handleSteamLogin();\n                popup.location.href = loginUrl;\n\n                // Check for popup closure\n                const checkAuth = setInterval(async () => {\n                    if (popup.closed) {\n                        clearInterval(checkAuth);\n                        \n                        // Check authentication status with backend\n                        const response = await checkSteamAuth();\n                        \n                        if (response?.steamID) {\n                            localStorage.setItem(\"steamId\", response.steamID);\n                            localStorage.setItem(\"platform\", \"steam\");\n                            navigate(\"/main\");\n                        } else {\n                            toast.error(response?.error || \"Steam authentication failed\");\n                        }\n                    }\n                }, 500);\n            } catch (error) {\n                toast.error(\"Failed to initiate Steam login: \" + error.message);\n            }\n        }\n    };\n\n    return (\n        <div className=\"landing-page\" style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n            <h1>Welcome to GamerHub</h1>\n            <p>Select a platform to log in:</p>\n            <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\", marginTop: \"20px\" }}>\n                <button onClick={() => handlePlatformLogin(\"xbox\")} style={buttonStyle(\"green\")}>\n                    <FontAwesomeIcon icon={faXbox} style={{ marginRight: \"10px\" }} />\n                    Xbox Login\n                </button>\n                <button onClick={() => handlePlatformLogin(\"psn\")} style={buttonStyle(\"blue\")}>\n                    <FontAwesomeIcon icon={faPlaystation} style={{ marginRight: \"10px\" }} />\n                    PSN Login\n                </button>\n                <button onClick={() => handlePlatformLogin(\"steam\")} style={buttonStyle(\"gray\")}>\n                    <FontAwesomeIcon icon={faSteam} style={{ marginRight: \"10px\" }} />\n                    Steam Login\n                </button>\n            </div>\n        </div>\n    );\n}\n\nconst buttonStyle = (color) => ({\n    padding: \"10px 20px\",\n    fontSize: \"16px\",\n    cursor: \"pointer\",\n    backgroundColor: color,\n    color: \"#ffffff\",\n    border: \"none\",\n    borderRadius: \"5px\",\n});\n\nexport default LandingPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}