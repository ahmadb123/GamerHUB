{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/NewsHelper/AddNewsGamesToGameList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { fetchAllNews, searchForGame, getGenres } from \"../service/NewsService\";\nimport { fetchGameTrailers } from \"../service/GameTrailersFromYoutubeService\";\nimport { AddNewsGamesToGameList, AddToWishList, SaveToCollection } from \"../NewsHelper/AddNewsGamesToGameList\";\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\nimport \"../assests/News.css\";\nimport { checkAccountType } from \"../utility/CheckAccountType\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction News() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const selectedGenre = searchParams.get(\"genre\") || \"\";\n  const [newsData, setNewsData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [genres, setGenres] = useState([]);\n  const [trailers, setTrailers] = useState({});\n  const trailerRef = useRef({}); // keep a ref so we don’t refetch same trailers\n\n  const [hoveredGameSlug, setHoveredGameSlug] = useState(null);\n  const textRef = useRef(\"\");\n  const navigate = useNavigate();\n  const username = localStorage.getItem(\"username\");\n  useEffect(() => {\n    trailerRef.current = trailers;\n  }, [trailers]);\n\n  // Handle Enter press in search bar\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  // Search by name or fetch all\n  const handleSearch = async () => {\n    const inputValue = textRef.current.value.trim();\n    try {\n      setLoading(true);\n      setError(null);\n      if (!inputValue) {\n        // If empty, fetch all news (optionally filtered by genre)\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } else {\n        const results = await searchForGame(inputValue);\n        setNewsData(results || []);\n      }\n    } catch (err) {\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n    textRef.current.value = \"\";\n  };\n\n  // Navigate to detail page\n  const handleCardClick = game => {\n    navigate(`/news/game/${game.id}`);\n  };\n\n  // Fetch news on mount or when genre changes\n  useEffect(() => {\n    async function getNews() {\n      try {\n        setLoading(true);\n        setError(null);\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getNews();\n  }, [selectedGenre]);\n\n  // Fetch genres on mount\n  useEffect(() => {\n    async function fetchGenreOptions() {\n      try {\n        const data = await getGenres();\n        setGenres(data);\n      } catch (err) {\n        console.error(\"Error fetching genres:\", err);\n      }\n    }\n    fetchGenreOptions();\n  }, []);\n\n  /**\n   * Pre-fetch trailers for each game so that onHover is smooth.\n   * This effect runs whenever `newsData` changes.\n   */\n  useEffect(() => {\n    if (newsData.length > 0) {\n      let isMounted = true;\n      const fetchAllTrailers = async () => {\n        const newTrailerData = {};\n        for (const item of newsData) {\n          // If we've unmounted, stop\n          if (!isMounted) break;\n\n          // Skip if already fetched\n          if (trailerRef.current[item.slug] !== undefined) continue;\n          try {\n            var _data$items;\n            const data = await fetchGameTrailers({\n              gameName: item.name\n            });\n            if ((data === null || data === void 0 ? void 0 : (_data$items = data.items) === null || _data$items === void 0 ? void 0 : _data$items.length) > 0) {\n              newTrailerData[item.slug] = data.items[0];\n            } else {\n              newTrailerData[item.slug] = null;\n            }\n          } catch (err) {\n            console.error(`Error fetching trailer for ${item.name}:`, err);\n            newTrailerData[item.slug] = null;\n          }\n        }\n\n        // Update state if still mounted\n        if (isMounted) {\n          setTrailers(prev => ({\n            ...prev,\n            ...newTrailerData\n          }));\n        }\n      };\n      fetchAllTrailers();\n      return () => {\n        isMounted = false;\n      };\n    }\n  }, [newsData]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"News and Trending Games For \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"genre-select\",\n        style: {\n          marginRight: \"0.5rem\"\n        },\n        children: \"Filter by Genre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"genre-select\",\n        value: selectedGenre,\n        onChange: e => navigate(e.target.value ? `/news?genre=${e.target.value}` : \"/news\"),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Genres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre.slug,\n          children: genre.name\n        }, genre.slug, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: textRef,\n        type: \"text\",\n        placeholder: \"Search for Game\",\n        onKeyDown: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-cards-container\",\n      children: newsData.map(item => {\n        var _trailerData$id, _item$platforms;\n        const isHovered = hoveredGameSlug === item.slug;\n        const trailerData = trailers[item.slug];\n        const hasTrailer = trailerData && ((_trailerData$id = trailerData.id) === null || _trailerData$id === void 0 ? void 0 : _trailerData$id.videoId);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-card\",\n          onMouseEnter: () => setHoveredGameSlug(item.slug),\n          onMouseLeave: () => setHoveredGameSlug(null),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-card-video-preview game-card-video-preview_button\",\n            style: {\n              backgroundImage: `url(${item.background_image})`\n            },\n            children: isHovered && hasTrailer && /*#__PURE__*/_jsxDEV(\"iframe\", {\n              width: \"100%\",\n              height: \"100%\",\n              src: `https://www.youtube.com/embed/${trailerData.id.videoId}?autoplay=1&mute=1&start=15`,\n              frameBorder: \"0\",\n              allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n              allowFullScreen: true,\n              title: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-card-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"platforms platforms_medium game-card-medium__platforms\",\n              children: (_item$platforms = item.platforms) === null || _item$platforms === void 0 ? void 0 : _item$platforms.map(p => {\n                // Example: add a specialized class or just show name\n                const slug = p.platform.slug; // e.g. 'pc', 'xbox', 'playstation'\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `platforms__platform platforms__platform_${slug}`,\n                  children: p.platform.name\n                }, p.platform.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"game-title\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), isHovered && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hover-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"release-date\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Release date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 23\n                }, this), \" \", item.released ? item.released : \"TBA\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"genres\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Genres:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 23\n                }, this), \" \", item.genres.map(g => g.name).join(\", \")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"rating\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Rating:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 23\n                }, this), \" \", item.rating > 0 ? item.rating : item.averageRating]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"show-more-button\",\n              onClick: () => handleCardClick(item),\n              children: \"Show more\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, item.slug, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(News, \"kFWghbMlM+8XtFNwKw4jkbzwz7o=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = News;\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","useRef","fetchAllNews","searchForGame","getGenres","fetchGameTrailers","AddNewsGamesToGameList","AddToWishList","SaveToCollection","useSearchParams","useNavigate","checkAccountType","jsxDEV","_jsxDEV","News","_s","searchParams","selectedGenre","get","newsData","setNewsData","loading","setLoading","error","setError","genres","setGenres","trailers","setTrailers","trailerRef","hoveredGameSlug","setHoveredGameSlug","textRef","navigate","username","localStorage","getItem","current","handleKeyPress","event","key","handleSearch","inputValue","value","trim","data","results","err","handleCardClick","game","id","getNews","fetchGenreOptions","console","length","isMounted","fetchAllTrailers","newTrailerData","item","slug","undefined","_data$items","gameName","name","items","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","style","marginBottom","htmlFor","marginRight","onChange","e","target","map","genre","ref","type","placeholder","onKeyDown","onClick","_trailerData$id","_item$platforms","isHovered","trailerData","hasTrailer","videoId","onMouseEnter","onMouseLeave","backgroundImage","background_image","width","height","src","frameBorder","allow","allowFullScreen","title","platforms","p","platform","released","g","join","rating","averageRating","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/NewsHelper/AddNewsGamesToGameList.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport {\n  fetchAllNews,\n  searchForGame,\n  getGenres,\n} from \"../service/NewsService\";\nimport { fetchGameTrailers } from \"../service/GameTrailersFromYoutubeService\";\nimport {\n  AddNewsGamesToGameList,\n  AddToWishList,\n  SaveToCollection,\n} from \"../NewsHelper/AddNewsGamesToGameList\";\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\nimport \"../assests/News.css\";\nimport { checkAccountType } from \"../utility/CheckAccountType\";\n\nfunction News() {\n  const [searchParams] = useSearchParams();\n  const selectedGenre = searchParams.get(\"genre\") || \"\";\n  const [newsData, setNewsData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const [genres, setGenres] = useState([]);\n  const [trailers, setTrailers] = useState({});\n  const trailerRef = useRef({}); // keep a ref so we don’t refetch same trailers\n\n  const [hoveredGameSlug, setHoveredGameSlug] = useState(null);\n  const textRef = useRef(\"\");\n  const navigate = useNavigate();\n  const username = localStorage.getItem(\"username\");\n\n  useEffect(() => {\n    trailerRef.current = trailers;\n  }, [trailers]);\n\n  // Handle Enter press in search bar\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  // Search by name or fetch all\n  const handleSearch = async () => {\n    const inputValue = textRef.current.value.trim();\n    try {\n      setLoading(true);\n      setError(null);\n\n      if (!inputValue) {\n        // If empty, fetch all news (optionally filtered by genre)\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } else {\n        const results = await searchForGame(inputValue);\n        setNewsData(results || []);\n      }\n    } catch (err) {\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n    textRef.current.value = \"\";\n  };\n\n  // Navigate to detail page\n  const handleCardClick = (game) => {\n    navigate(`/news/game/${game.id}`);\n  };\n\n  // Fetch news on mount or when genre changes\n  useEffect(() => {\n    async function getNews() {\n      try {\n        setLoading(true);\n        setError(null);\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getNews();\n  }, [selectedGenre]);\n\n  // Fetch genres on mount\n  useEffect(() => {\n    async function fetchGenreOptions() {\n      try {\n        const data = await getGenres();\n        setGenres(data);\n      } catch (err) {\n        console.error(\"Error fetching genres:\", err);\n      }\n    }\n    fetchGenreOptions();\n  }, []);\n\n  /**\n   * Pre-fetch trailers for each game so that onHover is smooth.\n   * This effect runs whenever `newsData` changes.\n   */\n  useEffect(() => {\n    if (newsData.length > 0) {\n      let isMounted = true;\n\n      const fetchAllTrailers = async () => {\n        const newTrailerData = {};\n\n        for (const item of newsData) {\n          // If we've unmounted, stop\n          if (!isMounted) break;\n\n          // Skip if already fetched\n          if (trailerRef.current[item.slug] !== undefined) continue;\n\n          try {\n            const data = await fetchGameTrailers({ gameName: item.name });\n            if (data?.items?.length > 0) {\n              newTrailerData[item.slug] = data.items[0];\n            } else {\n              newTrailerData[item.slug] = null;\n            }\n          } catch (err) {\n            console.error(`Error fetching trailer for ${item.name}:`, err);\n            newTrailerData[item.slug] = null;\n          }\n        }\n\n        // Update state if still mounted\n        if (isMounted) {\n          setTrailers((prev) => ({ ...prev, ...newTrailerData }));\n        }\n      };\n\n      fetchAllTrailers();\n\n      return () => {\n        isMounted = false;\n      };\n    }\n  }, [newsData]);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <div className=\"news-page\">\n      <h1>News and Trending Games For {username}</h1>\n\n      {/* Genre Filter */}\n      <div style={{ marginBottom: \"1rem\" }}>\n        <label htmlFor=\"genre-select\" style={{ marginRight: \"0.5rem\" }}>\n          Filter by Genre:\n        </label>\n        <select\n          id=\"genre-select\"\n          value={selectedGenre}\n          onChange={(e) =>\n            navigate(e.target.value ? `/news?genre=${e.target.value}` : \"/news\")\n          }\n        >\n          <option value=\"\">All Genres</option>\n          {genres.map((genre) => (\n            <option key={genre.slug} value={genre.slug}>\n              {genre.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {/* Search Bar */}\n      <div className=\"search-bar\">\n        <input\n          ref={textRef}\n          type=\"text\"\n          placeholder=\"Search for Game\"\n          onKeyDown={handleKeyPress}\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n\n      {/* Game Cards */}\n      <div className=\"game-cards-container\">\n        {newsData.map((item) => {\n          const isHovered = hoveredGameSlug === item.slug;\n          const trailerData = trailers[item.slug];\n          const hasTrailer = trailerData && trailerData.id?.videoId;\n\n          return (\n            <div\n              className=\"game-card\"\n              key={item.slug}\n              onMouseEnter={() => setHoveredGameSlug(item.slug)}\n              onMouseLeave={() => setHoveredGameSlug(null)}\n            >\n              {/* Media / Background */}\n              <div\n                className=\"game-card-video-preview game-card-video-preview_button\"\n                style={{\n                  backgroundImage: `url(${item.background_image})`,\n                }}\n              >\n                {isHovered && hasTrailer && (\n                  <iframe\n                    width=\"100%\"\n                    height=\"100%\"\n                    src={`https://www.youtube.com/embed/${trailerData.id.videoId}?autoplay=1&mute=1&start=15`}\n                    frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen\n                    title={item.name}\n                  ></iframe>\n                )}\n              </div>\n\n              {/* Info Section */}\n              <div className=\"game-card-info\">\n                {/* Platforms */}\n                <div className=\"platforms platforms_medium game-card-medium__platforms\">\n                  {item.platforms?.map((p) => {\n                    // Example: add a specialized class or just show name\n                    const slug = p.platform.slug; // e.g. 'pc', 'xbox', 'playstation'\n                    return (\n                      <span\n                        key={p.platform.id}\n                        className={`platforms__platform platforms__platform_${slug}`}\n                      >\n                        {p.platform.name}\n                      </span>\n                    );\n                  })}\n                </div>\n\n                <h2 className=\"game-title\">{item.name}</h2>\n\n                {/* Only show these details on hover (or always if you prefer) */}\n                {isHovered && (\n                  <div className=\"hover-details\">\n                    <p className=\"release-date\">\n                      <strong>Release date:</strong>{\" \"}\n                      {item.released ? item.released : \"TBA\"}\n                    </p>\n                    <p className=\"genres\">\n                      <strong>Genres:</strong>{\" \"}\n                      {item.genres.map((g) => g.name).join(\", \")}\n                    </p>\n                    <p className=\"rating\">\n                      <strong>Rating:</strong>{\" \"}\n                      {item.rating > 0 ? item.rating : item.averageRating}\n                    </p>\n                  </div>\n                )}\n\n                {/* Example “Show more” button to open detail page */}\n                <button\n                  className=\"show-more-button\"\n                  onClick={() => handleCardClick(item)}\n                >\n                  Show more\n                </button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default News;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}