{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/News.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { fetchAllNews, searchForGame, getGenres } from \"../service/NewsService\";\nimport { fetchGameTrailers } from \"../service/GameTrailersFromYoutubeService\";\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\nimport \"../assests/News.css\";\nimport { checkAccountType } from \"../utility/CheckAccountType\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction News() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const selectedGenre = searchParams.get(\"genre\") || \"\";\n  const [newsData, setNewsData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const textRef = useRef(\"\");\n  const navigate = useNavigate();\n  const username = localStorage.getItem(\"username\");\n  const [genres, setGenres] = useState([]);\n  const [hoveredGameSlug, setHoveredGameSlug] = useState(null);\n\n  // This stores trailers keyed by slug: { [slug]: trailerData }\n  const [trailers, setTrailers] = useState({});\n\n  // -- Fetch news data and genres as before --\n  useEffect(() => {\n    async function getNews() {\n      try {\n        setLoading(true);\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getNews();\n  }, [selectedGenre]);\n  useEffect(() => {\n    async function fetchGenreOptions() {\n      try {\n        const data = await getGenres();\n        setGenres(data);\n      } catch (err) {\n        console.error(\"Error fetching genres:\", err);\n      }\n    }\n    fetchGenreOptions();\n  }, []);\n\n  // -- Searching logic as before --\n  const handleSearch = async () => {\n    const inputValue = textRef.current.value.trim();\n    try {\n      if (!inputValue) {\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } else {\n        const results = await searchForGame(inputValue);\n        setNewsData(results || []);\n      }\n    } catch (err) {\n      setError(err);\n    }\n    textRef.current.value = \"\";\n  };\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") handleSearch();\n  };\n  const handleCardClick = game => {\n    navigate(`/news/game/${game.id}`);\n  };\n\n  /**\n   * On hover, check if we already have a trailer for this game.\n   * If not, fetch it from the API.\n   */\n  const handleMouseEnter = async item => {\n    setHoveredGameSlug(item.slug);\n    // If we already have a trailer or we tried fetching before (null),\n    // don't fetch again\n    if (trailers[item.slug] !== undefined) return;\n    try {\n      var _data$items;\n      const data = await fetchGameTrailers({\n        gameName: item.name\n      });\n      const trailer = ((_data$items = data.items) === null || _data$items === void 0 ? void 0 : _data$items[0]) || null;\n      setTrailers(prev => ({\n        ...prev,\n        [item.slug]: trailer\n      }));\n    } catch (err) {\n      console.error(\"Error fetching trailer for\", item.name, err);\n      setTrailers(prev => ({\n        ...prev,\n        [item.slug]: null\n      }));\n    }\n  };\n  const handleMouseLeave = () => {\n    setHoveredGameSlug(null);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"News and Trending Games For \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"genre-select\",\n        style: {\n          marginRight: \"0.5rem\"\n        },\n        children: \"Filter by Genre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"genre-select\",\n        value: selectedGenre,\n        onChange: e => navigate(e.target.value ? `/news?genre=${e.target.value}` : \"/news\"),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Genres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre.slug,\n          children: genre.name\n        }, genre.slug, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: textRef,\n        type: \"text\",\n        placeholder: \"Search for Game\",\n        onKeyDown: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), newsData.map(item => {\n      const isHovered = hoveredGameSlug === item.slug;\n      const trailerData = trailers[item.slug];\n      const hasTrailer = trailerData !== undefined && trailerData !== null;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-card\",\n        onMouseEnter: () => handleMouseEnter(item),\n        onMouseLeave: handleMouseLeave,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-media\",\n          children: [isHovered && hasTrailer ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n            width: \"100%\",\n            height: \"100%\",\n            src: `https://www.youtube.com/embed/${trailerData.id.videoId}?autoplay=1&mute=1&start=15`,\n            frameBorder: \"0\",\n            allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n            allowFullScreen: true,\n            title: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.background_image,\n            alt: item.name,\n            className: \"card-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), isHovered && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"play-full-video-button\",\n            onClick: () => handleCardClick(item),\n            children: \"Play full video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, item.slug, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(News, \"YpI31geiKElYmxrl8Ia9BZiDYaI=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = News;\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","useRef","fetchAllNews","searchForGame","getGenres","fetchGameTrailers","useSearchParams","useNavigate","checkAccountType","jsxDEV","_jsxDEV","News","_s","searchParams","selectedGenre","get","newsData","setNewsData","loading","setLoading","error","setError","textRef","navigate","username","localStorage","getItem","genres","setGenres","hoveredGameSlug","setHoveredGameSlug","trailers","setTrailers","getNews","data","err","fetchGenreOptions","console","handleSearch","inputValue","current","value","trim","results","handleKeyPress","event","key","handleCardClick","game","id","handleMouseEnter","item","slug","undefined","_data$items","gameName","name","trailer","items","prev","handleMouseLeave","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","style","marginBottom","htmlFor","marginRight","onChange","e","target","map","genre","ref","type","placeholder","onKeyDown","onClick","isHovered","trailerData","hasTrailer","onMouseEnter","onMouseLeave","width","height","src","videoId","frameBorder","allow","allowFullScreen","title","background_image","alt","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/News.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { fetchAllNews, searchForGame, getGenres } from \"../service/NewsService\";\nimport { fetchGameTrailers } from \"../service/GameTrailersFromYoutubeService\";\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\nimport \"../assests/News.css\";\nimport { checkAccountType } from \"../utility/CheckAccountType\";\n\nfunction News() {\n  const [searchParams] = useSearchParams();\n  const selectedGenre = searchParams.get(\"genre\") || \"\";\n  const [newsData, setNewsData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const textRef = useRef(\"\");\n  const navigate = useNavigate();\n  const username = localStorage.getItem(\"username\");\n  const [genres, setGenres] = useState([]);\n  const [hoveredGameSlug, setHoveredGameSlug] = useState(null);\n\n  // This stores trailers keyed by slug: { [slug]: trailerData }\n  const [trailers, setTrailers] = useState({});\n\n  // -- Fetch news data and genres as before --\n  useEffect(() => {\n    async function getNews() {\n      try {\n        setLoading(true);\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getNews();\n  }, [selectedGenre]);\n\n  useEffect(() => {\n    async function fetchGenreOptions() {\n      try {\n        const data = await getGenres();\n        setGenres(data);\n      } catch (err) {\n        console.error(\"Error fetching genres:\", err);\n      }\n    }\n    fetchGenreOptions();\n  }, []);\n\n  // -- Searching logic as before --\n  const handleSearch = async () => {\n    const inputValue = textRef.current.value.trim();\n    try {\n      if (!inputValue) {\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } else {\n        const results = await searchForGame(inputValue);\n        setNewsData(results || []);\n      }\n    } catch (err) {\n      setError(err);\n    }\n    textRef.current.value = \"\";\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") handleSearch();\n  };\n\n  const handleCardClick = (game) => {\n    navigate(`/news/game/${game.id}`);\n  };\n\n  /**\n   * On hover, check if we already have a trailer for this game.\n   * If not, fetch it from the API.\n   */\n  const handleMouseEnter = async (item) => {\n    setHoveredGameSlug(item.slug);\n    // If we already have a trailer or we tried fetching before (null),\n    // don't fetch again\n    if (trailers[item.slug] !== undefined) return;\n\n    try {\n      const data = await fetchGameTrailers({ gameName: item.name });\n      const trailer = data.items?.[0] || null;\n      setTrailers((prev) => ({ ...prev, [item.slug]: trailer }));\n    } catch (err) {\n      console.error(\"Error fetching trailer for\", item.name, err);\n      setTrailers((prev) => ({ ...prev, [item.slug]: null }));\n    }\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredGameSlug(null);\n  };\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <div className=\"news-content\">\n      <h1>News and Trending Games For {username}</h1>\n      <div style={{ marginBottom: \"1rem\" }}>\n        <label htmlFor=\"genre-select\" style={{ marginRight: \"0.5rem\" }}>\n          Filter by Genre:\n        </label>\n        <select\n          id=\"genre-select\"\n          value={selectedGenre}\n          onChange={(e) =>\n            navigate(e.target.value ? `/news?genre=${e.target.value}` : \"/news\")\n          }\n        >\n          <option value=\"\">All Genres</option>\n          {genres.map((genre) => (\n            <option key={genre.slug} value={genre.slug}>\n              {genre.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"search-bar\">\n        <input\n          ref={textRef}\n          type=\"text\"\n          placeholder=\"Search for Game\"\n          onKeyDown={handleKeyPress}\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n\n      {newsData.map((item) => {\n        const isHovered = hoveredGameSlug === item.slug;\n        const trailerData = trailers[item.slug];\n        const hasTrailer = trailerData !== undefined && trailerData !== null;\n\n        return (\n          <div\n            className=\"game-card\"\n            key={item.slug}\n            onMouseEnter={() => handleMouseEnter(item)}\n            onMouseLeave={handleMouseLeave}\n          >\n            <div className=\"card-media\">\n              {isHovered && hasTrailer ? (\n                <iframe\n                  width=\"100%\"\n                  height=\"100%\"\n                  src={`https://www.youtube.com/embed/${trailerData.id.videoId}?autoplay=1&mute=1&start=15`}\n                  frameBorder=\"0\"\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowFullScreen\n                  title={item.name}\n                ></iframe>\n              ) : (\n                <img\n                  src={item.background_image}\n                  alt={item.name}\n                  className=\"card-image\"\n                />\n              )}\n\n              {isHovered && (\n                <button\n                  className=\"play-full-video-button\"\n                  onClick={() => handleCardClick(item)}\n                >\n                  Play full video\n                </button>\n              )}\n            </div>\n\n            <div className=\"card-body\">\n              {/* ...the rest of your info... */}\n              <h2>{item.name}</h2>\n              {/* etc. */}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default News;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}