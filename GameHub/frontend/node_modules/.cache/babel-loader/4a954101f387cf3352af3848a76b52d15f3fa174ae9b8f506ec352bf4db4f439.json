{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/LandinPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = 'http://localhost:8080';\nfunction LandingPage() {\n  _s();\n  const [accountInfo, setAccountInfo] = useState(null);\n  useEffect(() => {\n    const uhs = localStorage.getItem(\"uhs\");\n    const XSTS_token = localStorage.getItem(\"XSTS_token\");\n    if (uhs && XSTS_token) {\n      // User chose to sign in using Xbox - fetch profile\n      fetchProfile(uhs, XSTS_token);\n    } else {\n      toast.error(\"User signed in with a different platform or login error occurred.\");\n    }\n  }, []);\n\n  // Fetch profile data\n  const fetchProfile = async (uhs, XSTS_token) => {\n    try {\n      const response = await fetch(`${apiUrl}/api/xbox/profile`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `XBL3.0 x=${uhs};${XSTS_token}`\n        },\n        credentials: \"include\"\n      });\n      if (!response.ok) {\n        toast.error(\"Error occurred while fetching profile data.\");\n        return; // Stop further execution\n      }\n      const data = await response.json(); // Extract account data from JSON\n      setAccountInfo(data);\n    } catch (error) {\n      console.error(error);\n      toast.error(\"Error fetching account information.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fetching-profile\",\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test Profile:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), accountInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"GAMERTAG: \", accountInfo.gamertag]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"DISPLAY NAME: \", accountInfo.gameDisplayName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading profile information...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(LandingPage, \"gOUIjZ0MhPTPPLHGrSCOhbEOWgE=\");\n_c = LandingPage;\nexport default LandingPage;\nvar _c;\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"names":["React","useEffect","useState","toast","jsxDEV","_jsxDEV","apiUrl","LandingPage","_s","accountInfo","setAccountInfo","uhs","localStorage","getItem","XSTS_token","fetchProfile","error","response","fetch","method","headers","Authorization","credentials","ok","data","json","console","className","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","gamertag","gameDisplayName","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/LandinPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\n\nconst apiUrl = 'http://localhost:8080';\n\nfunction LandingPage() {\n    const [accountInfo, setAccountInfo] = useState(null);\n\n    useEffect(() => {\n        const uhs = localStorage.getItem(\"uhs\");\n        const XSTS_token = localStorage.getItem(\"XSTS_token\");\n\n        if (uhs && XSTS_token) {\n            // User chose to sign in using Xbox - fetch profile\n            fetchProfile(uhs, XSTS_token);\n        } else {\n            toast.error(\"User signed in with a different platform or login error occurred.\");\n        }\n    }, []);\n\n    // Fetch profile data\n    const fetchProfile = async (uhs, XSTS_token) => {\n        try {\n            const response = await fetch(`${apiUrl}/api/xbox/profile`, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `XBL3.0 x=${uhs};${XSTS_token}`,\n                },\n                credentials: \"include\",\n            });\n\n            if (!response.ok) {\n                toast.error(\"Error occurred while fetching profile data.\");\n                return; // Stop further execution\n            }\n\n            const data = await response.json(); // Extract account data from JSON\n            setAccountInfo(data);\n        } catch (error) {\n            console.error(error);\n            toast.error(\"Error fetching account information.\");\n        }\n    };\n\n    return (\n        <div className=\"fetching-profile\" style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n            {/* Render account info / profile */}\n            <h1>Test Profile:</h1>\n            {accountInfo ? (\n                <div>\n                    <h2>GAMERTAG: {accountInfo.gamertag}</h2>\n                    <h2>DISPLAY NAME: {accountInfo.gameDisplayName}</h2>\n                </div>\n            ) : (\n                <p>Loading profile information...</p>\n            )}\n        </div>\n    );\n}\n\nexport default LandingPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,MAAM,GAAG,uBAAuB;AAEtC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACZ,MAAMU,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;IACvC,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAErD,IAAIF,GAAG,IAAIG,UAAU,EAAE;MACnB;MACAC,YAAY,CAACJ,GAAG,EAAEG,UAAU,CAAC;IACjC,CAAC,MAAM;MACHX,KAAK,CAACa,KAAK,CAAC,mEAAmE,CAAC;IACpF;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMD,YAAY,GAAG,MAAAA,CAAOJ,GAAG,EAAEG,UAAU,KAAK;IAC5C,IAAI;MACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGZ,MAAM,mBAAmB,EAAE;QACvDa,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,YAAYV,GAAG,IAAIG,UAAU;QAChD,CAAC;QACDQ,WAAW,EAAE;MACjB,CAAC,CAAC;MAEF,IAAI,CAACL,QAAQ,CAACM,EAAE,EAAE;QACdpB,KAAK,CAACa,KAAK,CAAC,6CAA6C,CAAC;QAC1D,OAAO,CAAC;MACZ;MAEA,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC;MACpCf,cAAc,CAACc,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOR,KAAK,EAAE;MACZU,OAAO,CAACV,KAAK,CAACA,KAAK,CAAC;MACpBb,KAAK,CAACa,KAAK,CAAC,qCAAqC,CAAC;IACtD;EACJ,CAAC;EAED,oBACIX,OAAA;IAAKsB,SAAS,EAAC,kBAAkB;IAACC,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAEhF1B,OAAA;MAAA0B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrB1B,WAAW,gBACRJ,OAAA;MAAA0B,QAAA,gBACI1B,OAAA;QAAA0B,QAAA,GAAI,YAAU,EAACtB,WAAW,CAAC2B,QAAQ;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzC9B,OAAA;QAAA0B,QAAA,GAAI,gBAAc,EAACtB,WAAW,CAAC4B,eAAe;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,gBAEN9B,OAAA;MAAA0B,QAAA,EAAG;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACvC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAC3B,EAAA,CAtDQD,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAwDpB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}