{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [authUrl, setAuthUrl] = useState(\"\");\n  const [accessToken, setAccessToken] = useState(\"\");\n\n  // Fetch the Xbox login URL from the backend\n  const fetchLoginUrl = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/auth/login\");\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n      const url = await response.text(); // The backend sends the Xbox login URL\n      setAuthUrl(url);\n      window.location.href = url; // Redirect to the Xbox login URL\n    } catch (error) {\n      console.error(\"Error fetching login URL:\", error);\n    }\n  };\n\n  // Handle the callback from Xbox\n  const handleCallback = async () => {\n    const params = new URLSearchParams(window.location.search);\n    const code = params.get(\"code\"); // Get the 'code' parameter from the URL\n\n    if (code) {\n      try {\n        const response = await fetch(`http://localhost:8080/auth/callback?code=${code}`);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.statusText}`);\n        }\n        const data = await response.json();\n        setAccessToken(data.access_token); // Display the access token\n      } catch (error) {\n        console.error(\"Error sending token to server:\", error);\n      }\n    }\n  };\n  React.useEffect(() => {\n    handleCallback();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"GamerHub Xbox Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), !accessToken ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchLoginUrl,\n      style: {\n        padding: \"10px 20px\",\n        fontSize: \"16px\"\n      },\n      children: \"Login with Xbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Access Token:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: accessToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JjA4LzWVGKBjQG6nXvQNoBbNMsI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","authUrl","setAuthUrl","accessToken","setAccessToken","fetchLoginUrl","response","fetch","ok","Error","statusText","url","text","window","location","href","error","console","handleCallback","params","URLSearchParams","search","code","get","data","json","access_token","useEffect","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","padding","fontSize","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const [authUrl, setAuthUrl] = useState(\"\");\n  const [accessToken, setAccessToken] = useState(\"\");\n\n  // Fetch the Xbox login URL from the backend\n  const fetchLoginUrl = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/auth/login\");\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n      const url = await response.text(); // The backend sends the Xbox login URL\n      setAuthUrl(url);\n      window.location.href = url; // Redirect to the Xbox login URL\n    } catch (error) {\n      console.error(\"Error fetching login URL:\", error);\n    }\n  };\n\n  // Handle the callback from Xbox\n  const handleCallback = async () => {\n    const params = new URLSearchParams(window.location.search);\n    const code = params.get(\"code\"); // Get the 'code' parameter from the URL\n\n    if (code) {\n      try {\n        const response = await fetch(`http://localhost:8080/auth/callback?code=${code}`);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.statusText}`);\n        }\n        const data = await response.json();\n        setAccessToken(data.access_token); // Display the access token\n      } catch (error) {\n        console.error(\"Error sending token to server:\", error);\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    handleCallback();\n  }, []);\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n      <h1>GamerHub Xbox Login</h1>\n      {!accessToken ? (\n        <button onClick={fetchLoginUrl} style={{ padding: \"10px 20px\", fontSize: \"16px\" }}>\n          Login with Xbox\n        </button>\n      ) : (\n        <div>\n          <h2>Access Token:</h2>\n          <p>{accessToken}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}