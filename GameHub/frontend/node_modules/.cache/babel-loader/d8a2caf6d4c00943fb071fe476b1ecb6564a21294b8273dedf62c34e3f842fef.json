{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/LoginWithMicrosoft.js\";\nimport React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = 'http://localhost:8080';\nfunction LoginWithMicrosoft() {\n  // get code after logging into microsoft xbox live - \n  const urlParams = new URLSearchParams(window.location.search);\n  const code = window.location.search(\"code\");\n  // handle login with microsoft - \n  const login = async () => {\n    const response = await fetch(`${apiUrl}/api/auth/login`, {\n      method: \"GET\",\n      credentials: \"include\" // Include session cookies\n    });\n    // check if response failed- \n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    const data = await response.json();\n    if (data.redirectUrl) {\n      window.location.href = data.redirectUrl;\n    } else {\n      toast.error(\"Url not found\");\n    }\n    // once we have logged in - call the callback api to exchange code with access token - \n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"microsoft-login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login microsoft\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: login,\n      children: \" login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_c = LoginWithMicrosoft;\nexport default LoginWithMicrosoft;\nvar _c;\n$RefreshReg$(_c, \"LoginWithMicrosoft\");","map":{"version":3,"names":["React","useState","toast","jsxDEV","_jsxDEV","apiUrl","LoginWithMicrosoft","urlParams","URLSearchParams","window","location","search","code","login","response","fetch","method","credentials","ok","Error","status","data","json","redirectUrl","href","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/LoginWithMicrosoft.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\n\nconst apiUrl = 'http://localhost:8080';\nfunction LoginWithMicrosoft(){\n    // get code after logging into microsoft xbox live - \n    const urlParams = new URLSearchParams(window.location.search);\n    const code = window.location.search(\"code\");\n    // handle login with microsoft - \n    const login = async () => {\n        const response = await fetch(`${apiUrl}/api/auth/login`, {\n            method: \"GET\",\n            credentials: \"include\", // Include session cookies\n        });\n        // check if response failed- \n        if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        if(data.redirectUrl){\n            window.location.href = data.redirectUrl;\n        }else{\n            toast.error(\"Url not found\");\n        }\n        // once we have logged in - call the callback api to exchange code with access token - \n\n    };\n    \n\n    return(\n        <div className=\"microsoft-login\">\n        <h1>Login microsoft</h1>\n        <button onClick={login}> login</button>\n        </div>\n    );\n}\n\n\nexport default LoginWithMicrosoft;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,MAAM,GAAG,uBAAuB;AACtC,SAASC,kBAAkBA,CAAA,EAAE;EACzB;EACA,MAAMC,SAAS,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;EAC7D,MAAMC,IAAI,GAAGH,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,MAAM,CAAC;EAC3C;EACA,MAAME,KAAK,GAAG,MAAAA,CAAA,KAAY;IACtB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,MAAM,iBAAiB,EAAE;MACrDW,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE,SAAS,CAAE;IAC5B,CAAC,CAAC;IACF;IACA,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBL,QAAQ,CAACM,MAAM,EAAE,CAAC;IAC7D;IACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,IAAGD,IAAI,CAACE,WAAW,EAAC;MAChBd,MAAM,CAACC,QAAQ,CAACc,IAAI,GAAGH,IAAI,CAACE,WAAW;IAC3C,CAAC,MAAI;MACDrB,KAAK,CAACuB,KAAK,CAAC,eAAe,CAAC;IAChC;IACA;EAEJ,CAAC;EAGD,oBACIrB,OAAA;IAAKsB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAChCvB,OAAA;MAAAuB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB3B,OAAA;MAAQ4B,OAAO,EAAEnB,KAAM;MAAAc,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEd;AAACE,EAAA,GA/BQ3B,kBAAkB;AAkC3B,eAAeA,kBAAkB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}