{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/component/GameDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchGameDetails } from '../service/NewsService';\nimport { AddNewsGamesToGameList, AddToWishList, SaveToCollection } from '../NewsHelper/AddNewsGamesToGameList';\nimport { fetchGameTrailers } from '../service/GameTrailersFromYoutubeService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameDetail() {\n  _s();\n  var _game$platforms, _game$genres;\n  const {\n    id\n  } = useParams();\n  const [game, setGame] = useState(null);\n  const [gameLoading, setGameLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [trailers, setTrailers] = useState([]);\n  const [trailerLoading, setTrailerLoading] = useState(true);\n\n  // Fetch trailers from YouTube using the game name (or slug)\n  const fetchTrailersForGame = async gameName => {\n    try {\n      const data = await fetchGameTrailers({\n        gameName\n      });\n      setTrailers(data);\n    } catch (error) {\n      console.error('Error fetching trailer:', error);\n    } finally {\n      setTrailerLoading(false);\n    }\n  };\n\n  // Fetch game details and then fetch the trailer based on the game name.\n  useEffect(() => {\n    async function fetchGame() {\n      try {\n        const data = await fetchGameDetails({\n          id\n        });\n        setGame(data);\n        // Use the game name (or slug) to fetch the trailer.\n        if (data && data.name) {\n          fetchTrailersForGame(data.name);\n        }\n      } catch (err) {\n        setError(err);\n      } finally {\n        setGameLoading(false);\n      }\n    }\n    fetchGame();\n  }, [id]);\n\n  // New effect to load YouTube Iframe API and auto-play video\n  useEffect(() => {\n    if (!trailerLoading && trailers.length > 0) {\n      const loadPlayer = () => {\n        new window.YT.Player('youtube-player', {\n          height: '315',\n          width: '560',\n          videoId: trailers[0].id.videoId,\n          playerVars: {\n            autoplay: 1,\n            mute: 0\n          },\n          events: {\n            'onReady': event => event.target.playVideo()\n          }\n        });\n      };\n      if (!window.YT) {\n        const tag = document.createElement('script');\n        tag.src = 'https://www.youtube.com/iframe_api';\n        const firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n        window.onYouTubeIframeAPIReady = loadPlayer;\n      } else {\n        loadPlayer();\n      }\n    }\n  }, [trailerLoading, trailers]);\n  if (gameLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading game details...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: game.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"my-games-button\",\n        onClick: () => AddNewsGamesToGameList({\n          id: game.id\n        }),\n        children: [\"Add to My Games\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"plus-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"wishlist-button\",\n        onClick: () => AddToWishList(game),\n        children: [\"Add to Wishlist\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gift-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"collection-button\",\n        onClick: () => SaveToCollection(game),\n        children: [\"Add to Collection\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"folder-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), game.ratings && game.ratings.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: game.ratings[0].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Players added to their library: \", game.ratings[0].count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Platforms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: (_game$platforms = game.platforms) === null || _game$platforms === void 0 ? void 0 : _game$platforms.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: p.platform.name\n        }, p.platform.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: (_game$genres = game.genres) === null || _game$genres === void 0 ? void 0 : _game$genres.map(g => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: g.name\n        }, g.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trailer-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Trailer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), trailerLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading trailer...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this) : trailers.length > 0 ?\n      /*#__PURE__*/\n      // Replaced iframe with a div for the YouTube player\n      _jsxDEV(\"div\", {\n        id: \"youtube-player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No trailer available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(GameDetail, \"aD1F1v4ttHZjbKh/ITSBHnhY+Uc=\", false, function () {\n  return [useParams];\n});\n_c = GameDetail;\nexport default GameDetail;\nvar _c;\n$RefreshReg$(_c, \"GameDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","fetchGameDetails","AddNewsGamesToGameList","AddToWishList","SaveToCollection","fetchGameTrailers","jsxDEV","_jsxDEV","GameDetail","_s","_game$platforms","_game$genres","id","game","setGame","gameLoading","setGameLoading","error","setError","trailers","setTrailers","trailerLoading","setTrailerLoading","fetchTrailersForGame","gameName","data","console","fetchGame","name","err","length","loadPlayer","window","YT","Player","height","width","videoId","playerVars","autoplay","mute","events","event","target","playVideo","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","onClick","ratings","title","count","platforms","map","p","platform","genres","g","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/component/GameDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchGameDetails } from '../service/NewsService';\nimport { AddNewsGamesToGameList, AddToWishList, SaveToCollection } from '../NewsHelper/AddNewsGamesToGameList';\nimport { fetchGameTrailers } from '../service/GameTrailersFromYoutubeService';\n\nfunction GameDetail() {\n  const { id } = useParams();\n  const [game, setGame] = useState(null);\n  const [gameLoading, setGameLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  const [trailers, setTrailers] = useState([]);\n  const [trailerLoading, setTrailerLoading] = useState(true);\n\n  // Fetch trailers from YouTube using the game name (or slug)\n  const fetchTrailersForGame = async (gameName) => {\n    try {\n      const data = await fetchGameTrailers({ gameName });\n      setTrailers(data);\n    } catch (error) {\n      console.error('Error fetching trailer:', error);\n    } finally {\n      setTrailerLoading(false);\n    }\n  };\n\n  // Fetch game details and then fetch the trailer based on the game name.\n  useEffect(() => {\n    async function fetchGame() {\n      try {\n        const data = await fetchGameDetails({ id });\n        setGame(data);\n        // Use the game name (or slug) to fetch the trailer.\n        if (data && data.name) {\n          fetchTrailersForGame(data.name);\n        }\n      } catch (err) {\n        setError(err);\n      } finally {\n        setGameLoading(false);\n      }\n    }\n    fetchGame();\n  }, [id]);\n\n  // New effect to load YouTube Iframe API and auto-play video\n  useEffect(() => {\n    if (!trailerLoading && trailers.length > 0) {\n      const loadPlayer = () => {\n        new window.YT.Player('youtube-player', {\n          height: '315',\n          width: '560',\n          videoId: trailers[0].id.videoId,\n          playerVars: {\n            autoplay: 1,\n            mute: 0\n          },\n          events: {\n            'onReady': (event) => event.target.playVideo()\n          }\n        });\n      };\n\n      if (!window.YT) {\n        const tag = document.createElement('script');\n        tag.src = 'https://www.youtube.com/iframe_api';\n        const firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n        window.onYouTubeIframeAPIReady = loadPlayer;\n      } else {\n        loadPlayer();\n      }\n    }\n  }, [trailerLoading, trailers]);\n\n  if (gameLoading) return <p>Loading game details...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <div className=\"game-detail\">\n      <h1>{game.name}</h1>\n      <div className=\"btn-container\">\n        <button \n          className=\"my-games-button\"\n          onClick={() => AddNewsGamesToGameList({ id: game.id })}\n        >\n          Add to My Games\n          <span className=\"plus-icon\" />\n        </button>\n        <button \n          className=\"wishlist-button\"\n          onClick={() => AddToWishList(game)}\n        >   \n          Add to Wishlist\n          <span className=\"gift-icon\" />\n        </button>\n        <button \n          className=\"collection-button\"\n          onClick={() => SaveToCollection(game)}\n        >\n          Add to Collection\n          <span className=\"folder-icon\" />\n        </button>\n      </div>\n\n      {game.ratings && game.ratings.length > 0 && (\n        <div>\n          <p>{game.ratings[0].title}</p>\n          <p>Players added to their library: {game.ratings[0].count}</p>\n        </div>\n      )}\n\n      <div>\n        <h3>Platforms</h3>\n        <ul>\n          {game.platforms?.map((p) => (\n            <li key={p.platform.id}>{p.platform.name}</li>\n          ))}\n        </ul>\n      </div>\n\n      <div>\n        <h3>Genres</h3>\n        <ul>\n          {game.genres?.map((g) => (\n            <li key={g.id}>{g.name}</li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"trailer-section\">\n        <h3>Trailer</h3>\n        {trailerLoading ? (\n          <p>Loading trailer...</p>\n        ) : trailers.length > 0 ? (\n          // Replaced iframe with a div for the YouTube player\n          <div id=\"youtube-player\"></div>\n        ) : (\n          <p>No trailer available.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default GameDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}