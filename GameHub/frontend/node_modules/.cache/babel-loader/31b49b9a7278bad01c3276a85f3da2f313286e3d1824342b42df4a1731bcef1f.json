{"ast":null,"code":"const apiUrl = 'http://localhost:8080';\nconst jwtToken = localStorage.getItem(\"jwtToken\");\n// fetch news- \n\n// recent news for the homepage - \n// add another api to filter news  - \n// recent news for specific genres, games, platforms.\nexport const fetchRecentNews = async () => {\n  try {\n    const response = await fetch(`${apiUrl}/api/news/recent-news`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to fetch recent news. Status: ${response.status}`);\n    }\n    const data = await response.json();\n    const flattened = data.flatMap(item => item.results || []);\n    return flattened;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const fetchAllNews = async (platform, genre) => {\n  try {\n    // include filter options - \n    let url = `${apiUrl}/api/news/all-news`;\n    const params = new URLSearchParams();\n    if (platform) params.append(\"platform\", platform);\n    if (genre) params.append(\"genre\", genre);\n    if (params.toString()) {\n      url += \"?\" + params.toString();\n    }\n    const response = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to fetch all news. Status: ${response.status}`);\n    }\n    const data = await response.json();\n    const flattened = data.flatMap(item => item.results || []);\n    return flattened;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// get all genres - \n\nexport const getGenres = async () => {\n  try {\n    const response = await fetch(`${apiUrl}/api/news/genres`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to fetch genres. Status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport const searchForGame = async searchGame => {\n  try {\n    const response = await fetch(`${apiUrl}/api/news/search-game?gameName=${searchGame}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to fetch search results. Status: ${response.status}`);\n    }\n    const data = await response.json();\n    const flattened = data.flatMap(item => item.results || []);\n    return flattened;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// get game detail by id \nexport const getGameDetailById = async () => {\n  try {\n    const response = await fetch(`${apiUrl}/api/news/get-game-by-id`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': 'Bearer ' + jwtToken\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to fetch game detail. Status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\n// export const fetchGameDetails = async ({id}) => {\n//     const response = await fetch(`https://api.rawg.io/api/games/${id}?key=YOUR_API_KEY`);\n//     if (!response.ok) throw new Error('Failed to fetch game details');\n//     return response.json();\n// };","map":{"version":3,"names":["apiUrl","jwtToken","localStorage","getItem","fetchRecentNews","response","fetch","method","headers","ok","Error","status","data","json","flattened","flatMap","item","results","error","console","fetchAllNews","platform","genre","url","params","URLSearchParams","append","toString","getGenres","searchForGame","searchGame","getGameDetailById"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/service/NewsService.js"],"sourcesContent":["const apiUrl = 'http://localhost:8080';\n\nconst jwtToken = localStorage.getItem(\"jwtToken\");\n// fetch news- \n\n// recent news for the homepage - \n// add another api to filter news  - \n// recent news for specific genres, games, platforms.\nexport const fetchRecentNews = async () =>{\n    try{\n        const response = await fetch(`${apiUrl}/api/news/recent-news`, {\n            method: \"GET\",\n            headers : {\n                \"Content-Type\": \"application/json\",\n            },\n        });\n        if(!response.ok){\n            throw new Error(`Failed to fetch recent news. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        const flattened = data.flatMap(item => item.results || []);\n        return flattened;   \n    }catch(error){\n        console.error(error);\n        throw error;\n    }\n};\n\nexport const fetchAllNews = async (platform , genre) => {\n    try{\n        // include filter options - \n        let url = `${apiUrl}/api/news/all-news`;\n        const params = new URLSearchParams();\n        if (platform) params.append(\"platform\", platform);\n        if (genre) params.append(\"genre\", genre);\n        if (params.toString()) {\n          url += \"?\" + params.toString();\n        }\n        const response = await fetch(url, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        });\n        if(!response.ok){\n            throw new Error(`Failed to fetch all news. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        const flattened = data.flatMap(item => item.results || []);\n        return flattened;\n    }catch(error){\n        console.error(error);\n        throw error;\n    }\n};\n\n// get all genres - \n\nexport const getGenres = async () => {\n    try{\n        const response = await fetch(`${apiUrl}/api/news/genres`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        });\n        if(!response.ok){\n            throw new Error(`Failed to fetch genres. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        return data;\n    }catch(error){\n        console.error(error);\n        throw error;\n    }\n};\n\nexport const searchForGame = async (searchGame) =>{\n    try{\n        const response = await fetch(`${apiUrl}/api/news/search-game?gameName=${searchGame}`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        });\n        if(!response.ok){\n            throw new Error(`Failed to fetch search results. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        const flattened = data.flatMap(item => item.results || []);\n        return flattened;\n    }catch(error){\n        console.error(error);\n        throw error;\n    }\n};\n\n\n// get game detail by id \nexport const getGameDetailById = async () =>{\n    try{\n        const response = await fetch(`${apiUrl}/api/news/get-game-by-id`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Authorization': 'Bearer ' + jwtToken,\n            },\n        });\n        if(!response.ok){\n            throw new Error(`Failed to fetch game detail. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        return data;\n    }catch(error){\n        console.error(error);\n        throw error;\n    }\n};\n\n\n// export const fetchGameDetails = async ({id}) => {\n//     const response = await fetch(`https://api.rawg.io/api/games/${id}?key=YOUR_API_KEY`);\n//     if (!response.ok) throw new Error('Failed to fetch game details');\n//     return response.json();\n// };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}