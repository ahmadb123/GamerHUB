{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/component/GameDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchGameDetails } from '../service/NewsService';\nimport { AddNewsGamesToGameList, AddToWishList, SaveToCollection } from '../NewsHelper/AddNewsGamesToGameList';\nimport { fetchGameTrailers } from '../service/GameTrailersFromYoutubeService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameDetail() {\n  _s();\n  var _game$platforms, _game$genres;\n  const {\n    id\n  } = useParams();\n  const [game, setGame] = useState(null);\n  const [gameLoading, setGameLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [trailers, setTrailers] = useState([]);\n  const [trailerLoading, setTrailerLoading] = useState(true);\n\n  // Fetch trailers from YouTube using the game name (or slug)\n  const fetchTrailersForGame = async gameName => {\n    try {\n      const data = await fetchGameTrailers({\n        gameName\n      });\n      setTrailers(data);\n    } catch (error) {\n      console.error('Error fetching trailer:', error);\n    } finally {\n      setTrailerLoading(false);\n    }\n  };\n\n  // Fetch game details and then fetch the trailer based on the game name.\n  useEffect(() => {\n    async function fetchGame() {\n      try {\n        const data = await fetchGameDetails({\n          id\n        });\n        setGame(data);\n        // Use the game name (or slug) to fetch the trailer.\n        if (data && data.name) {\n          fetchTrailersForGame(data.name);\n        }\n      } catch (err) {\n        setError(err);\n      } finally {\n        setGameLoading(false);\n      }\n    }\n    fetchGame();\n  }, [id]);\n  if (gameLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading game details...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: game.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"my-games-button\",\n        onClick: () => AddNewsGamesToGameList({\n          id: game.id\n        }),\n        children: [\"Add to My Games\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"plus-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"wishlist-button\",\n        onClick: () => AddToWishList(game),\n        children: [\"Add to Wishlist\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gift-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"collection-button\",\n        onClick: () => SaveToCollection(game),\n        children: [\"Add to Collection\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"folder-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), game.ratings && game.ratings.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: game.ratings[0].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Players added to their library: \", game.ratings[0].count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Platforms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: (_game$platforms = game.platforms) === null || _game$platforms === void 0 ? void 0 : _game$platforms.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: p.platform.name\n        }, p.platform.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: (_game$genres = game.genres) === null || _game$genres === void 0 ? void 0 : _game$genres.map(g => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: g.name\n        }, g.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trailer-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Trailer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), trailerLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading trailer...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this) : trailers.length > 0 ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: `https://www.youtube.com/embed/${trailers[0].id.videoId}?autoplay=1&mute=1`,\n        title: trailers[0].snippet.title,\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No trailer available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(GameDetail, \"TXVpkOPO2g6mjRWN6F/w66RSddw=\", false, function () {\n  return [useParams];\n});\n_c = GameDetail;\nexport default GameDetail;\nvar _c;\n$RefreshReg$(_c, \"GameDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","fetchGameDetails","AddNewsGamesToGameList","AddToWishList","SaveToCollection","fetchGameTrailers","jsxDEV","_jsxDEV","GameDetail","_s","_game$platforms","_game$genres","id","game","setGame","gameLoading","setGameLoading","error","setError","trailers","setTrailers","trailerLoading","setTrailerLoading","fetchTrailersForGame","gameName","data","console","fetchGame","name","err","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","onClick","ratings","length","title","count","platforms","map","p","platform","genres","g","width","height","src","videoId","snippet","frameBorder","allow","allowFullScreen","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/component/GameDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchGameDetails } from '../service/NewsService';\nimport { AddNewsGamesToGameList, AddToWishList, SaveToCollection } from '../NewsHelper/AddNewsGamesToGameList';\nimport { fetchGameTrailers } from '../service/GameTrailersFromYoutubeService';\n\nfunction GameDetail() {\n  const { id } = useParams();\n  const [game, setGame] = useState(null);\n  const [gameLoading, setGameLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  const [trailers, setTrailers] = useState([]);\n  const [trailerLoading, setTrailerLoading] = useState(true);\n\n  // Fetch trailers from YouTube using the game name (or slug)\n  const fetchTrailersForGame = async (gameName) => {\n    try {\n      const data = await fetchGameTrailers({ gameName });\n      setTrailers(data);\n    } catch (error) {\n      console.error('Error fetching trailer:', error);\n    } finally {\n      setTrailerLoading(false);\n    }\n  };\n\n  // Fetch game details and then fetch the trailer based on the game name.\n  useEffect(() => {\n    async function fetchGame() {\n      try {\n        const data = await fetchGameDetails({ id });\n        setGame(data);\n        // Use the game name (or slug) to fetch the trailer.\n        if (data && data.name) {\n          fetchTrailersForGame(data.name);\n        }\n      } catch (err) {\n        setError(err);\n      } finally {\n        setGameLoading(false);\n      }\n    }\n    fetchGame();\n  }, [id]);\n\n  if (gameLoading) return <p>Loading game details...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <div className=\"game-detail\">\n      <h1>{game.name}</h1>\n      <div className=\"btn-container\">\n        <button \n          className=\"my-games-button\"\n          onClick={() => AddNewsGamesToGameList({ id: game.id })}\n        >\n          Add to My Games\n          <span className=\"plus-icon\" />\n        </button>\n        <button \n          className=\"wishlist-button\"\n          onClick={() => AddToWishList(game)}\n        >   \n          Add to Wishlist\n          <span className=\"gift-icon\" />\n        </button>\n        <button \n          className=\"collection-button\"\n          onClick={() => SaveToCollection(game)}\n        >\n          Add to Collection\n          <span className=\"folder-icon\" />\n        </button>\n      </div>\n\n      {game.ratings && game.ratings.length > 0 && (\n        <div>\n          <p>{game.ratings[0].title}</p>\n          <p>Players added to their library: {game.ratings[0].count}</p>\n        </div>\n      )}\n\n      <div>\n        <h3>Platforms</h3>\n        <ul>\n          {game.platforms?.map((p) => (\n            <li key={p.platform.id}>{p.platform.name}</li>\n          ))}\n        </ul>\n      </div>\n\n      <div>\n        <h3>Genres</h3>\n        <ul>\n          {game.genres?.map((g) => (\n            <li key={g.id}>{g.name}</li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"trailer-section\">\n        <h3>Trailer</h3>\n        {trailerLoading ? (\n          <p>Loading trailer...</p>\n        ) : trailers.length > 0 ? (\n          <iframe\n            width=\"560\"\n            height=\"315\"\n            src={`https://www.youtube.com/embed/${trailers[0].id.videoId}?autoplay=1&mute=1`}\n            title={trailers[0].snippet.title}\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          ></iframe>\n        ) : (\n          <p>No trailer available.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default GameDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}