{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/LandingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { View, Text, Button, StyleSheet } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Linking } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { handleLogin, exchangeCodeForTokens } from \"../service/XboxAuthService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LandingPage = () => {\n  _s();\n  const navigation = useNavigation();\n  useEffect(() => {\n    const handleXboxLogin = async () => {\n      await exchangeCodeForTokens();\n      // Set platform in AsyncStorage\n      await AsyncStorage.setItem(\"platform\", \"xbox\");\n      // Navigate to the main screen (adjust the route name as needed)\n      navigation.reset({\n        routes: [{\n          name: \"HomePage\"\n        }]\n      });\n    };\n    const checkInitialURL = async () => {\n      const url = await Linking.getInitialURL();\n      if (url) {\n        // Parse the URL to check for the code parameter\n        const parsedUrl = new URL(url);\n        const code = parsedUrl.searchParams.get(\"code\");\n        const state = parsedUrl.searchParams.get(\"state\");\n        if (code && state) {\n          handleXboxLogin();\n        }\n      }\n    };\n    checkInitialURL();\n  }, [navigation]);\n  const handlePlatformLogin = async platform => {\n    if (platform === \"xbox\") {\n      await handleLogin();\n    }\n    // Add similar logic for PSN and Steam if needed\n  };\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Welcome to GamerHub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      style: styles.subtitle,\n      children: \"Select a platform to log in:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(View, {\n      style: styles.buttonContainer,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        title: \"Xbox Login\",\n        onPress: () => handlePlatformLogin(\"xbox\"),\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"PSN Login\",\n        onPress: () => handlePlatformLogin(\"psn\"),\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Steam Login\",\n        onPress: () => handlePlatformLogin(\"steam\"),\n        color: \"gray\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toast, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(LandingPage, \"j3TK6o8XeCQth8rVUdfs21gbd70=\", false, function () {\n  return [useNavigation];\n});\n_c = LandingPage;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: \"bold\",\n    marginBottom: 20\n  },\n  subtitle: {\n    fontSize: 18,\n    marginBottom: 20\n  },\n  buttonContainer: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  }\n});\nexport default LandingPage;\nvar _c;\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"names":["React","useEffect","View","Text","Button","StyleSheet","useNavigation","Linking","AsyncStorage","handleLogin","exchangeCodeForTokens","jsxDEV","_jsxDEV","LandingPage","_s","navigation","handleXboxLogin","setItem","reset","routes","name","checkInitialURL","url","getInitialURL","parsedUrl","URL","code","searchParams","get","state","handlePlatformLogin","platform","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","subtitle","buttonContainer","onPress","color","Toast","_c","create","flex","justifyContent","alignItems","padding","fontSize","fontWeight","marginBottom","width","flexDirection","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/LandingPage.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { View, Text, Button, StyleSheet } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Linking } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { handleLogin, exchangeCodeForTokens } from \"../service/XboxAuthService\";\n\nconst LandingPage = () => {\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    const handleXboxLogin = async () => {\n      await exchangeCodeForTokens();\n      // Set platform in AsyncStorage\n      await AsyncStorage.setItem(\"platform\", \"xbox\");\n      // Navigate to the main screen (adjust the route name as needed)\n      navigation.reset({ routes: [{ name: \"HomePage\" }] });\n    };\n\n    const checkInitialURL = async () => {\n      const url = await Linking.getInitialURL();\n      if (url) {\n        // Parse the URL to check for the code parameter\n        const parsedUrl = new URL(url);\n        const code = parsedUrl.searchParams.get(\"code\");\n        const state = parsedUrl.searchParams.get(\"state\");\n        if (code && state) {\n          handleXboxLogin();\n        }\n      }\n    };\n\n    checkInitialURL();\n  }, [navigation]);\n\n  const handlePlatformLogin = async (platform) => {\n    if (platform === \"xbox\") {\n      await handleLogin();\n    }\n    // Add similar logic for PSN and Steam if needed\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Welcome to GamerHub</Text>\n      <Text style={styles.subtitle}>Select a platform to log in:</Text>\n      <View style={styles.buttonContainer}>\n        <Button\n          title=\"Xbox Login\"\n          onPress={() => handlePlatformLogin(\"xbox\")}\n          color=\"green\"\n        />\n        <Button\n          title=\"PSN Login\"\n          onPress={() => handlePlatformLogin(\"psn\")}\n          color=\"blue\"\n        />\n        <Button\n          title=\"Steam Login\"\n          onPress={() => handlePlatformLogin(\"steam\")}\n          color=\"gray\"\n        />\n      </View>\n      <Toast />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20,\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n  },\n  subtitle: {\n    fontSize: 18,\n    marginBottom: 20,\n  },\n  buttonContainer: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n  },\n});\n\nexport default LandingPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}