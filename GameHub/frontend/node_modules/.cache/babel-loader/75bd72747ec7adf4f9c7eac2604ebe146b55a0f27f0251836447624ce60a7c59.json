{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/News.js\",\n  _s = $RefreshSig$();\n// src/components/News.jsx\nimport React, { useEffect, useState } from 'react';\nimport { fetchAllNews } from \"../service/NewsService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction News() {\n  _s();\n  const [news, setNews] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Filter states\n  const [genres, setGenres] = useState([]);\n  const [platforms, setPlatforms] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const [selectedPlatform, setSelectedPlatform] = useState('');\n\n  // Load dynamic filter options on mount\n  useEffect(() => {\n    const fetchFilters = async () => {\n      try {\n        const fetchedGenres = await fetchGenres();\n        setGenres(fetchedGenres);\n        const fetchedPlatforms = await fetchPlatforms();\n        setPlatforms(fetchedPlatforms);\n      } catch (error) {\n        console.error(\"Error fetching filter options:\", error);\n      }\n    };\n    fetchFilters();\n  }, []);\n\n  // Fetch news on mount and whenever filter options change.\n  // When both selectedGenre and selectedPlatform are empty,\n  // this will fetch all news first.\n  useEffect(() => {\n    const fetchFilteredNews = async () => {\n      setLoading(true);\n      try {\n        const data = await fetchAllNews({\n          platform: selectedPlatform,\n          genre: selectedGenre\n        });\n        setNews(data);\n      } catch (error) {\n        console.error(\"Error fetching news:\", error);\n      }\n      setLoading(false);\n    };\n    fetchFilteredNews();\n  }, [selectedGenre, selectedPlatform]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"News Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Genre:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedGenre,\n          onChange: e => setSelectedGenre(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Genres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: genre.slug,\n            children: genre.name\n          }, genre.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Platform:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedPlatform,\n          onChange: e => setSelectedPlatform(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Platforms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), platforms.map(platform => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: platform.slug,\n            children: platform.name\n          }, platform.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Page is loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : news.length > 0 ? news.map((newsItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: newsItem.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), newsItem.background_image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: newsItem.background_image,\n        alt: newsItem.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Released: \", newsItem.released]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), newsItem.genres && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genres\",\n        children: newsItem.genres.map((g, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: g.name\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No news found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(News, \"AED5NAfGFPxafWPnBK6tG3v52d0=\");\n_c = News;\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","fetchAllNews","jsxDEV","_jsxDEV","News","_s","news","setNews","loading","setLoading","genres","setGenres","platforms","setPlatforms","selectedGenre","setSelectedGenre","selectedPlatform","setSelectedPlatform","fetchFilters","fetchedGenres","fetchGenres","fetchedPlatforms","fetchPlatforms","error","console","fetchFilteredNews","data","platform","genre","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","slug","name","id","length","newsItem","index","background_image","src","alt","released","g","idx","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/News.js"],"sourcesContent":["// src/components/News.jsx\nimport React, { useEffect, useState } from 'react';\nimport { fetchAllNews } from \"../service/NewsService\";\n\nfunction News() {\n  const [news, setNews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  \n  // Filter states\n  const [genres, setGenres] = useState([]);\n  const [platforms, setPlatforms] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const [selectedPlatform, setSelectedPlatform] = useState('');\n\n  // Load dynamic filter options on mount\n  useEffect(() => {\n    const fetchFilters = async () => {\n      try {\n        const fetchedGenres = await fetchGenres();\n        setGenres(fetchedGenres);\n        const fetchedPlatforms = await fetchPlatforms();\n        setPlatforms(fetchedPlatforms);\n      } catch (error) {\n        console.error(\"Error fetching filter options:\", error);\n      }\n    };\n    fetchFilters();\n  }, []);\n\n  // Fetch news on mount and whenever filter options change.\n  // When both selectedGenre and selectedPlatform are empty,\n  // this will fetch all news first.\n  useEffect(() => {\n    const fetchFilteredNews = async () => {\n      setLoading(true);\n      try {\n        const data = await fetchAllNews({\n          platform: selectedPlatform,\n          genre: selectedGenre,\n        });\n        setNews(data);\n      } catch (error) {\n        console.error(\"Error fetching news:\", error);\n      }\n      setLoading(false);\n    };\n\n    fetchFilteredNews();\n  }, [selectedGenre, selectedPlatform]);\n\n  return (\n    <div className=\"news\">\n      <h1>News Page</h1>\n      \n      <div className=\"filters\">\n        <label>\n          Genre:\n          <select\n            value={selectedGenre}\n            onChange={e => setSelectedGenre(e.target.value)}\n          >\n            <option value=\"\">All Genres</option>\n            {genres.map(genre => (\n              <option key={genre.id} value={genre.slug}>\n                {genre.name}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label>\n          Platform:\n          <select\n            value={selectedPlatform}\n            onChange={e => setSelectedPlatform(e.target.value)}\n          >\n            <option value=\"\">All Platforms</option>\n            {platforms.map(platform => (\n              <option key={platform.id} value={platform.slug}>\n                {platform.name}\n              </option>\n            ))}\n          </select>\n        </label>\n        {/* Additional filters (e.g., search game, dates) can be added here */}\n      </div>\n\n      {loading ? (\n        <p>Page is loading...</p>\n      ) : news.length > 0 ? (\n        news.map((newsItem, index) => (\n          <div key={index} className=\"news-item\">\n            <h2>{newsItem.name}</h2>\n            {newsItem.background_image && (\n              <img src={newsItem.background_image} alt={newsItem.name} />\n            )}\n            <p>Released: {newsItem.released}</p>\n            {newsItem.genres && (\n              <div className=\"genres\">\n                {newsItem.genres.map((g, idx) => (\n                  <span key={idx}>{g.name}</span>\n                ))}\n              </div>\n            )}\n          </div>\n        ))\n      ) : (\n        <p>No news found.</p>\n      )}\n    </div>\n  );\n}\n\nexport default News;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}