{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/News.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { fetchAllNews, searchForGame, getGenres } from \"../service/NewsService\";\nimport { fetchGameTrailers } from \"../service/GameTrailersFromYoutubeService\";\nimport { AddNewsGamesToGameList, AddToWishList, SaveToCollection } from \"../NewsHelper/AddNewsGamesToGameList\";\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\nimport \"../assests/News.css\";\nimport { checkAccountType } from \"../utility/CheckAccountType\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction News() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const selectedGenre = searchParams.get(\"genre\") || \"\";\n  const [newsData, setNewsData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const textRef = useRef(\"\");\n  const navigate = useNavigate();\n  const username = localStorage.getItem(\"username\");\n  const [genres, setGenres] = useState([]);\n  const [hoveredGameSlug, setHoveredGameSlug] = useState(null);\n\n  // trailers will be a map keyed by game slug.\n  // A value of undefined means “not fetched yet”\n  // A value of null means “no trailer available”\n  const [trailers, setTrailers] = useState({});\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") handleSearch();\n  };\n  const handleImageClick = game => {\n    navigate(`/news/game/${game.id}`);\n  };\n  const handleSearch = async () => {\n    const inputValue = textRef.current.value.trim();\n    try {\n      if (!inputValue) {\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } else {\n        const results = await searchForGame(inputValue);\n        setNewsData(results || []);\n      }\n    } catch (err) {\n      setError(err);\n    }\n    textRef.current.value = \"\";\n  };\n\n  // Fetch news data on mount or when genre filter changes.\n  useEffect(() => {\n    async function getNews() {\n      try {\n        setLoading(true);\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getNews();\n  }, [selectedGenre]);\n\n  // Fetch available genres\n  useEffect(() => {\n    async function fetchGenreOptions() {\n      try {\n        const data = await getGenres();\n        setGenres(data);\n      } catch (err) {\n        console.error(\"Error fetching genres:\", err);\n      }\n    }\n    fetchGenreOptions();\n  }, []);\n\n  // Pre-fetch trailers for all games in newsData for a smooth transition.\n  useEffect(() => {\n    if (newsData.length > 0) {\n      const fetchTrailersForAll = async () => {\n        // Prepare an array of promises for parallel API calls.\n        const trailerPromises = newsData.map(async item => {\n          try {\n            const data = await fetchGameTrailers({\n              gameName: item.name\n            });\n            // Return the first trailer if available.\n            const trailer = data.items && data.items.length > 0 ? data.items[0] : null;\n            return [item.slug, trailer];\n          } catch (err) {\n            console.error(\"Error fetching trailer for\", item.name, err);\n            return [item.slug, null];\n          }\n        });\n        const results = await Promise.all(trailerPromises);\n        const trailerMap = {};\n        results.forEach(([slug, trailer]) => {\n          trailerMap[slug] = trailer;\n        });\n        setTrailers(trailerMap);\n      };\n      fetchTrailersForAll();\n    }\n  }, [newsData]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"News and Trending Games For \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"genre-select\",\n        style: {\n          marginRight: \"0.5rem\"\n        },\n        children: \"Filter by Genre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"genre-select\",\n        value: selectedGenre,\n        onChange: e => navigate(e.target.value ? `/news?genre=${e.target.value}` : \"/news\"),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Genres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre.slug,\n          children: genre.name\n        }, genre.slug, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: textRef,\n        type: \"text\",\n        placeholder: \"Search for Game\",\n        onKeyDown: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), newsData.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        onMouseEnter: () => setHoveredGameSlug(item.slug),\n        onMouseLeave: () => setHoveredGameSlug(null),\n        onClick: () => handleImageClick(item),\n        children: hoveredGameSlug === item.slug ?\n        // Check if trailer has been fetched for this item.\n        trailers[item.slug] === undefined ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading trailer...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this) : trailers[item.slug] ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"300\",\n          height: \"200\",\n          src: `https://www.youtube.com/embed/${trailers[item.slug].id.videoId}?autoplay=1&mute=1&start=60`,\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true,\n          title: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.background_image,\n          alt: item.name,\n          style: {\n            width: \"300px\",\n            height: \"auto\",\n            cursor: \"pointer\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.background_image,\n          alt: item.name,\n          style: {\n            width: \"300px\",\n            height: \"auto\",\n            cursor: \"pointer\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: checkAccountType(item.platforms.map(p => p.platform.name))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), hoveredGameSlug === item.slug && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-mini-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Release: \", item.released]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"genre-for-game\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Genres:\", \" \", item.genres.map(genre => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [genre.name, \" \"]\n            }, genre.slug, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-rating\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Rating: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this), item.rating > 0 ? item.rating : item.averageRating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)]\n    }, item.slug, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_s(News, \"KqQce077dbcIa9ksS6+EOKQ9M9k=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = News;\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","useRef","fetchAllNews","searchForGame","getGenres","fetchGameTrailers","AddNewsGamesToGameList","AddToWishList","SaveToCollection","useSearchParams","useNavigate","checkAccountType","jsxDEV","_jsxDEV","Fragment","_Fragment","News","_s","searchParams","selectedGenre","get","newsData","setNewsData","loading","setLoading","error","setError","textRef","navigate","username","localStorage","getItem","genres","setGenres","hoveredGameSlug","setHoveredGameSlug","trailers","setTrailers","handleKeyPress","event","key","handleSearch","handleImageClick","game","id","inputValue","current","value","trim","data","results","err","getNews","fetchGenreOptions","console","length","fetchTrailersForAll","trailerPromises","map","item","gameName","name","trailer","items","slug","Promise","all","trailerMap","forEach","children","fileName","_jsxFileName","lineNumber","columnNumber","message","style","marginBottom","htmlFor","marginRight","onChange","e","target","genre","className","ref","type","placeholder","onKeyDown","onClick","onMouseEnter","onMouseLeave","undefined","width","height","src","videoId","frameBorder","allow","allowFullScreen","title","background_image","alt","cursor","platforms","p","platform","released","rating","averageRating","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/News.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { fetchAllNews, searchForGame, getGenres } from \"../service/NewsService\";\nimport { fetchGameTrailers } from \"../service/GameTrailersFromYoutubeService\";\nimport { AddNewsGamesToGameList, AddToWishList, SaveToCollection } from \"../NewsHelper/AddNewsGamesToGameList\";\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\nimport \"../assests/News.css\";\nimport { checkAccountType } from \"../utility/CheckAccountType\";\n\nfunction News() {\n  const [searchParams] = useSearchParams();\n  const selectedGenre = searchParams.get(\"genre\") || \"\";\n  const [newsData, setNewsData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const textRef = useRef(\"\");\n  const navigate = useNavigate();\n  const username = localStorage.getItem(\"username\");\n  const [genres, setGenres] = useState([]);\n  const [hoveredGameSlug, setHoveredGameSlug] = useState(null);\n\n  // trailers will be a map keyed by game slug.\n  // A value of undefined means “not fetched yet”\n  // A value of null means “no trailer available”\n  const [trailers, setTrailers] = useState({});\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") handleSearch();\n  };\n\n  const handleImageClick = (game) => {\n    navigate(`/news/game/${game.id}`);\n  };\n\n  const handleSearch = async () => {\n    const inputValue = textRef.current.value.trim();\n    try {\n      if (!inputValue) {\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } else {\n        const results = await searchForGame(inputValue);\n        setNewsData(results || []);\n      }\n    } catch (err) {\n      setError(err);\n    }\n    textRef.current.value = \"\";\n  };\n\n  // Fetch news data on mount or when genre filter changes.\n  useEffect(() => {\n    async function getNews() {\n      try {\n        setLoading(true);\n        const data = await fetchAllNews(null, selectedGenre || null);\n        setNewsData(data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getNews();\n  }, [selectedGenre]);\n\n  // Fetch available genres\n  useEffect(() => {\n    async function fetchGenreOptions() {\n      try {\n        const data = await getGenres();\n        setGenres(data);\n      } catch (err) {\n        console.error(\"Error fetching genres:\", err);\n      }\n    }\n    fetchGenreOptions();\n  }, []);\n\n  // Pre-fetch trailers for all games in newsData for a smooth transition.\n  useEffect(() => {\n    if (newsData.length > 0) {\n      const fetchTrailersForAll = async () => {\n        // Prepare an array of promises for parallel API calls.\n        const trailerPromises = newsData.map(async (item) => {\n          try {\n            const data = await fetchGameTrailers({ gameName: item.name });\n            // Return the first trailer if available.\n            const trailer =\n              data.items && data.items.length > 0 ? data.items[0] : null;\n            return [item.slug, trailer];\n          } catch (err) {\n            console.error(\"Error fetching trailer for\", item.name, err);\n            return [item.slug, null];\n          }\n        });\n        const results = await Promise.all(trailerPromises);\n        const trailerMap = {};\n        results.forEach(([slug, trailer]) => {\n          trailerMap[slug] = trailer;\n        });\n        setTrailers(trailerMap);\n      };\n      fetchTrailersForAll();\n    }\n  }, [newsData]);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <>\n      <h1>News and Trending Games For {username}</h1>\n      <div style={{ marginBottom: \"1rem\" }}>\n        <label htmlFor=\"genre-select\" style={{ marginRight: \"0.5rem\" }}>\n          Filter by Genre:\n        </label>\n        <select\n          id=\"genre-select\"\n          value={selectedGenre}\n          onChange={(e) =>\n            navigate(e.target.value ? `/news?genre=${e.target.value}` : \"/news\")\n          }\n        >\n          <option value=\"\">All Genres</option>\n          {genres.map((genre) => (\n            <option key={genre.slug} value={genre.slug}>\n              {genre.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"search-bar\">\n        <input\n          ref={textRef}\n          type=\"text\"\n          placeholder=\"Search for Game\"\n          onKeyDown={handleKeyPress}\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n\n      {newsData.map((item) => (\n        <div className=\"game-item\" key={item.slug}>\n          <div\n            className=\"video-container\"\n            onMouseEnter={() => setHoveredGameSlug(item.slug)}\n            onMouseLeave={() => setHoveredGameSlug(null)}\n            onClick={() => handleImageClick(item)}\n          >\n            {hoveredGameSlug === item.slug ? (\n              // Check if trailer has been fetched for this item.\n              trailers[item.slug] === undefined ? (\n                <p>Loading trailer...</p>\n              ) : trailers[item.slug] ? (\n                <iframe\n                  width=\"300\"\n                  height=\"200\"\n                  src={`https://www.youtube.com/embed/${trailers[item.slug].id.videoId}?autoplay=1&mute=1&start=60`}\n                  frameBorder=\"0\"\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowFullScreen\n                  title={item.name}\n                ></iframe>\n              ) : (\n                <img\n                  src={item.background_image}\n                  alt={item.name}\n                  style={{ width: \"300px\", height: \"auto\", cursor: \"pointer\" }}\n                />\n              )\n            ) : (\n              <img\n                src={item.background_image}\n                alt={item.name}\n                style={{ width: \"300px\", height: \"auto\", cursor: \"pointer\" }}\n              />\n            )}\n          </div>\n          <div>\n            {checkAccountType(item.platforms.map((p) => p.platform.name))}\n          </div>\n          <h2>{item.name}</h2>\n          {hoveredGameSlug === item.slug && (\n            <div className=\"game-mini-details\">\n              <p>Release: {item.released}</p>\n              <div className=\"genre-for-game\">\n                <p>\n                  Genres:{\" \"}\n                  {item.genres.map((genre) => (\n                    <span key={genre.slug}>{genre.name} </span>\n                  ))}\n                </p>\n              </div>\n              <div className=\"game-rating\">\n                <p>Rating: </p>\n                {item.rating > 0 ? item.rating : item.averageRating}\n              </div>\n            </div>\n          )}\n          <div className=\"btn-container\">\n            {/* Buttons can be added here if needed */}\n          </div>\n        </div>\n      ))}\n    </>\n  );\n}\n\nexport default News;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}