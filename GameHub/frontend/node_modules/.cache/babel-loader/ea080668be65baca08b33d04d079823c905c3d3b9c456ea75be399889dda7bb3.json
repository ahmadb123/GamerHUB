{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/LandingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = 'http://localhost:8080';\nfunction LandingPage() {\n  _s();\n  const navigate = useNavigate();\n  const validateLocalSession = () => {\n    const platform = localStorage.getItem(\"platform\");\n    console.log(\"Validating session for platform:\", platform);\n    if (platform) {\n      // Check for platform-specific tokens\n      if (platform === \"xbox\") {\n        const uhs = localStorage.getItem(\"uhs\");\n        const XSTS_token = localStorage.getItem(\"XSTS_token\");\n        console.log(\"Xbox tokens - UHS:\", uhs, \"XSTS_token:\", XSTS_token);\n        if (uhs && XSTS_token) {\n          return true; // Xbox tokens are valid\n        }\n      } else {\n        const token = localStorage.getItem(`${platform}Token`);\n        console.log(`${platform} token:`, token);\n        if (token) {\n          return true; // Generic token for PSN/Steam is valid\n        }\n      }\n    }\n\n    // If tokens are missing or invalid\n    console.log(\"Invalid or missing tokens. Clearing platform.\");\n    localStorage.removeItem(\"platform\");\n    return false;\n  };\n  useEffect(() => {\n    if (validateLocalSession()) {\n      navigate(\"/main\"); // Navigate to the main page if session is valid\n    }\n  }, [navigate]);\n  const handleLogin = async platform => {\n    try {\n      const response = await fetch(`${apiUrl}/api/auth/login/${platform}`, {\n        method: \"GET\",\n        credentials: \"include\"\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to initiate login for ${platform}. Status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.redirectUrl) {\n        localStorage.setItem(\"platform\", platform);\n        window.location.href = data.redirectUrl; // Redirect to platform login page\n      } else {\n        toast.error(\"Redirect URL not found.\");\n      }\n    } catch (error) {\n      toast.error(`Login failed: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"landing-page\",\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to GamerHub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select a platform to log in:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        gap: \"20px\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLogin(\"xbox\"),\n        style: buttonStyle(\"green\"),\n        children: \"Xbox Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLogin(\"psn\"),\n        style: buttonStyle(\"blue\"),\n        children: \"PSN Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLogin(\"steam\"),\n        style: buttonStyle(\"gray\"),\n        children: \"Steam Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(LandingPage, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = LandingPage;\nconst buttonStyle = color => ({\n  padding: \"10px 20px\",\n  fontSize: \"16px\",\n  cursor: \"pointer\",\n  backgroundColor: color,\n  color: \"#ffffff\",\n  border: \"none\",\n  borderRadius: \"5px\"\n});\nexport default LandingPage;\nvar _c;\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"names":["React","useEffect","useNavigate","toast","jsxDEV","_jsxDEV","apiUrl","LandingPage","_s","navigate","validateLocalSession","platform","localStorage","getItem","console","log","uhs","XSTS_token","token","removeItem","handleLogin","response","fetch","method","credentials","ok","Error","status","data","json","redirectUrl","setItem","window","location","href","error","message","className","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","gap","onClick","buttonStyle","_c","color","padding","fontSize","cursor","backgroundColor","border","borderRadius","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/LandingPage.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\n\nconst apiUrl = 'http://localhost:8080';\n\nfunction LandingPage() {\n    const navigate = useNavigate();\n\n    const validateLocalSession = () => {\n        const platform = localStorage.getItem(\"platform\");\n\n        console.log(\"Validating session for platform:\", platform);\n\n        if (platform) {\n            // Check for platform-specific tokens\n            if (platform === \"xbox\") {\n                const uhs = localStorage.getItem(\"uhs\");\n                const XSTS_token = localStorage.getItem(\"XSTS_token\");\n                console.log(\"Xbox tokens - UHS:\", uhs, \"XSTS_token:\", XSTS_token);\n                if (uhs && XSTS_token) {\n                    return true; // Xbox tokens are valid\n                }\n            } else {\n                const token = localStorage.getItem(`${platform}Token`);\n                console.log(`${platform} token:`, token);\n                if (token) {\n                    return true; // Generic token for PSN/Steam is valid\n                }\n            }\n        }\n\n        // If tokens are missing or invalid\n        console.log(\"Invalid or missing tokens. Clearing platform.\");\n        localStorage.removeItem(\"platform\");\n        return false;\n    };\n\n    useEffect(() => {\n        if (validateLocalSession()) {\n            navigate(\"/main\"); // Navigate to the main page if session is valid\n        }\n    }, [navigate]);\n\n    const handleLogin = async (platform) => {\n        try {\n            const response = await fetch(`${apiUrl}/api/auth/login/${platform}`, {\n                method: \"GET\",\n                credentials: \"include\",\n            });\n\n            if (!response.ok) {\n                throw new Error(`Failed to initiate login for ${platform}. Status: ${response.status}`);\n            }\n\n            const data = await response.json();\n            if (data.redirectUrl) {\n                localStorage.setItem(\"platform\", platform);\n                window.location.href = data.redirectUrl; // Redirect to platform login page\n            } else {\n                toast.error(\"Redirect URL not found.\");\n            }\n        } catch (error) {\n            toast.error(`Login failed: ${error.message}`);\n        }\n    };\n\n    return (\n        <div className=\"landing-page\" style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n            <h1>Welcome to GamerHub</h1>\n            <p>Select a platform to log in:</p>\n            <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\", marginTop: \"20px\" }}>\n                <button onClick={() => handleLogin(\"xbox\")} style={buttonStyle(\"green\")}>\n                    Xbox Login\n                </button>\n                <button onClick={() => handleLogin(\"psn\")} style={buttonStyle(\"blue\")}>\n                    PSN Login\n                </button>\n                <button onClick={() => handleLogin(\"steam\")} style={buttonStyle(\"gray\")}>\n                    Steam Login\n                </button>\n            </div>\n        </div>\n    );\n}\n\nconst buttonStyle = (color) => ({\n    padding: \"10px 20px\",\n    fontSize: \"16px\",\n    cursor: \"pointer\",\n    backgroundColor: color,\n    color: \"#ffffff\",\n    border: \"none\",\n    borderRadius: \"5px\",\n});\n\nexport default LandingPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}