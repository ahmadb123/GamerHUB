{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/LandingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport { handleLogin, exchangeCodeForTokens } from \"../service/XboxAuthService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faXbox, faPlaystation, faSteam } from \"@fortawesome/free-brands-svg-icons\";\nimport { handleSteamLogin } from \"../service/SteamAuthService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LandingPage() {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const handleXboxLogin = async () => {\n      await exchangeCodeForTokens();\n      localStorage.setItem(\"platform\", \"xbox\");\n      navigate(\"/main\");\n    };\n    const handleSteamReturn = () => {\n      const urlParams = new URLSearchParams(window.location.search);\n      const steamID = urlParams.get(\"steamID\");\n      if (steamID) {\n        localStorage.setItem(\"steamId\", steamID); // ensure key matches the fetch service\n        localStorage.setItem(\"platform\", \"steam\");\n        navigate(\"/main\");\n      }\n    };\n    const urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.get(\"code\")) {\n      handleXboxLogin();\n    }\n    // Check for steamID in URL and navigate to main if present.\n    if (urlParams.get(\"steamID\")) {\n      handleSteamReturn();\n    }\n  }, [navigate]);\n  const handlePlatformLogin = async platform => {\n    if (platform === \"xbox\") {\n      await handleLogin();\n    }\n    if (platform === \"steam\") {\n      await handleSteamLogin();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"landing-page\",\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to GamerHub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select a platform to log in:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        gap: \"20px\",\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlatformLogin(\"xbox\"),\n        style: buttonStyle(\"green\"),\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faXbox,\n          style: {\n            marginRight: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), \"Xbox Login\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlatformLogin(\"psn\"),\n        style: buttonStyle(\"blue\"),\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPlaystation,\n          style: {\n            marginRight: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), \"PSN Login\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlatformLogin(\"steam\"),\n        style: buttonStyle(\"gray\"),\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSteam,\n          style: {\n            marginRight: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), \"Steam Login\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(LandingPage, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = LandingPage;\nconst buttonStyle = color => ({\n  padding: \"10px 20px\",\n  fontSize: \"16px\",\n  cursor: \"pointer\",\n  backgroundColor: color,\n  color: \"#ffffff\",\n  border: \"none\",\n  borderRadius: \"5px\"\n});\nexport default LandingPage;\nvar _c;\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"names":["React","useEffect","useNavigate","toast","handleLogin","exchangeCodeForTokens","FontAwesomeIcon","faXbox","faPlaystation","faSteam","handleSteamLogin","jsxDEV","_jsxDEV","LandingPage","_s","navigate","handleXboxLogin","localStorage","setItem","handleSteamReturn","urlParams","URLSearchParams","window","location","search","steamID","get","handlePlatformLogin","platform","className","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","gap","onClick","buttonStyle","icon","marginRight","_c","color","padding","fontSize","cursor","backgroundColor","border","borderRadius","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/LandingPage.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\nimport { handleLogin, exchangeCodeForTokens } from \"../service/XboxAuthService\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faXbox, faPlaystation, faSteam } from \"@fortawesome/free-brands-svg-icons\";\nimport { handleSteamLogin } from \"../service/SteamAuthService\";\n\nfunction LandingPage() {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const handleXboxLogin = async () => {\n            await exchangeCodeForTokens();\n            localStorage.setItem(\"platform\", \"xbox\");\n            navigate(\"/main\");\n        };\n\n        const handleSteamReturn = () => {\n            const urlParams = new URLSearchParams(window.location.search);\n            const steamID = urlParams.get(\"steamID\");\n            if (steamID) {\n                localStorage.setItem(\"steamId\", steamID); // ensure key matches the fetch service\n                localStorage.setItem(\"platform\", \"steam\");\n                navigate(\"/main\");\n            }\n        };\n\n        const urlParams = new URLSearchParams(window.location.search);\n        if (urlParams.get(\"code\")) {\n            handleXboxLogin();\n        }\n        // Check for steamID in URL and navigate to main if present.\n        if (urlParams.get(\"steamID\")) {\n            handleSteamReturn();\n        }\n    }, [navigate]);\n\n    const handlePlatformLogin = async (platform) => {\n        if (platform === \"xbox\") {\n            await handleLogin();\n        }\n        if (platform === \"steam\") {\n            await handleSteamLogin();\n        }\n    };\n\n    return (\n        <div className=\"landing-page\" style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n            <h1>Welcome to GamerHub</h1>\n            <p>Select a platform to log in:</p>\n            <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\", marginTop: \"20px\" }}>\n                <button onClick={() => handlePlatformLogin(\"xbox\")} style={buttonStyle(\"green\")}>\n                    <FontAwesomeIcon icon={faXbox} style={{ marginRight: \"10px\" }} />\n                    Xbox Login\n                </button>\n                <button onClick={() => handlePlatformLogin(\"psn\")} style={buttonStyle(\"blue\")}>\n                    <FontAwesomeIcon icon={faPlaystation} style={{ marginRight: \"10px\" }} />\n                    PSN Login\n                </button>\n                <button onClick={() => handlePlatformLogin(\"steam\")} style={buttonStyle(\"gray\")}>\n                    <FontAwesomeIcon icon={faSteam} style={{ marginRight: \"10px\" }} />\n                    Steam Login\n                </button>\n            </div>\n        </div>\n    );\n}\n\nconst buttonStyle = (color) => ({\n    padding: \"10px 20px\",\n    fontSize: \"16px\",\n    cursor: \"pointer\",\n    backgroundColor: color,\n    color: \"#ffffff\",\n    border: \"none\",\n    borderRadius: \"5px\",\n});\n\nexport default LandingPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}