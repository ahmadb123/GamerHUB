{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/News.js\",\n  _s = $RefreshSig$();\n// src/components/News.jsx\nimport React, { useEffect, useState } from 'react';\nimport { fetchAllNews } from \"../service/NewsService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction News() {\n  _s();\n  const [news, setNews] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Load dynamic filter options on mount\n  useEffect(() => {\n    const fetchFilters = async () => {\n      try {\n        const fetchedGenres = await fetchGenres();\n        setGenres(fetchedGenres);\n        const fetchedPlatforms = await fetchPlatforms();\n        setPlatforms(fetchedPlatforms);\n      } catch (error) {\n        console.error(\"Error fetching filter options:\", error);\n      }\n    };\n    fetchFilters();\n  }, []);\n\n  // Fetch news whenever filters change\n  useEffect(() => {\n    const fetchFilteredNews = async () => {\n      setLoading(true);\n      try {\n        // You can format dates here if you add date filtering\n        const data = await fetchAllNews({\n          platform: selectedPlatform,\n          genre: selectedGenre\n          // game: searchGame, startDate, endDate can be added if needed\n        });\n        setNews(data);\n      } catch (error) {\n        console.error(\"Error fetching news:\", error);\n      }\n      setLoading(false);\n    };\n    fetchFilteredNews();\n  }, [selectedGenre, selectedPlatform, searchGame, startDate, endDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"News Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Genre:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedGenre,\n          onChange: e => setSelectedGenre(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Genres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: genre.slug,\n            children: genre.name\n          }, genre.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Platform:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedPlatform,\n          onChange: e => setSelectedPlatform(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Platforms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), platforms.map(platform => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: platform.slug,\n            children: platform.name\n          }, platform.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Page is loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : news.length > 0 ? news.map((newsItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: newsItem.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), newsItem.background_image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: newsItem.background_image,\n        alt: newsItem.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Released: \", newsItem.released]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), newsItem.genres && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genres\",\n        children: newsItem.genres.map((g, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: g.name\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No news found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(News, \"OtIbJq1/l0tV7xSNyTRw6ECKOBk=\");\n_c = News;\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","fetchAllNews","jsxDEV","_jsxDEV","News","_s","news","setNews","loading","setLoading","fetchFilters","fetchedGenres","fetchGenres","setGenres","fetchedPlatforms","fetchPlatforms","setPlatforms","error","console","fetchFilteredNews","data","platform","selectedPlatform","genre","selectedGenre","searchGame","startDate","endDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","setSelectedGenre","target","genres","map","slug","name","id","setSelectedPlatform","platforms","length","newsItem","index","background_image","src","alt","released","g","idx","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/News.js"],"sourcesContent":["// src/components/News.jsx\nimport React, { useEffect, useState } from 'react';\nimport { fetchAllNews } from \"../service/NewsService\";\n\nfunction News() {\n  const [news, setNews] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Load dynamic filter options on mount\n  useEffect(() => {\n    const fetchFilters = async () => {\n      try {\n        const fetchedGenres = await fetchGenres();\n        setGenres(fetchedGenres);\n        const fetchedPlatforms = await fetchPlatforms();\n        setPlatforms(fetchedPlatforms);\n      } catch (error) {\n        console.error(\"Error fetching filter options:\", error);\n      }\n    };\n    fetchFilters();\n  }, []);\n\n  // Fetch news whenever filters change\n  useEffect(() => {\n    const fetchFilteredNews = async () => {\n      setLoading(true);\n      try {\n        // You can format dates here if you add date filtering\n        const data = await fetchAllNews({\n          platform: selectedPlatform,\n          genre: selectedGenre,\n          // game: searchGame, startDate, endDate can be added if needed\n        });\n        setNews(data);\n      } catch (error) {\n        console.error(\"Error fetching news:\", error);\n      }\n      setLoading(false);\n    };\n\n    fetchFilteredNews();\n  }, [selectedGenre, selectedPlatform, searchGame, startDate, endDate]);\n\n  return (\n    <div className=\"news\">\n      <h1>News Page</h1>\n      <div className=\"filters\">\n        <label>\n          Genre:\n          <select value={selectedGenre} onChange={e => setSelectedGenre(e.target.value)}>\n            <option value=\"\">All Genres</option>\n            {genres.map(genre => (\n              <option key={genre.id} value={genre.slug}>\n                {genre.name}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label>\n          Platform:\n          <select value={selectedPlatform} onChange={e => setSelectedPlatform(e.target.value)}>\n            <option value=\"\">All Platforms</option>\n            {platforms.map(platform => (\n              <option key={platform.id} value={platform.slug}>\n                {platform.name}\n              </option>\n            ))}\n          </select>\n        </label>\n        {/* Additional filter inputs (like search game, dates) can go here */}\n      </div>\n\n      {loading ? (\n        <p>Page is loading...</p>\n      ) : news.length > 0 ? (\n        news.map((newsItem, index) => (\n          <div key={index} className=\"news-item\">\n            <h2>{newsItem.name}</h2>\n            {newsItem.background_image && (\n              <img src={newsItem.background_image} alt={newsItem.name} />\n            )}\n            <p>Released: {newsItem.released}</p>\n            {newsItem.genres && (\n              <div className=\"genres\">\n                {newsItem.genres.map((g, idx) => (\n                  <span key={idx}>{g.name}</span>\n                ))}\n              </div>\n            )}\n          </div>\n        ))\n      ) : (\n        <p>No news found.</p>\n      )}\n    </div>\n  );\n}\n\nexport default News;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}