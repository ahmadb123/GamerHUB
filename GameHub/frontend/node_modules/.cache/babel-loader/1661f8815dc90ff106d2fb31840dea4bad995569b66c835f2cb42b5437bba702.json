{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/LandinPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = 'http://localhost:8080';\nfunction LandinPage() {\n  _s();\n  const [accountInfo, setAccountInfo] = useState(null);\n  useEffect(() => {\n    const uhs = localStorage.getItem(\"uhs\");\n    const XSTS_token = localStorage.getItem(\"XSTS_token\");\n    if (uhs && XSTS_token) {\n      // user chose to sign in using xbox - fetch profile - \n      fetchProfile(uhs, XSTS_token);\n    } else {\n      toast.error(\"user signed in different platform/error loggin in\");\n    }\n  }, []);\n\n  // get profile data - \n  const fetchProfile = async (uhs, XSTS_token) => {\n    try {\n      const response = await fetch(`${apiUrl}/api/xbox/profile/getProfile`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `XBL3.0 x=${uhs};${XSTS_token}`\n        },\n        credentials: \"include\"\n      });\n      if (!response.ok) {\n        toast.error(\"error occurred.\");\n      }\n      const data = await response.json(); // extract account data from json.\n      setAccountInfo(data);\n    } catch (e) {\n      console.error(e);\n      toast.error(\"error fetching account\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fetching-profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"test profile: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), accountInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"GAMERTAG: \", accountInfo.gamertag]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"DISPLAY NAME: \", accountInfo.gameDisplayName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading profile information...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(LandinPage, \"gOUIjZ0MhPTPPLHGrSCOhbEOWgE=\");\n_c = LandinPage;\nexport default LandinPage;\nvar _c;\n$RefreshReg$(_c, \"LandinPage\");","map":{"version":3,"names":["React","useEffect","useState","toast","jsxDEV","_jsxDEV","apiUrl","LandinPage","_s","accountInfo","setAccountInfo","uhs","localStorage","getItem","XSTS_token","fetchProfile","error","response","fetch","method","headers","Authorization","credentials","ok","data","json","e","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","gamertag","gameDisplayName","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/LandinPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\n\nconst apiUrl = 'http://localhost:8080';\n\n\nfunction LandinPage(){\n    const [accountInfo, setAccountInfo] = useState(null);\n    useEffect(() => {\n        const uhs = localStorage.getItem(\"uhs\");\n        const XSTS_token = localStorage.getItem(\"XSTS_token\");\n        if(uhs && XSTS_token){\n            // user chose to sign in using xbox - fetch profile - \n            fetchProfile(uhs,XSTS_token);\n        }else{\n            toast.error(\"user signed in different platform/error loggin in\");\n        }\n    },[]);\n\n    // get profile data - \n    const fetchProfile = async (uhs,XSTS_token) => {\n        try{\n            const response = await fetch(`${apiUrl}/api/xbox/profile/getProfile`, {\n                method: \"GET\", \n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `XBL3.0 x=${uhs};${XSTS_token}`,\n                },\n                credentials: \"include\",\n            });\n            if(!response.ok){\n                toast.error(\"error occurred.\");\n            }\n            const data = await response.json(); // extract account data from json.\n            setAccountInfo(data);\n        }catch(e){\n            console.error(e);\n            toast.error(\"error fetching account\");\n        }\n    };\n\n    return(\n        <div className=\"fetching-profile\">\n            {/* render account info / profile */}\n            <h1>test profile: </h1>\n            {\n                accountInfo?(\n                    <div>\n                    <h2>GAMERTAG: {accountInfo.gamertag}</h2>\n                    <h2>DISPLAY NAME: {accountInfo.gameDisplayName}</h2>\n                </div>\n            ): (\n                <p>Loading profile information...</p>\n            )\n        }\n        </div>\n    );\n}\n\nexport default LandinPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,MAAM,GAAG,uBAAuB;AAGtC,SAASC,UAAUA,CAAA,EAAE;EAAAC,EAAA;EACjB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpDD,SAAS,CAAC,MAAM;IACZ,MAAMU,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;IACvC,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACrD,IAAGF,GAAG,IAAIG,UAAU,EAAC;MACjB;MACAC,YAAY,CAACJ,GAAG,EAACG,UAAU,CAAC;IAChC,CAAC,MAAI;MACDX,KAAK,CAACa,KAAK,CAAC,mDAAmD,CAAC;IACpE;EACJ,CAAC,EAAC,EAAE,CAAC;;EAEL;EACA,MAAMD,YAAY,GAAG,MAAAA,CAAOJ,GAAG,EAACG,UAAU,KAAK;IAC3C,IAAG;MACC,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGZ,MAAM,8BAA8B,EAAE;QAClEa,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,YAAYV,GAAG,IAAIG,UAAU;QAChD,CAAC;QACDQ,WAAW,EAAE;MACjB,CAAC,CAAC;MACF,IAAG,CAACL,QAAQ,CAACM,EAAE,EAAC;QACZpB,KAAK,CAACa,KAAK,CAAC,iBAAiB,CAAC;MAClC;MACA,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC;MACpCf,cAAc,CAACc,IAAI,CAAC;IACxB,CAAC,QAAME,CAAC,EAAC;MACLC,OAAO,CAACX,KAAK,CAACU,CAAC,CAAC;MAChBvB,KAAK,CAACa,KAAK,CAAC,wBAAwB,CAAC;IACzC;EACJ,CAAC;EAED,oBACIX,OAAA;IAAKuB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAE7BxB,OAAA;MAAAwB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEnBxB,WAAW,gBACPJ,OAAA;MAAAwB,QAAA,gBACAxB,OAAA;QAAAwB,QAAA,GAAI,YAAU,EAACpB,WAAW,CAACyB,QAAQ;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzC5B,OAAA;QAAAwB,QAAA,GAAI,gBAAc,EAACpB,WAAW,CAAC0B,eAAe;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,gBAEN5B,OAAA;MAAAwB,QAAA,EAAG;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACvC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEA,CAAC;AAEd;AAACzB,EAAA,CAnDQD,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AAqDnB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}