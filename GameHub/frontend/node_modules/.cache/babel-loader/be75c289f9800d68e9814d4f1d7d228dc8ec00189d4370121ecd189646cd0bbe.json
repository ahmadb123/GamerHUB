{"ast":null,"code":"const apiUrl = 'http://localhost:8080';\nexport const addFriend = async username => {\n  try {\n    const jwtToken = localStorage.getItem(\"jwtToken\");\n    if (jwtToken === null) {\n      console.error(\"User is not authenticated\");\n      return {\n        success: false,\n        message: \"User is not authenticated\"\n      };\n    }\n    const response = await fetch(`${apiUrl}/api/friends/add?userNameOFRequest=${encodeURIComponent(username)}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': 'Bearer ' + jwtToken\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to add friend. Status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};","map":{"version":3,"names":["apiUrl","addFriend","username","jwtToken","localStorage","getItem","console","error","success","message","response","fetch","encodeURIComponent","method","headers","ok","Error","status","data","json"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/service/AddFriendService.js"],"sourcesContent":["const apiUrl = 'http://localhost:8080';\n\nexport const addFriend = async (username) => {\n    try {\n        const jwtToken = localStorage.getItem(\"jwtToken\");\n        if (jwtToken === null) {\n            console.error(\"User is not authenticated\");\n            return { success: false, message: \"User is not authenticated\" };\n        }\n        const response = await fetch(`${apiUrl}/api/friends/add?userNameOFRequest=${encodeURIComponent(username)}`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Authorization': 'Bearer ' + jwtToken,\n            },\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to add friend. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error(error);\n        throw error;\n    }\n};\n"],"mappings":"AAAA,MAAMA,MAAM,GAAG,uBAAuB;AAEtC,OAAO,MAAMC,SAAS,GAAG,MAAOC,QAAQ,IAAK;EACzC,IAAI;IACA,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACjD,IAAIF,QAAQ,KAAK,IAAI,EAAE;MACnBG,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;MAC1C,OAAO;QAAEC,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAA4B,CAAC;IACnE;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGX,MAAM,sCAAsCY,kBAAkB,CAACV,QAAQ,CAAC,EAAE,EAAE;MACxGW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,SAAS,GAAGX;MACjC;IACJ,CAAC,CAAC;IACF,IAAI,CAACO,QAAQ,CAACK,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,iCAAiCN,QAAQ,CAACO,MAAM,EAAE,CAAC;IACvE;IACA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOX,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}