{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/AuthenticationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthenticationPage = () => {\n  _s();\n  const redirectToMicrosoftLogin = () => {\n    const CLIENT_ID = \"0a23b968-9e79-4cba-b337-862adab7a8e2\";\n    const REDIRECT_URI = \"http://localhost:3000\";\n    const AUTH_ENDPOINT = \"https://login.microsoftonline.com/common/oauth2/v2.0/authorize\";\n    const params = new URLSearchParams({\n      client_id: CLIENT_ID,\n      response_type: \"code\",\n      redirect_uri: REDIRECT_URI,\n      scope: \"XboxLive.signin offline_access\",\n      response_mode: \"query\",\n      state: Math.random().toString(36).substring(7)\n    });\n    window.location.href = `${AUTH_ENDPOINT}?${params.toString()}`;\n  };\n  const handleRedirect = () => {\n    const params = new URLSearchParams(window.location.search);\n    const code = params.get(\"code\");\n    if (code) {\n      console.log(\"Authorization Code:\", code);\n      fetch(\"http://localhost:8080/api/auth/xboxExchange\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          authCode: code\n        })\n      }).then(response => response.json()).then(data => {\n        toast.success(`Welcome, Xbox user!`);\n        console.log(\"Backend Response:\", data);\n      }).catch(error => {\n        console.error(\"Error:\", error);\n        toast.error(\"Login failed!\");\n      });\n    }\n  };\n  useEffect(() => {\n    handleRedirect();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: redirectToMicrosoftLogin,\n      children: \"Sign in with Xbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthenticationPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["React","useEffect","toast","jsxDEV","_jsxDEV","AuthenticationPage","_s","redirectToMicrosoftLogin","CLIENT_ID","REDIRECT_URI","AUTH_ENDPOINT","params","URLSearchParams","client_id","response_type","redirect_uri","scope","response_mode","state","Math","random","toString","substring","window","location","href","handleRedirect","search","code","get","console","log","fetch","method","headers","body","JSON","stringify","authCode","then","response","json","data","success","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ahmadbishara/Desktop/GameHub/frontend/src/pages/AuthenticationPage.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\n\nconst AuthenticationPage = () => {\n  const redirectToMicrosoftLogin = () => {\n    const CLIENT_ID = \"0a23b968-9e79-4cba-b337-862adab7a8e2\";\n    const REDIRECT_URI = \"http://localhost:3000\";\n    const AUTH_ENDPOINT = \"https://login.microsoftonline.com/common/oauth2/v2.0/authorize\";\n    const params = new URLSearchParams({\n      client_id: CLIENT_ID,\n      response_type: \"code\",\n      redirect_uri: REDIRECT_URI,\n      scope: \"XboxLive.signin offline_access\",\n      response_mode: \"query\",\n      state: Math.random().toString(36).substring(7),\n    });\n\n    window.location.href = `${AUTH_ENDPOINT}?${params.toString()}`;\n  };\n\n  const handleRedirect = () => {\n    const params = new URLSearchParams(window.location.search);\n    const code = params.get(\"code\");\n\n    if (code) {\n      console.log(\"Authorization Code:\", code);\n      fetch(\"http://localhost:8080/api/auth/xboxExchange\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ authCode: code }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          toast.success(`Welcome, Xbox user!`);\n          console.log(\"Backend Response:\", data);\n        })\n        .catch((error) => {\n          console.error(\"Error:\", error);\n          toast.error(\"Login failed!\");\n        });\n    }\n  };\n\n  useEffect(() => {\n    handleRedirect();\n  }, []);\n\n  return (\n    <div>\n      <h1>Login</h1>\n      <button onClick={redirectToMicrosoftLogin}>Sign in with Xbox</button>\n    </div>\n  );\n};\n\nexport default AuthenticationPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,wBAAwB,GAAGA,CAAA,KAAM;IACrC,MAAMC,SAAS,GAAG,sCAAsC;IACxD,MAAMC,YAAY,GAAG,uBAAuB;IAC5C,MAAMC,aAAa,GAAG,gEAAgE;IACtF,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC;MACjCC,SAAS,EAAEL,SAAS;MACpBM,aAAa,EAAE,MAAM;MACrBC,YAAY,EAAEN,YAAY;MAC1BO,KAAK,EAAE,gCAAgC;MACvCC,aAAa,EAAE,OAAO;MACtBC,KAAK,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC;IAC/C,CAAC,CAAC;IAEFC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAGf,aAAa,IAAIC,MAAM,CAACU,QAAQ,CAAC,CAAC,EAAE;EAChE,CAAC;EAED,MAAMK,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMf,MAAM,GAAG,IAAIC,eAAe,CAACW,MAAM,CAACC,QAAQ,CAACG,MAAM,CAAC;IAC1D,MAAMC,IAAI,GAAGjB,MAAM,CAACkB,GAAG,CAAC,MAAM,CAAC;IAE/B,IAAID,IAAI,EAAE;MACRE,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,IAAI,CAAC;MACxCI,KAAK,CAAC,6CAA6C,EAAE;QACnDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,QAAQ,EAAEV;QAAK,CAAC;MACzC,CAAC,CAAC,CACCW,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACdxC,KAAK,CAACyC,OAAO,CAAC,qBAAqB,CAAC;QACpCb,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEW,IAAI,CAAC;MACxC,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;QAChBf,OAAO,CAACe,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9B3C,KAAK,CAAC2C,KAAK,CAAC,eAAe,CAAC;MAC9B,CAAC,CAAC;IACN;EACF,CAAC;EAED5C,SAAS,CAAC,MAAM;IACdyB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEtB,OAAA;IAAA0C,QAAA,gBACE1C,OAAA;MAAA0C,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd9C,OAAA;MAAQ+C,OAAO,EAAE5C,wBAAyB;MAAAuC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEV,CAAC;AAAC5C,EAAA,CAlDID,kBAAkB;AAAA+C,EAAA,GAAlB/C,kBAAkB;AAoDxB,eAAeA,kBAAkB;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}